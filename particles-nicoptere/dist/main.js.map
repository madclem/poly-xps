{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 79b16dd522001716fb0f","webpack:///./src/js/index.js","webpack:///../poly.js/src/poly/geometry/Mesh.js","webpack:///../poly.js/src/Poly.js","webpack:///./~/resource-loader/src/Resource.js","webpack:///../poly.js/src/poly/State.js","webpack:///../poly.js/~/gl-matrix/dist/gl-matrix.js","webpack:///./~/eventemitter3/index.js","webpack:///./~/gl-matrix/dist/gl-matrix.js","webpack:///./~/parse-uri/index.js","webpack:///./~/process/browser.js","webpack:///./~/resource-loader/src/async.js","webpack:///../poly.js/src/poly/GLExtensions.js","webpack:///../poly.js/src/poly/const/index.js","webpack:///../poly.js/src/poly/utils/FacesMultiplicator.js","webpack:///../poly.js/src/poly/utils/FacesSeparator.js","webpack:///./src/js/App.js","webpack:///./src/js/scenes/MainScene.js","webpack:///./src/js/scenes/ParticlesScene.js","webpack:///./src/js/utils/Cache.js","webpack:///./src/js/utils/Loader.js","webpack:///./src/js/utils/index.js","webpack:///./~/fontfaceobserver/fontfaceobserver.standalone.js","webpack:///./~/path/path.js","webpack:///./~/resource-loader/src/Loader.js","webpack:///./~/resource-loader/src/b64.js","webpack:///./~/resource-loader/src/index.js","webpack:///./~/resource-loader/src/middlewares/caching/memory.js","webpack:///./~/resource-loader/src/middlewares/parsing/blob.js","webpack:///./~/signals/dist/signals.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///./src/js/manifests/manifest.json","webpack:///./src/js/shaders/basic.frag","webpack:///./src/js/shaders/basic.vert","webpack:///./src/js/shaders/particles.frag","webpack:///./src/js/shaders/particles.vert","webpack:///./src/js/shaders/render.frag","webpack:///./src/js/shaders/render.vert","webpack:///./src/js/shaders/simulation_fs.frag","webpack:///./src/js/shaders/simulation_vs.vert","webpack:///./src/js/shaders/test.frag","webpack:///./src/js/shaders/test.vert","webpack:///../poly.js/src/poly/FrameBuffer.js","webpack:///../poly.js/src/poly/GLTool.js","webpack:///../poly.js/src/poly/Program.js","webpack:///../poly.js/src/poly/camera/Camera.js","webpack:///../poly.js/src/poly/camera/index.js","webpack:///../poly.js/src/poly/control/OrbitalControl.js","webpack:///../poly.js/src/poly/control/index.js","webpack:///../poly.js/src/poly/core/Vector.js","webpack:///../poly.js/src/poly/core/index.js","webpack:///../poly.js/src/poly/geometry/Object3D.js","webpack:///../poly.js/src/poly/geometry/index.js","webpack:///../poly.js/src/poly/geometry/mesh/BigTriangle.js","webpack:///../poly.js/src/poly/geometry/mesh/Cube.js","webpack:///../poly.js/src/poly/geometry/mesh/Quad.js","webpack:///../poly.js/src/poly/geometry/mesh/Sphere.js","webpack:///../poly.js/src/poly/texture/DataTexture.js","webpack:///../poly.js/src/poly/texture/Texture.js","webpack:///../poly.js/src/poly/utils/Loop.js","webpack:///../poly.js/src/poly/utils/index.js","webpack:///../poly.js/src/poly/utils/isPowerOfTwo.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","_interopRequireDefault","_App","_App2","_Poly","POLY","App","_init","canvas","document","getElementById","init","window","addEventListener","resize","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_State","_State2","_Object3D2","_Object3D3","Mesh","_Object3D","program","state","drawType","arguments","length","undefined","this","_this","gl","_attributes","_vertices","_indices","_vertexSize","_numItems","indexBuffer","addIndices","indices","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","addPosition","data","name","addAttribute","itemSize","buffer","ARRAY_BUFFER","Float32Array","push","numItems","addAttributeLocation","global","FrameBuffer","geometry","State","control","cameras","CONST","DataTexture","Texture","utils","GL","Program","_Program","_Program2","_geometry","_geometry2","_FrameBuffer","_FrameBuffer2","_GLTool","_GLTool2","_Texture","_Texture2","_DataTexture","_DataTexture2","_camera","_camera2","_control","_control2","_const","_const2","_utils","getContext","e","console","warn","Resource","url","options","EventEmitter","Error","isDataUrl","indexOf","crossOrigin","loadType","_determineLoadType","xhrType","metadata","error","xhr","isJson","isXml","isImage","isAudio","isVideo","isComplete","isLoading","_dequeue","_boundComplete","complete","bind","_boundOnError","_onError","_boundOnProgress","_onProgress","_boundXhrOnError","_xhrOnError","_boundXhrOnAbort","_xhrOnAbort","_boundXhrOnLoad","_xhrOnLoad","_boundXdrOnTimeout","_xdrOnTimeout","reqType","toString","replace","setExtMap","map","extname","val","substring","parseUri","useXdr","XDomainRequest","XMLHttpRequest","tempAnchor","STATUS_NONE","STATUS_OK","STATUS_EMPTY","removeEventListener","onerror","ontimeout","onprogress","onload","emit","abort","message","xdr","src","firstChild","removeChild","load","cb","setTimeout","once","_determineCrossOrigin","LOAD_TYPE","IMAGE","_loadElement","AUDIO","_loadSourceElement","VIDEO","XHR","_loadXdr","_loadXhr","type","loadElement","Image","createElement","skipSource","typeName","toUpperCase","Audio","navigator","isCocoonJS","Array","isArray","i","appendChild","_createSource","_determineXhrType","open","XHR_RESPONSE_TYPE","JSON","DOCUMENT","responseType","TEXT","send","timeout","mime","substr","lastIndexOf","source","event","target","nodeName","lengthComputable","total","status","statusText","responseText","responseURL","parse","DOMParser","domparser","parseFromString","div","innerHTML","response","loc","location","href","strictMode","samePort","port","protocol","host","hostname","_xhrTypeMap","_getExtension","_loadTypeMap","ext","slashIndex","queryStart","toLowerCase","_getMimeFromXhrType","BUFFER","BLOB","DEFAULT","gif","png","bmp","jpg","jpeg","tif","tiff","webp","tga","svg+xml","xhtml","html","htm","xml","tmx","tsx","svg","json","text","txt","setExtensionLoadType","setExtensionXhrType","_createClass","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","BLEND","DEPTH_TEST","FRONT_FACE","CULL_FACE","BLEND_FUNC","activeState","Uint8Array","defaultState","blendMode","blendModes","alpha","SRC_ALPHA","dest","one","ONE","setState","setBlend","setDepthTest","setFrontFace","setCullFace","setBlendMode","blendFunc","frontFace","get","set","CULLING","root","factory","l","d","getter","o","n","object","property","s","setMatrixArrayType","ARRAY_TYPE","toRadian","a","degree","equals","b","Math","abs","EPSILON","max","RANDOM","random","PI","out","glMatrix","fromMat4","clone","copy","fromValues","m00","m01","m02","m10","m11","m12","m20","m21","m22","identity","transpose","a01","a02","a12","invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","adjoint","determinant","multiply","b00","b02","b10","b12","b20","b22","translate","v","x","y","rotate","rad","sin","cos","scale","fromTranslation","fromRotation","fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","str","frob","sqrt","pow","add","subtract","multiplyScalar","multiplyScalarAndAdd","exactEquals","a0","a1","a2","a3","a4","a5","a6","a7","a8","b0","b1","b2","b3","b4","b5","b6","b7","b8","sub","mul","_common","divide","ceil","floor","min","round","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","rotateX","rotateY","rotateZ","angle","tempA","tempB","cosine","acos","forEach","sqrLen","sqrDist","dist","vec","stride","offset","count","fn","arg","aw","vectorScale","vec4","vec3","vec2","quat","mat4","mat3","mat2d","mat2","_mat","_mat2d","_mat2","_mat3","_quat","_vec","_vec2","_vec3","v0","v1","LDU","L","D","U","tx","ty","aa","ab","ac","ad","atx","aty","m03","m13","m23","m30","m31","m32","m33","axis","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","getTranslation","mat","getScaling","getRotation","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","a9","a14","a15","b9","b13","b14","b15","setAxisAngle","getAxisAngle","out_axis","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","halfToRad","cx","cy","cz","setAxes","sqlerp","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","view","transformMat2","transformMat2d","Events","EE","context","_events","_eventsCount","has","prefix","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","exists","evt","available","ee","args","removeListener","apply","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","opts","parser","strict","loose","exec","uri","$0","$1","$2","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_noop","asyncEachSeries","iterator","callback","next","err","onlyOnce","callFn","asyncQueue","worker","concurrency","_insert","insertAtFront","started","idle","drain","item","_tasks","unshift","_next","task","workers","unsaturated","saturated","empty","paused","kill","shift","running","pause","resume","eachSeries","GLExtensions","extensions","getExtension","checkExtension","uniformTypes","float","int","texture","FacesMultiplicator","indexUniq","middlePointIndexCache","vertices","isNormalised","multiplyTriangles","faces","faces2","tri","getMiddlePoint","addVertex","position","p1","p2","firstPointIsSmaller","smallerIndex","greaterIndex","point1","point2","middle","FacesSeparator","separate","triangles","ind","oldVerts","newVertices","_MainScene","_ParticlesScene","_ParticlesScene2","Manifests","ASSET_URL","clearColor","loader","Loader","addManifest","onComplete","_loadComplete","scene","loop","_update","clientWidth","clientHeight","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","render","_basic","_basic2","_basic3","_basic4","_glMatrix","MainScene","sphere","rot","tick","modelMatrix","camera","PerspectiveCamera","aspectRatio","orbitalControl","OrbitalControl","matrix","_matrix","normalMatrix","depthTest","fbo","vertQuad","fragQuad","textureCrate","programQuad","projectionMatrix","viewMatrix","uTexture","quad","textureSpecular","uniforms","index","uTextureSpecular","uAmbientColor","uPointLightingLocation","uPointLightingDiffuseColor","uPointLightingSpecularColor","uMaterialShininess","uAlpha","Cube","update","rotation","draw","unbind","textures","setAspectRatio","_particles","_particles3","_simulation_fs","_simulation_fs2","_simulation_vs","_simulation_vs2","_render","_render2","_render3","_render4","_test","_test3","ParticlesScene","stateRendering","h","dataTexture","simulationProgram","geomSim","Quad","renderingProgram","pointSize","i3","geomRendering","POINTS","Cache","_json","_text","addJson","getJson","_signals","_signals2","_path","_path2","_Cache","_Cache2","_resourceLoader","_resourceLoader2","_fontfaceobserver","_fontfaceobserver2","crossdomain","assetsToLoad","ajaxRequest","_onFileLoaded","onreadystatechange","fileCount","filesToLoad","fontsToLoad","soundsToLoad","customToLoad","onProgress","addFonts","fonts","basename","fileData","addAssets","assets","addCSS","link","rel","getElementsByTagName","_loadFonts","_loadFiles","_loadNextFile","_loadAssets","CUSTOM","onLoaded","addOnce","addText","jsonObject","_getFonts","Promise","all","then","manifest","assetsManifest","path","_onComplete","assetLoader","loadedResources","dispatch","progress","_Loader","_Loader2","attachEvent","body","readyState","detachEvent","setAttribute","createTextNode","g","style","cssText","offsetWidth","scrollLeft","scrollWidth","parentNode","A","family","weight","stretch","I","E","font","J","join","B","C","F","G","Date","getTime","test","userAgent","vendor","K","race","parseInt","u","H","hidden","normalizeArray","parts","allowAboveRoot","res","pop","trimArray","arr","lastIndex","start","end","win32SplitPath","filename","result","splitDeviceRe","device","tail","result2","splitTailRe","win32StatPath","isUnc","isAbsolute","normalizeUNCRoot","posixSplitPath","splitPathRe","isWindows","platform","util","win32","resolve","resolvedDevice","resolvedTail","resolvedAbsolute","isString","split","trailingSlash","paths","joined","relative","from","to","lowerFrom","lowerTo","toParts","lowerFromParts","lowerToParts","samePartsLength","outputParts","_makeLong","resolvedPath","dirname","format","pathObject","isObject","base","sep","pathString","allParts","delimiter","posix","charAt","segment","fromParts","baseUrl","DEFAULT_CONCURRENCY","loading","_progressChunk","_beforeMiddleware","_afterMiddleware","_boundLoadResource","_loadResource","_buffer","_numToLoad","_queue","async","resources","MAX_PROGRESS","enqueue","_prepareUrl","before","pre","after","use","reset","_onLoad","parsedUrl","resource","dequeue","_keyStr","encodeBinary","input","bytebuffer","output","encodedCharIndexes","inx","jnx","paddingBytes","charCodeAt","middleware","caching","memory","parsing","blob","cache","b64","Url","URL","webkitURL","Blob","createObjectURL","revokeObjectURL","getResponseHeader","__WEBPACK_AMD_DEFINE_RESULT__","SignalBinding","signal","isOnce","listenerContext","priority","_listener","_isOnce","_signal","_priority","validateListener","fnName","Signal","_bindings","_prevParams","active","params","execute","paramsArr","handlerReturn","detach","isBound","remove","getListener","getSignal","_destroy","VERSION","memorize","_shouldPropagate","_registerListener","prevIndex","_indexOfListener","_addBinding","splice","cur","removeAll","getNumListeners","halt","bindings","forget","dispose","signals","ctor","superCtor","super_","TempCtor","fill","readUInt8","inspect","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","hash","idx","recurseTimes","isFunction","ret","primitive","formatPrimitive","keys","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","stringify","isNumber","isNull","String","match","desc","getOwnPropertyDescriptor","line","numLinesEst","reduce","prev","ar","isNullOrUndefined","isSymbol","re","objectToString","isPrimitive","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","objects","Number","_","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isBuffer","log","inherits","origin","_GLExtensions","_GLExtensions2","UNSIGNED_BYTE","extHalfFloat","FLOAT","HALF_FLOAT_OES","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","createTexture","gltexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","texImage2D","RGB","renderBufferDepth","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","clean","viewport","_texture","GLTool","_lastMesh","_lastProgram","enabledVertexAttributes","_bindBuffers","mesh","attrib","attribLocation","getAttributeLocation","vertexAttribPointer","enableVertexAttribArray","drawElements","UNSIGNED_SHORT","drawArrays","viewportWidth","viewportHeight","vertShader","fragShader","cacheAttributesLocation","cacheUniformsLocation","createProgram","vert","_createShader","frag","_attachShaders","linkProgram","getProgramParameter","LINK_STATUS","useProgram","_createGetterSetterUniforms","uniform","addUniformLocation","getUniformLocation","Proxy","glFunction","getAttribLocation","attachShader","isVertex","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","Camera","mRX","mRY","mRZ","mT","setRotation","setPosition","orthographic","dst","_Camera","_Camera2","getCursorPos","touches","pageX","pageY","clientX","clientY","UP","OrbitalCameraControl","mViewMatrix","mRadius","mListenerTarget","_mtxTarget","_radius","_targetRadius","_listenerTarget","_isDown","_rotation","easing","senstivity","senstivityRotation","_isLocked","_isZoomLocked","_rx","_trx","_prevx","_ry","_try","_prevy","_mtx","_mouseDown","_mouse","_onDown","_onUp","_onMove","_onWheel","lock","mValue","lockZoom","wheelDelta","detail","dx","dy","_OrbitalControl","_OrbitalControl2","Vector","_x","_y","_z","_Vector","_Vector2","_core","_core2","Object3D","_needsUpdate","_onPropertyUpdate","_scale","_position","_updateMatrix","_Mesh","_Mesh2","_Cube","_Cube2","_Sphere","_Sphere2","_BigTriangle","_BigTriangle2","_Quad","_Quad2","Sphere","BigTriangle","_Mesh3","_FacesMultiplicator","_FacesSeparator","positions","_FacesMultiplicator2","multiFace","subdivision","cube","coords","normals","nbVert","radius","uv","dTex","getAngle","ry","rx","pos","RGBA","isPowerOfTwo","activeTexture","TEXTURE0","image","isTexture","onImageLoaded","pixelStorei","UNPACK_FLIP_Y_WEBGL","Loop","_loops","_idLoop","_active","func","scope","requestAnimationFrame","stop","_Loop","_Loop2","_isPowerOfTwo","_isPowerOfTwo2"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _App = __webpack_require__(15);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Poly = __webpack_require__(2);\n\t\n\tvar POLY = _interopRequireWildcard(_Poly);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar App = void 0;\n\tvar _init = function _init() {\n\t  var canvas = document.getElementById(\"canvas\");\n\t  POLY.init(canvas);\n\t\n\t  App = new _App2.default();\n\t  window.addEventListener('resize', resize);\n\t\n\t  resize();\n\t};\n\t\n\tvar resize = function resize() {\n\t  App.resize();\n\t};\n\t\n\t_init();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _State = __webpack_require__(4);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tvar _Object3D2 = __webpack_require__(52);\n\t\n\tvar _Object3D3 = _interopRequireDefault(_Object3D2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Mesh = function (_Object3D) {\n\t\t_inherits(Mesh, _Object3D);\n\t\n\t\tfunction Mesh(program, state) {\n\t\t\tvar drawType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n\t\n\t\t\t_classCallCheck(this, Mesh);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, _Object3D.call(this));\n\t\n\t\t\t_this.program = program;\n\t\t\t_this.state = state || new _State2.default(_this.program.gl);\n\t\t\t_this.drawType = drawType;\n\t\t\t_this._attributes = [];\n\t\t\t_this._vertices = [];\n\t\t\t_this._indices = [];\n\t\t\t_this._vertexSize = 0;\n\t\t\t_this._numItems = 0;\n\t\t\t_this.indexBuffer = null;\n\t\t\treturn _this;\n\t\t}\n\t\n\t\tMesh.prototype.addIndices = function addIndices(indices, dynamic) {\n\t\t\tvar gl = this.program.gl;\n\t\t\tvar drawType = dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\t\tthis._indices = indices;\n\t\n\t\t\tthis.indexBuffer = gl.createBuffer();\n\t\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), drawType);\n\t\t};\n\t\n\t\tMesh.prototype.addPosition = function addPosition(data) {\n\t\t\tvar name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'aPosition';\n\t\n\t\t\tthis._vertices = data;\n\t\t\tthis._vertexSize = this._vertices.length;\n\t\t\tthis._numItems = this._vertexSize / 3;\n\t\t\tthis.addAttribute(data, name);\n\t\t};\n\t\n\t\tMesh.prototype.addAttribute = function addAttribute(data, name) {\n\t\t\tvar itemSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n\t\n\t\t\tvar gl = this.program.gl;\n\t\t\tvar buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n\t\n\t\t\t// console.log('data', data);\n\t\t\tthis._attributes.push({\n\t\t\t\tname: name,\n\t\t\t\tdata: data,\n\t\t\t\titemSize: itemSize,\n\t\t\t\tnumItems: this._numItems,\n\t\t\t\tbuffer: buffer\n\t\t\t});\n\t\n\t\t\tthis.program.addAttributeLocation(name);\n\t\t};\n\t\n\t\treturn Mesh;\n\t}(_Object3D3.default);\n\t\n\texports.default = Mesh;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\texports.__esModule = true;\n\texports.FrameBuffer = exports.geometry = exports.State = exports.control = exports.cameras = exports.CONST = exports.DataTexture = exports.Texture = exports.utils = exports.GL = exports.Program = exports.init = undefined;\n\t\n\tvar _Program = __webpack_require__(45);\n\t\n\tvar _Program2 = _interopRequireDefault(_Program);\n\t\n\tvar _geometry = __webpack_require__(53);\n\t\n\tvar _geometry2 = _interopRequireDefault(_geometry);\n\t\n\tvar _FrameBuffer = __webpack_require__(43);\n\t\n\tvar _FrameBuffer2 = _interopRequireDefault(_FrameBuffer);\n\t\n\tvar _GLTool = __webpack_require__(44);\n\t\n\tvar _GLTool2 = _interopRequireDefault(_GLTool);\n\t\n\tvar _Texture = __webpack_require__(59);\n\t\n\tvar _Texture2 = _interopRequireDefault(_Texture);\n\t\n\tvar _DataTexture = __webpack_require__(58);\n\t\n\tvar _DataTexture2 = _interopRequireDefault(_DataTexture);\n\t\n\tvar _camera = __webpack_require__(47);\n\t\n\tvar _camera2 = _interopRequireDefault(_camera);\n\t\n\tvar _control = __webpack_require__(49);\n\t\n\tvar _control2 = _interopRequireDefault(_control);\n\t\n\tvar _State = __webpack_require__(4);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tvar _const = __webpack_require__(12);\n\t\n\tvar _const2 = _interopRequireDefault(_const);\n\t\n\tvar _utils = __webpack_require__(61);\n\t\n\tvar utils = _interopRequireWildcard(_utils);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar init = function init(canvas) {\n\t    var gl = void 0;\n\t    try {\n\t        gl = canvas.getContext(\"webgl\");\n\t\n\t        POLY.gl = gl;\n\t        POLY.GL.init(gl);\n\t    } catch (e) {}\n\t\n\t    if (!gl) {\n\t        console.warn(\"Could not initialise WebGL\");\n\t    }\n\t};\n\t\n\texports.init = init;\n\texports.Program = _Program2.default;\n\texports.GL = _GLTool2.default;\n\texports.utils = utils;\n\texports.Texture = _Texture2.default;\n\texports.DataTexture = _DataTexture2.default;\n\texports.CONST = _const2.default;\n\texports.cameras = _camera2.default;\n\texports.control = _control2.default;\n\texports.State = _State2.default;\n\texports.geometry = _geometry2.default;\n\texports.FrameBuffer = _FrameBuffer2.default;\n\t\n\t\n\tglobal.POLY = exports; // eslint-disable-line\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar EventEmitter    = __webpack_require__(6);\n\tvar parseUri        = __webpack_require__(8);\n\t\n\t// tests is CORS is supported in XHR, if not we need to use XDR\n\tvar useXdr = !!(window.XDomainRequest && !('withCredentials' in (new XMLHttpRequest())));\n\tvar tempAnchor = null;\n\t\n\t// some status constants\n\tvar STATUS_NONE = 0;\n\tvar STATUS_OK = 200;\n\tvar STATUS_EMPTY = 204;\n\t\n\t/**\n\t * Manages the state and loading of a single resource represented by\n\t * a single URL.\n\t *\n\t * @class\n\t * @param {string} name - The name of the resource to load.\n\t * @param {string|string[]} url - The url for this resource, for audio/video loads you can pass an array of sources.\n\t * @param {object} [options] - The options for the load.\n\t * @param {string|boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n\t * @param {Resource.LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n\t * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n\t *      loaded be interpreted when using XHR?\n\t * @param {object} [options.metadata] - Extra info for middleware.\n\t */\n\tfunction Resource(name, url, options) {\n\t    EventEmitter.call(this);\n\t\n\t    options = options || {};\n\t\n\t    if (typeof name !== 'string' || typeof url !== 'string') {\n\t        throw new Error('Both name and url are required for constructing a resource.');\n\t    }\n\t\n\t    /**\n\t     * The name of this resource.\n\t     *\n\t     * @member {string}\n\t     * @readonly\n\t     */\n\t    this.name = name;\n\t\n\t    /**\n\t     * The url used to load this resource.\n\t     *\n\t     * @member {string}\n\t     * @readonly\n\t     */\n\t    this.url = url;\n\t\n\t    /**\n\t     * Stores whether or not this url is a data url.\n\t     *\n\t     * @member {boolean}\n\t     * @readonly\n\t     */\n\t    this.isDataUrl = this.url.indexOf('data:') === 0;\n\t\n\t    /**\n\t     * The data that was loaded by the resource.\n\t     *\n\t     * @member {any}\n\t     */\n\t    this.data = null;\n\t\n\t    /**\n\t     * Is this request cross-origin? If unset, determined automatically.\n\t     *\n\t     * @member {string}\n\t     */\n\t    this.crossOrigin = options.crossOrigin === true ? 'anonymous' : options.crossOrigin;\n\t\n\t    /**\n\t     * The method of loading to use for this resource.\n\t     *\n\t     * @member {Resource.LOAD_TYPE}\n\t     */\n\t    this.loadType = options.loadType || this._determineLoadType();\n\t\n\t    /**\n\t     * The type used to load the resource via XHR. If unset, determined automatically.\n\t     *\n\t     * @member {string}\n\t     */\n\t    this.xhrType = options.xhrType;\n\t\n\t    /**\n\t     * Extra info for middleware, and controlling specifics about how the resource loads.\n\t     *\n\t     * Note that if you pass in a `loadElement`, the Resource class takes ownership of it.\n\t     * Meaning it will modify it as it sees fit.\n\t     *\n\t     * @member {object}\n\t     * @property {HTMLImageElement|HTMLAudioElement|HTMLVideoElement} [loadElement=null] - The\n\t     *  element to use for loading, instead of creating one.\n\t     * @property {boolean} [skipSource=false] - Skips adding source(s) to the load element. This\n\t     *  is useful if you want to pass in a `loadElement` that you already added load sources\n\t     *  to.\n\t     */\n\t    this.metadata = options.metadata || {};\n\t\n\t    /**\n\t     * The error that occurred while loading (if any).\n\t     *\n\t     * @member {Error}\n\t     * @readonly\n\t     */\n\t    this.error = null;\n\t\n\t    /**\n\t     * The XHR object that was used to load this resource. This is only set\n\t     * when `loadType` is `Resource.LOAD_TYPE.XHR`.\n\t     *\n\t     * @member {XMLHttpRequest}\n\t     */\n\t    this.xhr = null;\n\t\n\t    /**\n\t     * Describes if this resource was loaded as json. Only valid after the resource\n\t     * has completely loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isJson = false;\n\t\n\t    /**\n\t     * Describes if this resource was loaded as xml. Only valid after the resource\n\t     * has completely loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isXml = false;\n\t\n\t    /**\n\t     * Describes if this resource was loaded as an image tag. Only valid after the resource\n\t     * has completely loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isImage = false;\n\t\n\t    /**\n\t     * Describes if this resource was loaded as an audio tag. Only valid after the resource\n\t     * has completely loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isAudio = false;\n\t\n\t    /**\n\t     * Describes if this resource was loaded as a video tag. Only valid after the resource\n\t     * has completely loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isVideo = false;\n\t\n\t    /**\n\t     * Describes if this resource has finished loading. Is true when the resource has completely\n\t     * loaded.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isComplete = false;\n\t\n\t    /**\n\t     * Describes if this resource is currently loading. Is true when the resource starts loading,\n\t     * and is false again when complete.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.isLoading = false;\n\t\n\t    /**\n\t     * The `dequeue` method that will be used a storage place for the async queue dequeue method\n\t     * used privately by the loader.\n\t     *\n\t     * @private\n\t     * @member {function}\n\t     */\n\t    this._dequeue = null;\n\t\n\t    /**\n\t     * The `complete` function bound to this resource's context.\n\t     *\n\t     * @private\n\t     * @member {function}\n\t     */\n\t    this._boundComplete = this.complete.bind(this);\n\t\n\t    /**\n\t     * The `_onError` function bound to this resource's context.\n\t     *\n\t     * @private\n\t     * @member {function}\n\t     */\n\t    this._boundOnError = this._onError.bind(this);\n\t\n\t    /**\n\t     * The `_onProgress` function bound to this resource's context.\n\t     *\n\t     * @private\n\t     * @member {function}\n\t     */\n\t    this._boundOnProgress = this._onProgress.bind(this);\n\t\n\t    // xhr callbacks\n\t    this._boundXhrOnError = this._xhrOnError.bind(this);\n\t    this._boundXhrOnAbort = this._xhrOnAbort.bind(this);\n\t    this._boundXhrOnLoad = this._xhrOnLoad.bind(this);\n\t    this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this);\n\t\n\t    /**\n\t     * Emitted when the resource beings to load.\n\t     *\n\t     * @event start\n\t     * @memberof Resource#\n\t     */\n\t\n\t    /**\n\t     * Emitted each time progress of this resource load updates.\n\t     * Not all resources types and loader systems can support this event\n\t     * so sometimes it may not be available. If the resource\n\t     * is being loaded on a modern browser, using XHR, and the remote server\n\t     * properly sets Content-Length headers, then this will be available.\n\t     *\n\t     * @event progress\n\t     * @memberof Resource#\n\t     */\n\t\n\t    /**\n\t     * Emitted once this resource has loaded, if there was an error it will\n\t     * be in the `error` property.\n\t     *\n\t     * @event complete\n\t     * @memberof Resource#\n\t     */\n\t}\n\t\n\tResource.prototype = Object.create(EventEmitter.prototype);\n\tResource.prototype.constructor = Resource;\n\tmodule.exports = Resource;\n\t\n\t/**\n\t * Marks the resource as complete.\n\t *\n\t * @fires complete\n\t */\n\tResource.prototype.complete = function () {\n\t    // TODO: Clean this up in a wrapper or something...gross....\n\t    if (this.data && this.data.removeEventListener) {\n\t        this.data.removeEventListener('error', this._boundOnError, false);\n\t        this.data.removeEventListener('load', this._boundComplete, false);\n\t        this.data.removeEventListener('progress', this._boundOnProgress, false);\n\t        this.data.removeEventListener('canplaythrough', this._boundComplete, false);\n\t    }\n\t\n\t    if (this.xhr) {\n\t        if (this.xhr.removeEventListener) {\n\t            this.xhr.removeEventListener('error', this._boundXhrOnError, false);\n\t            this.xhr.removeEventListener('abort', this._boundXhrOnAbort, false);\n\t            this.xhr.removeEventListener('progress', this._boundOnProgress, false);\n\t            this.xhr.removeEventListener('load', this._boundXhrOnLoad, false);\n\t        }\n\t        else {\n\t            this.xhr.onerror = null;\n\t            this.xhr.ontimeout = null;\n\t            this.xhr.onprogress = null;\n\t            this.xhr.onload = null;\n\t        }\n\t    }\n\t\n\t    if (this.isComplete) {\n\t        throw new Error('Complete called again for an already completed resource.');\n\t    }\n\t\n\t    this.isComplete = true;\n\t    this.isLoading = false;\n\t\n\t    this.emit('complete', this);\n\t};\n\t\n\t/**\n\t * Aborts the loading of this resource, with an optional message.\n\t *\n\t * @param {string} message - The message to use for the error\n\t */\n\tResource.prototype.abort = function (message) {\n\t    // abort can be called multiple times, ignore subsequent calls.\n\t    if (this.error) {\n\t        return;\n\t    }\n\t\n\t    // store error\n\t    this.error = new Error(message);\n\t\n\t    // abort the actual loading\n\t    if (this.xhr) {\n\t        this.xhr.abort();\n\t    }\n\t    else if (this.xdr) {\n\t        this.xdr.abort();\n\t    }\n\t    else if (this.data) {\n\t        // single source\n\t        if (typeof this.data.src !== 'undefined') {\n\t            this.data.src = '';\n\t        }\n\t        // multi-source\n\t        else {\n\t            while (this.data.firstChild) {\n\t                this.data.removeChild(this.data.firstChild);\n\t            }\n\t        }\n\t    }\n\t\n\t    // done now.\n\t    this.complete();\n\t};\n\t\n\t/**\n\t * Kicks off loading of this resource. This method is asynchronous.\n\t *\n\t * @fires start\n\t * @param {function} [cb] - Optional callback to call once the resource is loaded.\n\t */\n\tResource.prototype.load = function (cb) {\n\t    if (this.isLoading) {\n\t        return;\n\t    }\n\t\n\t    if (this.isComplete) {\n\t        if (cb) {\n\t            var self = this;\n\t\n\t            setTimeout(function () {\n\t                cb(self);\n\t            }, 1);\n\t        }\n\t\n\t        return;\n\t    }\n\t    else if (cb) {\n\t        this.once('complete', cb);\n\t    }\n\t\n\t    this.isLoading = true;\n\t\n\t    this.emit('start', this);\n\t\n\t    // if unset, determine the value\n\t    if (this.crossOrigin === false || typeof this.crossOrigin !== 'string') {\n\t        this.crossOrigin = this._determineCrossOrigin(this.url);\n\t    }\n\t\n\t    switch (this.loadType) {\n\t        case Resource.LOAD_TYPE.IMAGE:\n\t            this._loadElement('image');\n\t            break;\n\t\n\t        case Resource.LOAD_TYPE.AUDIO:\n\t            this._loadSourceElement('audio');\n\t            break;\n\t\n\t        case Resource.LOAD_TYPE.VIDEO:\n\t            this._loadSourceElement('video');\n\t            break;\n\t\n\t        case Resource.LOAD_TYPE.XHR:\n\t            /* falls through */\n\t        default:\n\t            if (useXdr && this.crossOrigin) {\n\t                this._loadXdr();\n\t            }\n\t            else {\n\t                this._loadXhr();\n\t            }\n\t            break;\n\t    }\n\t};\n\t\n\t/**\n\t * Loads this resources using an element that has a single source,\n\t * like an HTMLImageElement.\n\t *\n\t * @private\n\t * @param {string} type - The type of element to use.\n\t */\n\tResource.prototype._loadElement = function (type) {\n\t    if (this.metadata.loadElement) {\n\t        this.data = this.metadata.loadElement;\n\t    }\n\t    else if (type === 'image' && typeof window.Image !== 'undefined') {\n\t        this.data = new Image();\n\t    }\n\t    else {\n\t        this.data = document.createElement(type);\n\t    }\n\t\n\t    if (this.crossOrigin) {\n\t        this.data.crossOrigin = this.crossOrigin;\n\t    }\n\t\n\t    if (!this.metadata.skipSource) {\n\t        this.data.src = this.url;\n\t    }\n\t\n\t    var typeName = 'is' + type[0].toUpperCase() + type.substring(1);\n\t\n\t    if (this[typeName] === false) {\n\t        this[typeName] = true;\n\t    }\n\t\n\t    this.data.addEventListener('error', this._boundOnError, false);\n\t    this.data.addEventListener('load', this._boundComplete, false);\n\t    this.data.addEventListener('progress', this._boundOnProgress, false);\n\t};\n\t\n\t/**\n\t * Loads this resources using an element that has multiple sources,\n\t * like an HTMLAudioElement or HTMLVideoElement.\n\t *\n\t * @private\n\t * @param {string} type - The type of element to use.\n\t */\n\tResource.prototype._loadSourceElement = function (type) {\n\t    if (this.metadata.loadElement) {\n\t        this.data = this.metadata.loadElement;\n\t    }\n\t    else if (type === 'audio' && typeof window.Audio !== 'undefined') {\n\t        this.data = new Audio();\n\t    }\n\t    else {\n\t        this.data = document.createElement(type);\n\t    }\n\t\n\t    if (this.data === null) {\n\t        this.abort('Unsupported element ' + type);\n\t\n\t        return;\n\t    }\n\t\n\t    if (!this.metadata.skipSource) {\n\t        // support for CocoonJS Canvas+ runtime, lacks document.createElement('source')\n\t        if (navigator.isCocoonJS) {\n\t            this.data.src = Array.isArray(this.url) ? this.url[0] : this.url;\n\t        }\n\t        else if (Array.isArray(this.url)) {\n\t            for (var i = 0; i < this.url.length; ++i) {\n\t                this.data.appendChild(this._createSource(type, this.url[i]));\n\t            }\n\t        }\n\t        else {\n\t            this.data.appendChild(this._createSource(type, this.url));\n\t        }\n\t    }\n\t\n\t    this['is' + type[0].toUpperCase() + type.substring(1)] = true;\n\t\n\t    this.data.addEventListener('error', this._boundOnError, false);\n\t    this.data.addEventListener('load', this._boundComplete, false);\n\t    this.data.addEventListener('progress', this._boundOnProgress, false);\n\t    this.data.addEventListener('canplaythrough', this._boundComplete, false);\n\t\n\t    this.data.load();\n\t};\n\t\n\t/**\n\t * Loads this resources using an XMLHttpRequest.\n\t *\n\t * @private\n\t */\n\tResource.prototype._loadXhr = function () {\n\t    // if unset, determine the value\n\t    if (typeof this.xhrType !== 'string') {\n\t        this.xhrType = this._determineXhrType();\n\t    }\n\t\n\t    var xhr = this.xhr = new XMLHttpRequest();\n\t\n\t    // set the request type and url\n\t    xhr.open('GET', this.url, true);\n\t\n\t    // load json as text and parse it ourselves. We do this because some browsers\n\t    // *cough* safari *cough* can't deal with it.\n\t    if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON || this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n\t        xhr.responseType = Resource.XHR_RESPONSE_TYPE.TEXT;\n\t    }\n\t    else {\n\t        xhr.responseType = this.xhrType;\n\t    }\n\t\n\t    xhr.addEventListener('error', this._boundXhrOnError, false);\n\t    xhr.addEventListener('abort', this._boundXhrOnAbort, false);\n\t    xhr.addEventListener('progress', this._boundOnProgress, false);\n\t    xhr.addEventListener('load', this._boundXhrOnLoad, false);\n\t\n\t    xhr.send();\n\t};\n\t\n\t/**\n\t * Loads this resources using an XDomainRequest. This is here because we need to support IE9 (gross).\n\t *\n\t * @private\n\t */\n\tResource.prototype._loadXdr = function () {\n\t    // if unset, determine the value\n\t    if (typeof this.xhrType !== 'string') {\n\t        this.xhrType = this._determineXhrType();\n\t    }\n\t\n\t    var xdr = this.xhr = new XDomainRequest();\n\t\n\t    // XDomainRequest has a few quirks. Occasionally it will abort requests\n\t    // A way to avoid this is to make sure ALL callbacks are set even if not used\n\t    // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n\t    xdr.timeout = 5000;\n\t\n\t    xdr.onerror = this._boundXhrOnError;\n\t    xdr.ontimeout = this._boundXdrOnTimeout;\n\t    xdr.onprogress = this._boundOnProgress;\n\t    xdr.onload = this._boundXhrOnLoad;\n\t\n\t    xdr.open('GET', this.url, true);\n\t\n\t    // Note: The xdr.send() call is wrapped in a timeout to prevent an\n\t    // issue with the interface where some requests are lost if multiple\n\t    // XDomainRequests are being sent at the same time.\n\t    // Some info here: https://github.com/photonstorm/phaser/issues/1248\n\t    setTimeout(function () {\n\t        xdr.send();\n\t    }, 0);\n\t};\n\t\n\t/**\n\t * Creates a source used in loading via an element.\n\t *\n\t * @private\n\t * @param {string} type - The element type (video or audio).\n\t * @param {string} url - The source URL to load from.\n\t * @param {string} [mime] - The mime type of the video\n\t * @return {HTMLSourceElement} The source element.\n\t */\n\tResource.prototype._createSource = function (type, url, mime) {\n\t    if (!mime) {\n\t        mime = type + '/' + url.substr(url.lastIndexOf('.') + 1);\n\t    }\n\t\n\t    var source = document.createElement('source');\n\t\n\t    source.src = url;\n\t    source.type = mime;\n\t\n\t    return source;\n\t};\n\t\n\t/**\n\t * Called if a load errors out.\n\t *\n\t * @param {Event} event - The error event from the element that emits it.\n\t * @private\n\t */\n\tResource.prototype._onError = function (event) {\n\t    this.abort('Failed to load element using ' + event.target.nodeName);\n\t};\n\t\n\t/**\n\t * Called if a load progress event fires for xhr/xdr.\n\t *\n\t * @fires progress\n\t * @private\n\t * @param {XMLHttpRequestProgressEvent|Event} event - Progress event.\n\t */\n\tResource.prototype._onProgress = function (event) {\n\t    if (event && event.lengthComputable) {\n\t        this.emit('progress', this, event.loaded / event.total);\n\t    }\n\t};\n\t\n\t/**\n\t * Called if an error event fires for xhr/xdr.\n\t *\n\t * @private\n\t * @param {XMLHttpRequestErrorEvent|Event} event - Error event.\n\t */\n\tResource.prototype._xhrOnError = function () {\n\t    var xhr = this.xhr;\n\t\n\t    this.abort(reqType(xhr) + ' Request failed. Status: ' + xhr.status + ', text: \"' + xhr.statusText + '\"');\n\t};\n\t\n\t/**\n\t * Called if an abort event fires for xhr.\n\t *\n\t * @private\n\t * @param {XMLHttpRequestAbortEvent} event - Abort Event\n\t */\n\tResource.prototype._xhrOnAbort = function () {\n\t    this.abort(reqType(this.xhr) + ' Request was aborted by the user.');\n\t};\n\t\n\t/**\n\t * Called if a timeout event fires for xdr.\n\t *\n\t * @private\n\t * @param {Event} event - Timeout event.\n\t */\n\tResource.prototype._xdrOnTimeout = function () {\n\t    this.abort(reqType(this.xhr) + ' Request timed out.');\n\t};\n\t\n\t/**\n\t * Called when data successfully loads from an xhr/xdr request.\n\t *\n\t * @private\n\t * @param {XMLHttpRequestLoadEvent|Event} event - Load event\n\t */\n\tResource.prototype._xhrOnLoad = function () {\n\t    var xhr = this.xhr;\n\t    var status = typeof xhr.status === 'undefined' ? xhr.status : STATUS_OK; // XDR has no `.status`, assume 200.\n\t\n\t    // status can be 0 when using the file:// protocol, also check if a response was found\n\t    if (status === STATUS_OK || status === STATUS_EMPTY || (status === STATUS_NONE && xhr.responseText.length > 0)) {\n\t        // if text, just return it\n\t        if (this.xhrType === Resource.XHR_RESPONSE_TYPE.TEXT) {\n\t            this.data = xhr.responseText;\n\t        }\n\t        // if json, parse into json object\n\t        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON) {\n\t            try {\n\t                this.data = JSON.parse(xhr.responseText);\n\t                this.isJson = true;\n\t            }\n\t            catch (e) {\n\t                this.abort('Error trying to parse loaded json:', e);\n\t\n\t                return;\n\t            }\n\t        }\n\t        // if xml, parse into an xml document or div element\n\t        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n\t            try {\n\t                if (window.DOMParser) {\n\t                    var domparser = new DOMParser();\n\t\n\t                    this.data = domparser.parseFromString(xhr.responseText, 'text/xml');\n\t                }\n\t                else {\n\t                    var div = document.createElement('div');\n\t\n\t                    div.innerHTML = xhr.responseText;\n\t                    this.data = div;\n\t                }\n\t                this.isXml = true;\n\t            }\n\t            catch (e) {\n\t                this.abort('Error trying to parse loaded xml:', e);\n\t\n\t                return;\n\t            }\n\t        }\n\t        // other types just return the response\n\t        else {\n\t            this.data = xhr.response || xhr.responseText;\n\t        }\n\t    }\n\t    else {\n\t        this.abort('[' + xhr.status + ']' + xhr.statusText + ':' + xhr.responseURL);\n\t\n\t        return;\n\t    }\n\t\n\t    this.complete();\n\t};\n\t\n\t/**\n\t * Sets the `crossOrigin` property for this resource based on if the url\n\t * for this resource is cross-origin. If crossOrigin was manually set, this\n\t * function does nothing.\n\t *\n\t * @private\n\t * @param {string} url - The url to test.\n\t * @param {object} [loc=window.location] - The location object to test against.\n\t * @return {string} The crossOrigin value to use (or empty string for none).\n\t */\n\tResource.prototype._determineCrossOrigin = function (url, loc) {\n\t    // data: and javascript: urls are considered same-origin\n\t    if (url.indexOf('data:') === 0) {\n\t        return '';\n\t    }\n\t\n\t    // default is window.location\n\t    loc = loc || window.location;\n\t\n\t    if (!tempAnchor) {\n\t        tempAnchor = document.createElement('a');\n\t    }\n\t\n\t    // let the browser determine the full href for the url of this resource and then\n\t    // parse with the node url lib, we can't use the properties of the anchor element\n\t    // because they don't work in IE9 :(\n\t    tempAnchor.href = url;\n\t    url = parseUri(tempAnchor.href, { strictMode: true });\n\t\n\t    var samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n\t    var protocol = url.protocol ? url.protocol + ':' : '';\n\t\n\t    // if cross origin\n\t    if (url.host !== loc.hostname || !samePort || protocol !== loc.protocol) {\n\t        return 'anonymous';\n\t    }\n\t\n\t    return '';\n\t};\n\t\n\t/**\n\t * Determines the responseType of an XHR request based on the extension of the\n\t * resource being loaded.\n\t *\n\t * @private\n\t * @return {Resource.XHR_RESPONSE_TYPE} The responseType to use.\n\t */\n\tResource.prototype._determineXhrType = function () {\n\t    return Resource._xhrTypeMap[this._getExtension()] || Resource.XHR_RESPONSE_TYPE.TEXT;\n\t};\n\t\n\tResource.prototype._determineLoadType = function () {\n\t    return Resource._loadTypeMap[this._getExtension()] || Resource.LOAD_TYPE.XHR;\n\t};\n\t\n\tResource.prototype._getExtension = function () {\n\t    var url = this.url;\n\t    var ext = '';\n\t\n\t    if (this.isDataUrl) {\n\t        var slashIndex = url.indexOf('/');\n\t\n\t        ext = url.substring(slashIndex + 1, url.indexOf(';', slashIndex));\n\t    }\n\t    else {\n\t        var queryStart = url.indexOf('?');\n\t\n\t        if (queryStart !== -1) {\n\t            url = url.substring(0, queryStart);\n\t        }\n\t\n\t        ext = url.substring(url.lastIndexOf('.') + 1);\n\t    }\n\t\n\t    return ext.toLowerCase();\n\t};\n\t\n\t/**\n\t * Determines the mime type of an XHR request based on the responseType of\n\t * resource being loaded.\n\t *\n\t * @private\n\t * @param {Resource.XHR_RESPONSE_TYPE} type - The type to get a mime type for.\n\t * @return {string} The mime type to use.\n\t */\n\tResource.prototype._getMimeFromXhrType = function (type) {\n\t    switch (type) {\n\t        case Resource.XHR_RESPONSE_TYPE.BUFFER:\n\t            return 'application/octet-binary';\n\t\n\t        case Resource.XHR_RESPONSE_TYPE.BLOB:\n\t            return 'application/blob';\n\t\n\t        case Resource.XHR_RESPONSE_TYPE.DOCUMENT:\n\t            return 'application/xml';\n\t\n\t        case Resource.XHR_RESPONSE_TYPE.JSON:\n\t            return 'application/json';\n\t\n\t        case Resource.XHR_RESPONSE_TYPE.DEFAULT:\n\t        case Resource.XHR_RESPONSE_TYPE.TEXT:\n\t            /* falls through */\n\t        default:\n\t            return 'text/plain';\n\t\n\t    }\n\t};\n\t\n\t/**\n\t * Quick helper to get string xhr type.\n\t *\n\t * @ignore\n\t * @param {XMLHttpRequest|XDomainRequest} xhr - The request to check.\n\t * @return {string} The type.\n\t */\n\tfunction reqType(xhr) {\n\t    return xhr.toString().replace('object ', '');\n\t}\n\t\n\t/**\n\t * The types of loading a resource can use.\n\t *\n\t * @static\n\t * @readonly\n\t * @enum {number}\n\t */\n\tResource.LOAD_TYPE = {\n\t    /** Uses XMLHttpRequest to load the resource. */\n\t    XHR:    1,\n\t    /** Uses an `Image` object to load the resource. */\n\t    IMAGE:  2,\n\t    /** Uses an `Audio` object to load the resource. */\n\t    AUDIO:  3,\n\t    /** Uses a `Video` object to load the resource. */\n\t    VIDEO:  4\n\t};\n\t\n\t/**\n\t * The XHR ready states, used internally.\n\t *\n\t * @static\n\t * @readonly\n\t * @enum {string}\n\t */\n\tResource.XHR_RESPONSE_TYPE = {\n\t    /** defaults to text */\n\t    DEFAULT:    'text',\n\t    /** ArrayBuffer */\n\t    BUFFER:     'arraybuffer',\n\t    /** Blob */\n\t    BLOB:       'blob',\n\t    /** Document */\n\t    DOCUMENT:   'document',\n\t    /** Object */\n\t    JSON:       'json',\n\t    /** String */\n\t    TEXT:       'text'\n\t};\n\t\n\tResource._loadTypeMap = {\n\t    gif:      Resource.LOAD_TYPE.IMAGE,\n\t    png:      Resource.LOAD_TYPE.IMAGE,\n\t    bmp:      Resource.LOAD_TYPE.IMAGE,\n\t    jpg:      Resource.LOAD_TYPE.IMAGE,\n\t    jpeg:     Resource.LOAD_TYPE.IMAGE,\n\t    tif:      Resource.LOAD_TYPE.IMAGE,\n\t    tiff:     Resource.LOAD_TYPE.IMAGE,\n\t    webp:     Resource.LOAD_TYPE.IMAGE,\n\t    tga:      Resource.LOAD_TYPE.IMAGE,\n\t    'svg+xml':  Resource.LOAD_TYPE.IMAGE\n\t};\n\t\n\tResource._xhrTypeMap = {\n\t    // xml\n\t    xhtml:    Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    html:     Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    htm:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    xml:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    tmx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    tsx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t    svg:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\t\n\t    // images\n\t    gif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    png:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    bmp:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    jpg:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    jpeg:     Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    tif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    tiff:     Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    webp:     Resource.XHR_RESPONSE_TYPE.BLOB,\n\t    tga:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\t\n\t    // json\n\t    json:     Resource.XHR_RESPONSE_TYPE.JSON,\n\t\n\t    // text\n\t    text:     Resource.XHR_RESPONSE_TYPE.TEXT,\n\t    txt:      Resource.XHR_RESPONSE_TYPE.TEXT\n\t};\n\t\n\t/**\n\t * Sets the load type to be used for a specific extension.\n\t *\n\t * @static\n\t * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n\t * @param {Resource.LOAD_TYPE} loadType - The load type to set it to.\n\t */\n\tResource.setExtensionLoadType = function (extname, loadType) {\n\t    setExtMap(Resource._loadTypeMap, extname, loadType);\n\t};\n\t\n\t/**\n\t * Sets the load type to be used for a specific extension.\n\t *\n\t * @static\n\t * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n\t * @param {Resource.XHR_RESPONSE_TYPE} xhrType - The xhr type to set it to.\n\t */\n\tResource.setExtensionXhrType = function (extname, xhrType) {\n\t    setExtMap(Resource._xhrTypeMap, extname, xhrType);\n\t};\n\t\n\tfunction setExtMap(map, extname, val) {\n\t    if (extname && extname.indexOf('.') === 0) {\n\t        extname = extname.substring(1);\n\t    }\n\t\n\t    if (!extname) {\n\t        return;\n\t    }\n\t\n\t    map[extname] = val;\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// inspired (copied) by (from) https://github.com/pixijs/pixi.js/blob/dev/src/core/renderers/webgl/WebGLState.js\n\tvar BLEND = 0;\n\tvar DEPTH_TEST = 1;\n\tvar FRONT_FACE = 2;\n\tvar CULL_FACE = 3;\n\tvar BLEND_FUNC = 4;\n\t\n\tvar State = function () {\n\t    function State(gl) {\n\t        _classCallCheck(this, State);\n\t\n\t        this.gl = gl;\n\t        this.activeState = new Uint8Array(16);\n\t        this.defaultState = new Uint8Array(16);\n\t\n\t        this.data = 0;\n\t        this.blendMode = 0;\n\t\n\t        this.blendModes = {\n\t            source: {\n\t                alpha: this.gl.SRC_ALPHA\n\t            },\n\t            dest: {\n\t                one: this.gl.ONE\n\t            }\n\t        };\n\t    }\n\t\n\t    State.prototype.setState = function setState(state) {\n\t        this.setBlend(state.activeState[BLEND]);\n\t        this.setDepthTest(state.activeState[DEPTH_TEST]);\n\t        this.setFrontFace(state.activeState[FRONT_FACE]);\n\t        this.setCullFace(state.activeState[CULL_FACE]);\n\t        this.setBlendMode(state.activeState[BLEND_FUNC]);\n\t    };\n\t\n\t    State.prototype.setBlend = function setBlend(value) {\n\t        value = value ? 1 : 0;\n\t\n\t        if (this.activeState[BLEND] === value) {\n\t            return;\n\t        }\n\t\n\t        this.activeState[BLEND] = value;\n\t        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n\t        // this.setDepthTest(!value); // no need to do that because ew blend before we depth test (right?)\n\t    };\n\t\n\t    State.prototype.setBlendMode = function setBlendMode(value) {\n\t        var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"alpha\";\n\t        var dest = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"one\";\n\t\n\t        if (value === this.activeState[BLEND_FUNC]) {\n\t            return;\n\t        }\n\t\n\t        this.activeState[BLEND_FUNC] = value;\n\t\n\t        this.gl.blendFunc(this.blendModes.source[source], this.blendModes.dest[dest]);\n\t        //\n\t        // const mode = this.blendModes[value];\n\t        //\n\t        // if (mode.length === 2)\n\t        // {\n\t        //     this.gl.blendFunc(mode[0], mode[1]);\n\t        // }\n\t        // else\n\t        // {\n\t        //     this.gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n\t        // }\n\t    };\n\t\n\t    State.prototype.setDepthTest = function setDepthTest(value) {\n\t        value = value ? 1 : 0;\n\t        if (this.activeState[DEPTH_TEST] === value) {\n\t            return;\n\t        }\n\t\n\t        this.activeState[DEPTH_TEST] = value;\n\t        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n\t    };\n\t\n\t    State.prototype.setCullFace = function setCullFace(value) {\n\t        value = value ? 1 : 0;\n\t\n\t        if (this.activeState[CULL_FACE] === value) {\n\t            return;\n\t        }\n\t\n\t        this.activeState[CULL_FACE] = value;\n\t        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n\t    };\n\t\n\t    State.prototype.setFrontFace = function setFrontFace(value) {\n\t        value = value ? 1 : 0;\n\t\n\t        if (this.activeState[FRONT_FACE] === value) {\n\t            return;\n\t        }\n\t\n\t        this.activeState[FRONT_FACE] = value;\n\t        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n\t    };\n\t\n\t    _createClass(State, [{\n\t        key: 'blend',\n\t        get: function get() {\n\t            return this.activeState[BLEND];\n\t        },\n\t        set: function set(value) // eslint-disable-line require-jsdoc\n\t        {\n\t            this.activeState[BLEND] = value;\n\t        }\n\t    }, {\n\t        key: 'culling',\n\t        get: function get() {\n\t            return this.activeState[CULLING];\n\t        },\n\t        set: function set(value) // eslint-disable-line require-jsdoc\n\t        {\n\t            this.activeState[CULLING] = value;\n\t        }\n\t    }, {\n\t        key: 'depthTest',\n\t        get: function get() {\n\t            return this.activeState[DEPTH_TEST];\n\t        },\n\t        set: function set(value) // eslint-disable-line require-jsdoc\n\t        {\n\t            this.activeState[DEPTH_TEST] = value;\n\t        }\n\t    }, {\n\t        key: 'clockwiseFrontFace',\n\t        get: function get() {\n\t            return this.activeState[FRONT_FACE];\n\t        },\n\t        set: function set(value) // eslint-disable-line require-jsdoc\n\t        {\n\t            this.activeState[FRONT_FACE] = value;\n\t        }\n\t    }, {\n\t        key: 'blendMode',\n\t        get: function get() {\n\t            return this.activeState[BLEND_FUNC];\n\t            // return this._blendMode;\n\t        },\n\t        set: function set(value) // eslint-disable-line require-jsdoc\n\t        {\n\t            this.activeState[BLEND_FUNC] = value;\n\t            // 17 is NO BLEND\n\t            // this.blend = (value !== 17);\n\t            // this._blendMode = value;\n\t        }\n\t    }]);\n\t\n\t    return State;\n\t}();\n\t\n\texports.default = State;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @fileoverview gl-matrix - High performance matrix and vector operations\n\t * @author Brandon Jones\n\t * @author Colin MacKenzie IV\n\t * @version 2.4.0\n\t */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse {\n\t\t\tvar a = factory();\n\t\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t\t}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setMatrixArrayType = setMatrixArrayType;\n\texports.toRadian = toRadian;\n\texports.equals = equals;\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t/**\n\t * Common utilities\n\t * @module glMatrix\n\t */\n\t\n\t// Configuration Constants\n\tvar EPSILON = exports.EPSILON = 0.000001;\n\tvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\tvar RANDOM = exports.RANDOM = Math.random;\n\t\n\t/**\n\t * Sets the type of array used when creating new vectors and matrices\n\t *\n\t * @param {Type} type Array type, such as Float32Array or Array\n\t */\n\tfunction setMatrixArrayType(type) {\n\t  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n\t}\n\t\n\tvar degree = Math.PI / 180;\n\t\n\t/**\n\t * Convert Degree To Radian\n\t *\n\t * @param {Number} a Angle in Degrees\n\t */\n\tfunction toRadian(a) {\n\t  return a * degree;\n\t}\n\t\n\t/**\n\t * Tests whether or not the arguments have approximately the same value, within an absolute\n\t * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n\t * than or equal to 1.0, and a relative tolerance is used for larger values)\n\t *\n\t * @param {Number} a The first number to test.\n\t * @param {Number} b The second number to test.\n\t * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n\t}\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.fromMat4 = fromMat4;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.identity = identity;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.translate = translate;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.fromTranslation = fromTranslation;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.fromMat2d = fromMat2d;\n\texports.fromQuat = fromQuat;\n\texports.normalFromMat4 = normalFromMat4;\n\texports.projection = projection;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 3x3 Matrix\n\t * @module mat3\n\t */\n\t\n\t/**\n\t * Creates a new identity mat3\n\t *\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copies the upper-left 3x3 values into the given mat3.\n\t *\n\t * @param {mat3} out the receiving 3x3 matrix\n\t * @param {mat4} a   the source 4x4 matrix\n\t * @returns {mat3} out\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction fromMat4(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[4];\n\t  out[4] = a[5];\n\t  out[5] = a[6];\n\t  out[6] = a[8];\n\t  out[7] = a[9];\n\t  out[8] = a[10];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat3 initialized with values from an existing matrix\n\t *\n\t * @param {mat3} a matrix to clone\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat3 to another\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat3 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\n\t * @returns {mat3} A new mat3\n\t */\n\tfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m10;\n\t  out[4] = m11;\n\t  out[5] = m12;\n\t  out[6] = m20;\n\t  out[7] = m21;\n\t  out[8] = m22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat3 to the given values\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\n\t * @returns {mat3} out\n\t */\n\tfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m10;\n\t  out[4] = m11;\n\t  out[5] = m12;\n\t  out[6] = m20;\n\t  out[7] = m21;\n\t  out[8] = m22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat3 to the identity matrix\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @returns {mat3} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t  if (out === a) {\n\t    var a01 = a[1],\n\t        a02 = a[2],\n\t        a12 = a[5];\n\t    out[1] = a[3];\n\t    out[2] = a[6];\n\t    out[3] = a01;\n\t    out[5] = a[7];\n\t    out[6] = a02;\n\t    out[7] = a12;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[3];\n\t    out[2] = a[6];\n\t    out[3] = a[1];\n\t    out[4] = a[4];\n\t    out[5] = a[7];\n\t    out[6] = a[2];\n\t    out[7] = a[5];\n\t    out[8] = a[8];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction invert(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  var b01 = a22 * a11 - a12 * a21;\n\t  var b11 = -a22 * a10 + a12 * a20;\n\t  var b21 = a21 * a10 - a11 * a20;\n\t\n\t  // Calculate the determinant\n\t  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = b01 * det;\n\t  out[1] = (-a22 * a01 + a02 * a21) * det;\n\t  out[2] = (a12 * a01 - a02 * a11) * det;\n\t  out[3] = b11 * det;\n\t  out[4] = (a22 * a00 - a02 * a20) * det;\n\t  out[5] = (-a12 * a00 + a02 * a10) * det;\n\t  out[6] = b21 * det;\n\t  out[7] = (-a21 * a00 + a01 * a20) * det;\n\t  out[8] = (a11 * a00 - a01 * a10) * det;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction adjoint(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  out[0] = a11 * a22 - a12 * a21;\n\t  out[1] = a02 * a21 - a01 * a22;\n\t  out[2] = a01 * a12 - a02 * a11;\n\t  out[3] = a12 * a20 - a10 * a22;\n\t  out[4] = a00 * a22 - a02 * a20;\n\t  out[5] = a02 * a10 - a00 * a12;\n\t  out[6] = a10 * a21 - a11 * a20;\n\t  out[7] = a01 * a20 - a00 * a21;\n\t  out[8] = a00 * a11 - a01 * a10;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat3\n\t *\n\t * @param {mat3} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n\t}\n\t\n\t/**\n\t * Multiplies two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  var b00 = b[0],\n\t      b01 = b[1],\n\t      b02 = b[2];\n\t  var b10 = b[3],\n\t      b11 = b[4],\n\t      b12 = b[5];\n\t  var b20 = b[6],\n\t      b21 = b[7],\n\t      b22 = b[8];\n\t\n\t  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\t\n\t  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\t\n\t  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translate a mat3 by the given vector\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to translate\n\t * @param {vec2} v vector to translate by\n\t * @returns {mat3} out\n\t */\n\tfunction translate(out, a, v) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5],\n\t      a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8],\n\t      x = v[0],\n\t      y = v[1];\n\t\n\t  out[0] = a00;\n\t  out[1] = a01;\n\t  out[2] = a02;\n\t\n\t  out[3] = a10;\n\t  out[4] = a11;\n\t  out[5] = a12;\n\t\n\t  out[6] = x * a00 + y * a10 + a20;\n\t  out[7] = x * a01 + y * a11 + a21;\n\t  out[8] = x * a02 + y * a12 + a22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat3 by the given angle\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5],\n\t      a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8],\n\t      s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t\n\t  out[0] = c * a00 + s * a10;\n\t  out[1] = c * a01 + s * a11;\n\t  out[2] = c * a02 + s * a12;\n\t\n\t  out[3] = c * a10 - s * a00;\n\t  out[4] = c * a11 - s * a01;\n\t  out[5] = c * a12 - s * a02;\n\t\n\t  out[6] = a20;\n\t  out[7] = a21;\n\t  out[8] = a22;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Scales the mat3 by the dimensions in the given vec2\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat3} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1];\n\t\n\t  out[0] = x * a[0];\n\t  out[1] = x * a[1];\n\t  out[2] = x * a[2];\n\t\n\t  out[3] = y * a[3];\n\t  out[4] = y * a[4];\n\t  out[5] = y * a[5];\n\t\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.translate(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat3} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = v[0];\n\t  out[7] = v[1];\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.rotate(dest, dest, rad);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = 0;\n\t\n\t  out[3] = -s;\n\t  out[4] = c;\n\t  out[5] = 0;\n\t\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.scale(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat3} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t\n\t  out[3] = 0;\n\t  out[4] = v[1];\n\t  out[5] = 0;\n\t\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copies the values from a mat2d into a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat2d} a the matrix to copy\n\t * @returns {mat3} out\n\t **/\n\tfunction fromMat2d(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = 0;\n\t\n\t  out[3] = a[2];\n\t  out[4] = a[3];\n\t  out[5] = 0;\n\t\n\t  out[6] = a[4];\n\t  out[7] = a[5];\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t* Calculates a 3x3 matrix from the given quaternion\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {quat} q Quaternion to create matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tfunction fromQuat(out, q) {\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var yx = y * x2;\n\t  var yy = y * y2;\n\t  var zx = z * x2;\n\t  var zy = z * y2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - yy - zz;\n\t  out[3] = yx - wz;\n\t  out[6] = zx + wy;\n\t\n\t  out[1] = yx + wz;\n\t  out[4] = 1 - xx - zz;\n\t  out[7] = zy - wx;\n\t\n\t  out[2] = zx - wy;\n\t  out[5] = zy + wx;\n\t  out[8] = 1 - xx - yy;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {mat4} a Mat4 to derive the normal matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tfunction normalFromMat4(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t\n\t  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t\n\t  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a 2D projection matrix with the given bounds\n\t *\n\t * @param {mat3} out mat3 frustum matrix will be written into\n\t * @param {number} width Width of your gl context\n\t * @param {number} height Height of gl context\n\t * @returns {mat3} out\n\t */\n\tfunction projection(out, width, height) {\n\t  out[0] = 2 / width;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = -2 / height;\n\t  out[5] = 0;\n\t  out[6] = -1;\n\t  out[7] = 1;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat3\n\t *\n\t * @param {mat3} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat3\n\t *\n\t * @param {mat3} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n\t}\n\t\n\t/**\n\t * Adds two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  out[6] = a[6] + b[6];\n\t  out[7] = a[7] + b[7];\n\t  out[8] = a[8] + b[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  out[6] = a[6] - b[6];\n\t  out[7] = a[7] - b[7];\n\t  out[8] = a[8] - b[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat3} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  out[6] = a[6] * b;\n\t  out[7] = a[7] * b;\n\t  out[8] = a[8] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat3} out the receiving vector\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat3} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  out[6] = a[6] + b[6] * scale;\n\t  out[7] = a[7] + b[7] * scale;\n\t  out[8] = a[8] + b[8] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat3} a The first matrix.\n\t * @param {mat3} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat3} a The first matrix.\n\t * @param {mat3} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5],\n\t      a6 = a[6],\n\t      a7 = a[7],\n\t      a8 = a[8];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5],\n\t      b6 = b[6],\n\t      b7 = b[7],\n\t      b8 = b[8];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat3.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat3.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.length = length;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.cross = cross;\n\texports.lerp = lerp;\n\texports.hermite = hermite;\n\texports.bezier = bezier;\n\texports.random = random;\n\texports.transformMat4 = transformMat4;\n\texports.transformMat3 = transformMat3;\n\texports.transformQuat = transformQuat;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.angle = angle;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 3 Dimensional Vector\n\t * @module vec3\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec3\n\t *\n\t * @returns {vec3} a new 3D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec3 initialized with values from an existing vector\n\t *\n\t * @param {vec3} a vector to clone\n\t * @returns {vec3} a new 3D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  return Math.sqrt(x * x + y * y + z * z);\n\t}\n\t\n\t/**\n\t * Creates a new vec3 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} a new 3D vector\n\t */\n\tfunction fromValues(x, y, z) {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec3 to another\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the source vector\n\t * @returns {vec3} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec3 to the given values\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} out\n\t */\n\tfunction set(out, x, y, z) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  out[2] = a[2] * b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Divides two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  out[2] = a[2] / b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.ceil the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to ceil\n\t * @returns {vec3} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  out[2] = Math.ceil(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.floor the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to floor\n\t * @returns {vec3} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  out[2] = Math.floor(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the minimum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  out[2] = Math.min(a[2], b[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the maximum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  out[2] = Math.max(a[2], b[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.round the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to round\n\t * @returns {vec3} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  out[2] = Math.round(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales a vec3 by a scalar number\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec3} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec3's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec3} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  return Math.sqrt(x * x + y * y + z * z);\n\t}\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  return x * x + y * y + z * z;\n\t}\n\t\n\t/**\n\t * Calculates the squared length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  return x * x + y * y + z * z;\n\t}\n\t\n\t/**\n\t * Negates the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to negate\n\t * @returns {vec3} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the inverse of the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to invert\n\t * @returns {vec3} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Normalize a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to normalize\n\t * @returns {vec3} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var len = x * x + y * y + z * z;\n\t  if (len > 0) {\n\t    //TODO: evaluate use of glm_invsqrt here?\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = a[0] * len;\n\t    out[1] = a[1] * len;\n\t    out[2] = a[2] * len;\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the dot product of two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\t/**\n\t * Computes the cross product of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction cross(out, a, b) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2];\n\t\n\t  out[0] = ay * bz - az * by;\n\t  out[1] = az * bx - ax * bz;\n\t  out[2] = ax * by - ay * bx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a linear interpolation between two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0];\n\t  var ay = a[1];\n\t  var az = a[2];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  out[2] = az + t * (b[2] - az);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a hermite interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction hermite(out, a, b, c, d, t) {\n\t  var factorTimes2 = t * t;\n\t  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n\t  var factor2 = factorTimes2 * (t - 2) + t;\n\t  var factor3 = factorTimes2 * (t - 1);\n\t  var factor4 = factorTimes2 * (3 - 2 * t);\n\t\n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a bezier interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction bezier(out, a, b, c, d, t) {\n\t  var inverseFactor = 1 - t;\n\t  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n\t  var factorTimes2 = t * t;\n\t  var factor1 = inverseFactorTimesTwo * inverseFactor;\n\t  var factor2 = 3 * t * inverseFactorTimesTwo;\n\t  var factor3 = 3 * factorTimes2 * inverseFactor;\n\t  var factor4 = factorTimes2 * t;\n\t\n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec3} out\n\t */\n\tfunction random(out, scale) {\n\t  scale = scale || 1.0;\n\t\n\t  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n\t  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\t\n\t  out[0] = Math.cos(r) * zScale;\n\t  out[1] = Math.sin(r) * zScale;\n\t  out[2] = z * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a mat4.\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n\t  w = w || 1.0;\n\t  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n\t  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n\t  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a mat3.\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat3} m the 3x3 matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformMat3(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  out[0] = x * m[0] + y * m[3] + z * m[6];\n\t  out[1] = x * m[1] + y * m[4] + z * m[7];\n\t  out[2] = x * m[2] + y * m[5] + z * m[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a quat\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformQuat(out, a, q) {\n\t  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\t\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var qx = q[0],\n\t      qy = q[1],\n\t      qz = q[2],\n\t      qw = q[3];\n\t\n\t  // calculate quat * vec\n\t  var ix = qw * x + qy * z - qz * y;\n\t  var iy = qw * y + qz * x - qx * z;\n\t  var iz = qw * z + qx * y - qy * x;\n\t  var iw = -qx * x - qy * y - qz * z;\n\t\n\t  // calculate result * inverse quat\n\t  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the x-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateX(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n\t  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the y-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateY(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n\t  r[1] = p[1];\n\t  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the z-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateZ(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n\t  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n\t  r[2] = p[2];\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Get the angle between two 3D vectors\n\t * @param {vec3} a The first operand\n\t * @param {vec3} b The second operand\n\t * @returns {Number} The angle in radians\n\t */\n\tfunction angle(a, b) {\n\t  var tempA = fromValues(a[0], a[1], a[2]);\n\t  var tempB = fromValues(b[0], b[1], b[2]);\n\t\n\t  normalize(tempA, tempA);\n\t  normalize(tempB, tempB);\n\t\n\t  var cosine = dot(tempA, tempB);\n\t\n\t  if (cosine > 1.0) {\n\t    return 0;\n\t  } else if (cosine < -1.0) {\n\t    return Math.PI;\n\t  } else {\n\t    return Math.acos(cosine);\n\t  }\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec3} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec3} a The first vector.\n\t * @param {vec3} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec3} a The first vector.\n\t * @param {vec3} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec3.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec3.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec3.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec3.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec3.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec3.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec3.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec3s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 3;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.length = length;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.lerp = lerp;\n\texports.random = random;\n\texports.transformMat4 = transformMat4;\n\texports.transformQuat = transformQuat;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 4 Dimensional Vector\n\t * @module vec4\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec4\n\t *\n\t * @returns {vec4} a new 4D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec4 initialized with values from an existing vector\n\t *\n\t * @param {vec4} a vector to clone\n\t * @returns {vec4} a new 4D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec4 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} a new 4D vector\n\t */\n\tfunction fromValues(x, y, z, w) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec4 to another\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the source vector\n\t * @returns {vec4} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec4 to the given values\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} out\n\t */\n\tfunction set(out, x, y, z, w) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  out[2] = a[2] * b[2];\n\t  out[3] = a[3] * b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Divides two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  out[2] = a[2] / b[2];\n\t  out[3] = a[3] / b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.ceil the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to ceil\n\t * @returns {vec4} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  out[2] = Math.ceil(a[2]);\n\t  out[3] = Math.ceil(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.floor the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to floor\n\t * @returns {vec4} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  out[2] = Math.floor(a[2]);\n\t  out[3] = Math.floor(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the minimum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  out[2] = Math.min(a[2], b[2]);\n\t  out[3] = Math.min(a[3], b[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the maximum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  out[2] = Math.max(a[2], b[2]);\n\t  out[3] = Math.max(a[3], b[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.round the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to round\n\t * @returns {vec4} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  out[2] = Math.round(a[2]);\n\t  out[3] = Math.round(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales a vec4 by a scalar number\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec4} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec4's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec4} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  var w = b[3] - a[3];\n\t  return Math.sqrt(x * x + y * y + z * z + w * w);\n\t}\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  var w = b[3] - a[3];\n\t  return x * x + y * y + z * z + w * w;\n\t}\n\t\n\t/**\n\t * Calculates the length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  return Math.sqrt(x * x + y * y + z * z + w * w);\n\t}\n\t\n\t/**\n\t * Calculates the squared length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  return x * x + y * y + z * z + w * w;\n\t}\n\t\n\t/**\n\t * Negates the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to negate\n\t * @returns {vec4} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = -a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the inverse of the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to invert\n\t * @returns {vec4} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  out[3] = 1.0 / a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Normalize a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to normalize\n\t * @returns {vec4} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  var len = x * x + y * y + z * z + w * w;\n\t  if (len > 0) {\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = x * len;\n\t    out[1] = y * len;\n\t    out[2] = z * len;\n\t    out[3] = w * len;\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the dot product of two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t}\n\t\n\t/**\n\t * Performs a linear interpolation between two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec4} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0];\n\t  var ay = a[1];\n\t  var az = a[2];\n\t  var aw = a[3];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  out[2] = az + t * (b[2] - az);\n\t  out[3] = aw + t * (b[3] - aw);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec4} out\n\t */\n\tfunction random(out, vectorScale) {\n\t  vectorScale = vectorScale || 1.0;\n\t\n\t  //TODO: This is a pretty awful way of doing this. Find something better.\n\t  out[0] = glMatrix.RANDOM();\n\t  out[1] = glMatrix.RANDOM();\n\t  out[2] = glMatrix.RANDOM();\n\t  out[3] = glMatrix.RANDOM();\n\t  normalize(out, out);\n\t  scale(out, out, vectorScale);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec4 with a mat4.\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec4} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2],\n\t      w = a[3];\n\t  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n\t  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n\t  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n\t  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec4 with a quat\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec4} out\n\t */\n\tfunction transformQuat(out, a, q) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var qx = q[0],\n\t      qy = q[1],\n\t      qz = q[2],\n\t      qw = q[3];\n\t\n\t  // calculate quat * vec\n\t  var ix = qw * x + qy * z - qz * y;\n\t  var iy = qw * y + qz * x - qx * z;\n\t  var iz = qw * z + qx * y - qy * x;\n\t  var iw = -qx * x - qy * y - qz * z;\n\t\n\t  // calculate result * inverse quat\n\t  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec4} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec4} a The first vector.\n\t * @param {vec4} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec4} a The first vector.\n\t * @param {vec4} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec4.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec4.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec4.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec4.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec4.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec4.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec4.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec4s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 4;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tvar _mat = __webpack_require__(5);\n\t\n\tvar mat2 = _interopRequireWildcard(_mat);\n\t\n\tvar _mat2d = __webpack_require__(6);\n\t\n\tvar mat2d = _interopRequireWildcard(_mat2d);\n\t\n\tvar _mat2 = __webpack_require__(1);\n\t\n\tvar mat3 = _interopRequireWildcard(_mat2);\n\t\n\tvar _mat3 = __webpack_require__(7);\n\t\n\tvar mat4 = _interopRequireWildcard(_mat3);\n\t\n\tvar _quat = __webpack_require__(8);\n\t\n\tvar quat = _interopRequireWildcard(_quat);\n\t\n\tvar _vec = __webpack_require__(9);\n\t\n\tvar vec2 = _interopRequireWildcard(_vec);\n\t\n\tvar _vec2 = __webpack_require__(2);\n\t\n\tvar vec3 = _interopRequireWildcard(_vec2);\n\t\n\tvar _vec3 = __webpack_require__(3);\n\t\n\tvar vec4 = _interopRequireWildcard(_vec3);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.glMatrix = glMatrix;\n\texports.mat2 = mat2;\n\texports.mat2d = mat2d;\n\texports.mat3 = mat3;\n\texports.mat4 = mat4;\n\texports.quat = quat;\n\texports.vec2 = vec2;\n\texports.vec3 = vec3;\n\texports.vec4 = vec4; /**\n\t                      * @fileoverview gl-matrix - High performance matrix and vector operations\n\t                      * @author Brandon Jones\n\t                      * @author Colin MacKenzie IV\n\t                      * @version 2.4.0\n\t                      */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t// END HEADER\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.identity = identity;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.str = str;\n\texports.frob = frob;\n\texports.LDU = LDU;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2x2 Matrix\n\t * @module mat2\n\t */\n\t\n\t/**\n\t * Creates a new identity mat2\n\t *\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat2 initialized with values from an existing matrix\n\t *\n\t * @param {mat2} a matrix to clone\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat2 to another\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat2 to the identity matrix\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @returns {mat2} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat2 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\n\t * @returns {mat2} out A new 2x2 matrix\n\t */\n\tfunction fromValues(m00, m01, m10, m11) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m10;\n\t  out[3] = m11;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat2 to the given values\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\n\t * @returns {mat2} out\n\t */\n\tfunction set(out, m00, m01, m10, m11) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m10;\n\t  out[3] = m11;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache\n\t  // some values\n\t  if (out === a) {\n\t    var a1 = a[1];\n\t    out[1] = a[2];\n\t    out[2] = a1;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[2];\n\t    out[2] = a[1];\n\t    out[3] = a[3];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction invert(out, a) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t\n\t  // Calculate the determinant\n\t  var det = a0 * a3 - a2 * a1;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = a3 * det;\n\t  out[1] = -a1 * det;\n\t  out[2] = -a2 * det;\n\t  out[3] = a0 * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction adjoint(out, a) {\n\t  // Caching this value is nessecary if out == a\n\t  var a0 = a[0];\n\t  out[0] = a[3];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = a0;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat2\n\t *\n\t * @param {mat2} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  return a[0] * a[3] - a[2] * a[1];\n\t}\n\t\n\t/**\n\t * Multiplies two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  out[0] = a0 * b0 + a2 * b1;\n\t  out[1] = a1 * b0 + a3 * b1;\n\t  out[2] = a0 * b2 + a2 * b3;\n\t  out[3] = a1 * b2 + a3 * b3;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat2 by the given angle\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = a0 * c + a2 * s;\n\t  out[1] = a1 * c + a3 * s;\n\t  out[2] = a0 * -s + a2 * c;\n\t  out[3] = a1 * -s + a3 * c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat2 by the dimensions in the given vec2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0 * v0;\n\t  out[1] = a1 * v0;\n\t  out[2] = a2 * v1;\n\t  out[3] = a3 * v1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = -s;\n\t  out[3] = c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.scale(dest, dest, vec);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = v[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2\n\t *\n\t * @param {mat2} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2\n\t *\n\t * @param {mat2} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n\t}\n\t\n\t/**\n\t * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n\t * @param {mat2} L the lower triangular matrix\n\t * @param {mat2} D the diagonal matrix\n\t * @param {mat2} U the upper triangular matrix\n\t * @param {mat2} a the input matrix to factorize\n\t */\n\t\n\tfunction LDU(L, D, U, a) {\n\t  L[2] = a[2] / a[0];\n\t  U[0] = a[0];\n\t  U[1] = a[1];\n\t  U[3] = a[3] - L[2] * U[1];\n\t  return [L, D, U];\n\t}\n\t\n\t/**\n\t * Adds two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat2} a The first matrix.\n\t * @param {mat2} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat2} a The first matrix.\n\t * @param {mat2} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat2} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat2} out the receiving vector\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat2} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Alias for {@link mat2.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat2.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.identity = identity;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.invert = invert;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.translate = translate;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.fromTranslation = fromTranslation;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2x3 Matrix\n\t * @module mat2d\n\t *\n\t * @description\n\t * A mat2d contains six elements defined as:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty]\n\t * </pre>\n\t * This is a short form for the 3x3 matrix:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty,\n\t *  0, 0, 1]\n\t * </pre>\n\t * The last row is ignored so the array is shorter and operations are faster.\n\t */\n\t\n\t/**\n\t * Creates a new identity mat2d\n\t *\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat2d initialized with values from an existing matrix\n\t *\n\t * @param {mat2d} a matrix to clone\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat2d to another\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat2d to the identity matrix\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat2d with the given values\n\t *\n\t * @param {Number} a Component A (index 0)\n\t * @param {Number} b Component B (index 1)\n\t * @param {Number} c Component C (index 2)\n\t * @param {Number} d Component D (index 3)\n\t * @param {Number} tx Component TX (index 4)\n\t * @param {Number} ty Component TY (index 5)\n\t * @returns {mat2d} A new mat2d\n\t */\n\tfunction fromValues(a, b, c, d, tx, ty) {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = a;\n\t  out[1] = b;\n\t  out[2] = c;\n\t  out[3] = d;\n\t  out[4] = tx;\n\t  out[5] = ty;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat2d to the given values\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {Number} a Component A (index 0)\n\t * @param {Number} b Component B (index 1)\n\t * @param {Number} c Component C (index 2)\n\t * @param {Number} d Component D (index 3)\n\t * @param {Number} tx Component TX (index 4)\n\t * @param {Number} ty Component TY (index 5)\n\t * @returns {mat2d} out\n\t */\n\tfunction set(out, a, b, c, d, tx, ty) {\n\t  out[0] = a;\n\t  out[1] = b;\n\t  out[2] = c;\n\t  out[3] = d;\n\t  out[4] = tx;\n\t  out[5] = ty;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat2d\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction invert(out, a) {\n\t  var aa = a[0],\n\t      ab = a[1],\n\t      ac = a[2],\n\t      ad = a[3];\n\t  var atx = a[4],\n\t      aty = a[5];\n\t\n\t  var det = aa * ad - ab * ac;\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = ad * det;\n\t  out[1] = -ab * det;\n\t  out[2] = -ac * det;\n\t  out[3] = aa * det;\n\t  out[4] = (ac * aty - ad * atx) * det;\n\t  out[5] = (ab * atx - aa * aty) * det;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat2d\n\t *\n\t * @param {mat2d} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  return a[0] * a[3] - a[1] * a[2];\n\t}\n\t\n\t/**\n\t * Multiplies two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5];\n\t  out[0] = a0 * b0 + a2 * b1;\n\t  out[1] = a1 * b0 + a3 * b1;\n\t  out[2] = a0 * b2 + a2 * b3;\n\t  out[3] = a1 * b2 + a3 * b3;\n\t  out[4] = a0 * b4 + a2 * b5 + a4;\n\t  out[5] = a1 * b4 + a3 * b5 + a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat2d by the given angle\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = a0 * c + a2 * s;\n\t  out[1] = a1 * c + a3 * s;\n\t  out[2] = a0 * -s + a2 * c;\n\t  out[3] = a1 * -s + a3 * c;\n\t  out[4] = a4;\n\t  out[5] = a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0 * v0;\n\t  out[1] = a1 * v0;\n\t  out[2] = a2 * v1;\n\t  out[3] = a3 * v1;\n\t  out[4] = a4;\n\t  out[5] = a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translates the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to translate the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tfunction translate(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0;\n\t  out[1] = a1;\n\t  out[2] = a2;\n\t  out[3] = a3;\n\t  out[4] = a0 * v0 + a2 * v1 + a4;\n\t  out[5] = a1 * v0 + a3 * v1 + a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = -s;\n\t  out[3] = c;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.scale(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2d} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = v[1];\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.translate(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat2d} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = v[0];\n\t  out[5] = v[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2d\n\t *\n\t * @param {mat2d} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2d\n\t *\n\t * @param {mat2d} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n\t}\n\t\n\t/**\n\t * Adds two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat2d} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat2d} out the receiving vector\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat2d} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat2d} a The first matrix.\n\t * @param {mat2d} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat2d} a The first matrix.\n\t * @param {mat2d} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat2d.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat2d.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.identity = identity;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.translate = translate;\n\texports.scale = scale;\n\texports.rotate = rotate;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.fromTranslation = fromTranslation;\n\texports.fromScaling = fromScaling;\n\texports.fromRotation = fromRotation;\n\texports.fromXRotation = fromXRotation;\n\texports.fromYRotation = fromYRotation;\n\texports.fromZRotation = fromZRotation;\n\texports.fromRotationTranslation = fromRotationTranslation;\n\texports.getTranslation = getTranslation;\n\texports.getScaling = getScaling;\n\texports.getRotation = getRotation;\n\texports.fromRotationTranslationScale = fromRotationTranslationScale;\n\texports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\n\texports.fromQuat = fromQuat;\n\texports.frustum = frustum;\n\texports.perspective = perspective;\n\texports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\n\texports.ortho = ortho;\n\texports.lookAt = lookAt;\n\texports.targetTo = targetTo;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 4x4 Matrix\n\t * @module mat4\n\t */\n\t\n\t/**\n\t * Creates a new identity mat4\n\t *\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat4 initialized with values from an existing matrix\n\t *\n\t * @param {mat4} a matrix to clone\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  out[9] = a[9];\n\t  out[10] = a[10];\n\t  out[11] = a[11];\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat4 to another\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  out[9] = a[9];\n\t  out[10] = a[10];\n\t  out[11] = a[11];\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat4 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\n\t * @returns {mat4} A new mat4\n\t */\n\tfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m03;\n\t  out[4] = m10;\n\t  out[5] = m11;\n\t  out[6] = m12;\n\t  out[7] = m13;\n\t  out[8] = m20;\n\t  out[9] = m21;\n\t  out[10] = m22;\n\t  out[11] = m23;\n\t  out[12] = m30;\n\t  out[13] = m31;\n\t  out[14] = m32;\n\t  out[15] = m33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat4 to the given values\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\n\t * @returns {mat4} out\n\t */\n\tfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m03;\n\t  out[4] = m10;\n\t  out[5] = m11;\n\t  out[6] = m12;\n\t  out[7] = m13;\n\t  out[8] = m20;\n\t  out[9] = m21;\n\t  out[10] = m22;\n\t  out[11] = m23;\n\t  out[12] = m30;\n\t  out[13] = m31;\n\t  out[14] = m32;\n\t  out[15] = m33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat4 to the identity matrix\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @returns {mat4} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t  if (out === a) {\n\t    var a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3];\n\t    var a12 = a[6],\n\t        a13 = a[7];\n\t    var a23 = a[11];\n\t\n\t    out[1] = a[4];\n\t    out[2] = a[8];\n\t    out[3] = a[12];\n\t    out[4] = a01;\n\t    out[6] = a[9];\n\t    out[7] = a[13];\n\t    out[8] = a02;\n\t    out[9] = a12;\n\t    out[11] = a[14];\n\t    out[12] = a03;\n\t    out[13] = a13;\n\t    out[14] = a23;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[4];\n\t    out[2] = a[8];\n\t    out[3] = a[12];\n\t    out[4] = a[1];\n\t    out[5] = a[5];\n\t    out[6] = a[9];\n\t    out[7] = a[13];\n\t    out[8] = a[2];\n\t    out[9] = a[6];\n\t    out[10] = a[10];\n\t    out[11] = a[14];\n\t    out[12] = a[3];\n\t    out[13] = a[7];\n\t    out[14] = a[11];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction invert(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction adjoint(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n\t  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\t  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n\t  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\t  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\t  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n\t  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\t  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n\t  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n\t  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\t  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n\t  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\t  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\t  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n\t  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\t  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat4\n\t *\n\t * @param {mat4} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t}\n\t\n\t/**\n\t * Multiplies two mat4s\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  // Cache only the current line of the second matrix\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n\t  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n\t  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n\t  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translate a mat4 by the given vector\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to translate\n\t * @param {vec3} v vector to translate by\n\t * @returns {mat4} out\n\t */\n\tfunction translate(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1],\n\t      z = v[2];\n\t  var a00 = void 0,\n\t      a01 = void 0,\n\t      a02 = void 0,\n\t      a03 = void 0;\n\t  var a10 = void 0,\n\t      a11 = void 0,\n\t      a12 = void 0,\n\t      a13 = void 0;\n\t  var a20 = void 0,\n\t      a21 = void 0,\n\t      a22 = void 0,\n\t      a23 = void 0;\n\t\n\t  if (a === out) {\n\t    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t  } else {\n\t    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n\t    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n\t    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\t\n\t    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n\t    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n\t    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\t\n\t    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {vec3} v the vec3 to scale the matrix by\n\t * @returns {mat4} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1],\n\t      z = v[2];\n\t\n\t  out[0] = a[0] * x;\n\t  out[1] = a[1] * x;\n\t  out[2] = a[2] * x;\n\t  out[3] = a[3] * x;\n\t  out[4] = a[4] * y;\n\t  out[5] = a[5] * y;\n\t  out[6] = a[6] * y;\n\t  out[7] = a[7] * y;\n\t  out[8] = a[8] * z;\n\t  out[9] = a[9] * z;\n\t  out[10] = a[10] * z;\n\t  out[11] = a[11] * z;\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat4 by the given angle around the given axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tfunction rotate(out, a, rad, axis) {\n\t  var x = axis[0],\n\t      y = axis[1],\n\t      z = axis[2];\n\t  var len = Math.sqrt(x * x + y * y + z * z);\n\t  var s = void 0,\n\t      c = void 0,\n\t      t = void 0;\n\t  var a00 = void 0,\n\t      a01 = void 0,\n\t      a02 = void 0,\n\t      a03 = void 0;\n\t  var a10 = void 0,\n\t      a11 = void 0,\n\t      a12 = void 0,\n\t      a13 = void 0;\n\t  var a20 = void 0,\n\t      a21 = void 0,\n\t      a22 = void 0,\n\t      a23 = void 0;\n\t  var b00 = void 0,\n\t      b01 = void 0,\n\t      b02 = void 0;\n\t  var b10 = void 0,\n\t      b11 = void 0,\n\t      b12 = void 0;\n\t  var b20 = void 0,\n\t      b21 = void 0,\n\t      b22 = void 0;\n\t\n\t  if (Math.abs(len) < glMatrix.EPSILON) {\n\t    return null;\n\t  }\n\t\n\t  len = 1 / len;\n\t  x *= len;\n\t  y *= len;\n\t  z *= len;\n\t\n\t  s = Math.sin(rad);\n\t  c = Math.cos(rad);\n\t  t = 1 - c;\n\t\n\t  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n\t  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n\t  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\t\n\t  // Construct the elements of the rotation matrix\n\t  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n\t  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n\t  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\t\n\t  // Perform rotation-specific matrix multiplication\n\t  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged last row\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the X axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateX(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a10 = a[4];\n\t  var a11 = a[5];\n\t  var a12 = a[6];\n\t  var a13 = a[7];\n\t  var a20 = a[8];\n\t  var a21 = a[9];\n\t  var a22 = a[10];\n\t  var a23 = a[11];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged rows\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[4] = a10 * c + a20 * s;\n\t  out[5] = a11 * c + a21 * s;\n\t  out[6] = a12 * c + a22 * s;\n\t  out[7] = a13 * c + a23 * s;\n\t  out[8] = a20 * c - a10 * s;\n\t  out[9] = a21 * c - a11 * s;\n\t  out[10] = a22 * c - a12 * s;\n\t  out[11] = a23 * c - a13 * s;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Y axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateY(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a00 = a[0];\n\t  var a01 = a[1];\n\t  var a02 = a[2];\n\t  var a03 = a[3];\n\t  var a20 = a[8];\n\t  var a21 = a[9];\n\t  var a22 = a[10];\n\t  var a23 = a[11];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged rows\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = a00 * c - a20 * s;\n\t  out[1] = a01 * c - a21 * s;\n\t  out[2] = a02 * c - a22 * s;\n\t  out[3] = a03 * c - a23 * s;\n\t  out[8] = a00 * s + a20 * c;\n\t  out[9] = a01 * s + a21 * c;\n\t  out[10] = a02 * s + a22 * c;\n\t  out[11] = a03 * s + a23 * c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Z axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateZ(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a00 = a[0];\n\t  var a01 = a[1];\n\t  var a02 = a[2];\n\t  var a03 = a[3];\n\t  var a10 = a[4];\n\t  var a11 = a[5];\n\t  var a12 = a[6];\n\t  var a13 = a[7];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged last row\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = a00 * c + a10 * s;\n\t  out[1] = a01 * c + a11 * s;\n\t  out[2] = a02 * c + a12 * s;\n\t  out[3] = a03 * c + a13 * s;\n\t  out[4] = a10 * c - a00 * s;\n\t  out[5] = a11 * c - a01 * s;\n\t  out[6] = a12 * c - a02 * s;\n\t  out[7] = a13 * c - a03 * s;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.scale(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Scaling vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = v[1];\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = v[2];\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle around a given axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotate(dest, dest, rad, axis);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotation(out, rad, axis) {\n\t  var x = axis[0],\n\t      y = axis[1],\n\t      z = axis[2];\n\t  var len = Math.sqrt(x * x + y * y + z * z);\n\t  var s = void 0,\n\t      c = void 0,\n\t      t = void 0;\n\t\n\t  if (Math.abs(len) < glMatrix.EPSILON) {\n\t    return null;\n\t  }\n\t\n\t  len = 1 / len;\n\t  x *= len;\n\t  y *= len;\n\t  z *= len;\n\t\n\t  s = Math.sin(rad);\n\t  c = Math.cos(rad);\n\t  t = 1 - c;\n\t\n\t  // Perform rotation-specific matrix multiplication\n\t  out[0] = x * x * t + c;\n\t  out[1] = y * x * t + z * s;\n\t  out[2] = z * x * t - y * s;\n\t  out[3] = 0;\n\t  out[4] = x * y * t - z * s;\n\t  out[5] = y * y * t + c;\n\t  out[6] = z * y * t + x * s;\n\t  out[7] = 0;\n\t  out[8] = x * z * t + y * s;\n\t  out[9] = y * z * t - x * s;\n\t  out[10] = z * z * t + c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the X axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateX(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromXRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = c;\n\t  out[6] = s;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = -s;\n\t  out[10] = c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Y axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateY(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromYRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = c;\n\t  out[1] = 0;\n\t  out[2] = -s;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = s;\n\t  out[9] = 0;\n\t  out[10] = c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Z axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateZ(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromZRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = -s;\n\t  out[5] = c;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation and vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslation(out, q, v) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - (yy + zz);\n\t  out[1] = xy + wz;\n\t  out[2] = xz - wy;\n\t  out[3] = 0;\n\t  out[4] = xy - wz;\n\t  out[5] = 1 - (xx + zz);\n\t  out[6] = yz + wx;\n\t  out[7] = 0;\n\t  out[8] = xz + wy;\n\t  out[9] = yz - wx;\n\t  out[10] = 1 - (xx + yy);\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the translation vector component of a transformation\n\t *  matrix. If a matrix is built with fromRotationTranslation,\n\t *  the returned vector will be the same as the translation vector\n\t *  originally supplied.\n\t * @param  {vec3} out Vector to receive translation component\n\t * @param  {mat4} mat Matrix to be decomposed (input)\n\t * @return {vec3} out\n\t */\n\tfunction getTranslation(out, mat) {\n\t  out[0] = mat[12];\n\t  out[1] = mat[13];\n\t  out[2] = mat[14];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the scaling factor component of a transformation\n\t *  matrix. If a matrix is built with fromRotationTranslationScale\n\t *  with a normalized Quaternion paramter, the returned vector will be\n\t *  the same as the scaling vector\n\t *  originally supplied.\n\t * @param  {vec3} out Vector to receive scaling factor component\n\t * @param  {mat4} mat Matrix to be decomposed (input)\n\t * @return {vec3} out\n\t */\n\tfunction getScaling(out, mat) {\n\t  var m11 = mat[0];\n\t  var m12 = mat[1];\n\t  var m13 = mat[2];\n\t  var m21 = mat[4];\n\t  var m22 = mat[5];\n\t  var m23 = mat[6];\n\t  var m31 = mat[8];\n\t  var m32 = mat[9];\n\t  var m33 = mat[10];\n\t\n\t  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n\t  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n\t  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a quaternion representing the rotational component\n\t *  of a transformation matrix. If a matrix is built with\n\t *  fromRotationTranslation, the returned quaternion will be the\n\t *  same as the quaternion originally supplied.\n\t * @param {quat} out Quaternion to receive the rotation component\n\t * @param {mat4} mat Matrix to be decomposed (input)\n\t * @return {quat} out\n\t */\n\tfunction getRotation(out, mat) {\n\t  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t  var trace = mat[0] + mat[5] + mat[10];\n\t  var S = 0;\n\t\n\t  if (trace > 0) {\n\t    S = Math.sqrt(trace + 1.0) * 2;\n\t    out[3] = 0.25 * S;\n\t    out[0] = (mat[6] - mat[9]) / S;\n\t    out[1] = (mat[8] - mat[2]) / S;\n\t    out[2] = (mat[1] - mat[4]) / S;\n\t  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n\t    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n\t    out[3] = (mat[6] - mat[9]) / S;\n\t    out[0] = 0.25 * S;\n\t    out[1] = (mat[1] + mat[4]) / S;\n\t    out[2] = (mat[8] + mat[2]) / S;\n\t  } else if (mat[5] > mat[10]) {\n\t    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n\t    out[3] = (mat[8] - mat[2]) / S;\n\t    out[0] = (mat[1] + mat[4]) / S;\n\t    out[1] = 0.25 * S;\n\t    out[2] = (mat[6] + mat[9]) / S;\n\t  } else {\n\t    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n\t    out[3] = (mat[1] - mat[4]) / S;\n\t    out[0] = (mat[8] + mat[2]) / S;\n\t    out[1] = (mat[6] + mat[9]) / S;\n\t    out[2] = 0.25 * S;\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslationScale(out, q, v, s) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t  var sx = s[0];\n\t  var sy = s[1];\n\t  var sz = s[2];\n\t\n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     mat4.translate(dest, origin);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *     mat4.translate(dest, negativeOrigin);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @param {vec3} o The origin vector around which to scale and rotate\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  var sx = s[0];\n\t  var sy = s[1];\n\t  var sz = s[2];\n\t\n\t  var ox = o[0];\n\t  var oy = o[1];\n\t  var oz = o[2];\n\t\n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n\t  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n\t  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates a 4x4 matrix from the given quaternion\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat} q Quaternion to create matrix from\n\t *\n\t * @returns {mat4} out\n\t */\n\tfunction fromQuat(out, q) {\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var yx = y * x2;\n\t  var yy = y * y2;\n\t  var zx = z * x2;\n\t  var zy = z * y2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - yy - zz;\n\t  out[1] = yx + wz;\n\t  out[2] = zx - wy;\n\t  out[3] = 0;\n\t\n\t  out[4] = yx - wz;\n\t  out[5] = 1 - xx - zz;\n\t  out[6] = zy + wx;\n\t  out[7] = 0;\n\t\n\t  out[8] = zx + wy;\n\t  out[9] = zy - wx;\n\t  out[10] = 1 - xx - yy;\n\t  out[11] = 0;\n\t\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a frustum matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Number} left Left bound of the frustum\n\t * @param {Number} right Right bound of the frustum\n\t * @param {Number} bottom Bottom bound of the frustum\n\t * @param {Number} top Top bound of the frustum\n\t * @param {Number} near Near bound of the frustum\n\t * @param {Number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction frustum(out, left, right, bottom, top, near, far) {\n\t  var rl = 1 / (right - left);\n\t  var tb = 1 / (top - bottom);\n\t  var nf = 1 / (near - far);\n\t  out[0] = near * 2 * rl;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = near * 2 * tb;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = (right + left) * rl;\n\t  out[9] = (top + bottom) * tb;\n\t  out[10] = (far + near) * nf;\n\t  out[11] = -1;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = far * near * 2 * nf;\n\t  out[15] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fovy Vertical field of view in radians\n\t * @param {number} aspect Aspect ratio. typically viewport width/height\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction perspective(out, fovy, aspect, near, far) {\n\t  var f = 1.0 / Math.tan(fovy / 2);\n\t  var nf = 1 / (near - far);\n\t  out[0] = f / aspect;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = f;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = (far + near) * nf;\n\t  out[11] = -1;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 2 * far * near * nf;\n\t  out[15] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given field of view.\n\t * This is primarily useful for generating projection matrices to be used\n\t * with the still experiemental WebVR API.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction perspectiveFromFieldOfView(out, fov, near, far) {\n\t  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n\t  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n\t  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n\t  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n\t  var xScale = 2.0 / (leftTan + rightTan);\n\t  var yScale = 2.0 / (upTan + downTan);\n\t\n\t  out[0] = xScale;\n\t  out[1] = 0.0;\n\t  out[2] = 0.0;\n\t  out[3] = 0.0;\n\t  out[4] = 0.0;\n\t  out[5] = yScale;\n\t  out[6] = 0.0;\n\t  out[7] = 0.0;\n\t  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n\t  out[9] = (upTan - downTan) * yScale * 0.5;\n\t  out[10] = far / (near - far);\n\t  out[11] = -1.0;\n\t  out[12] = 0.0;\n\t  out[13] = 0.0;\n\t  out[14] = far * near / (near - far);\n\t  out[15] = 0.0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a orthogonal projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} left Left bound of the frustum\n\t * @param {number} right Right bound of the frustum\n\t * @param {number} bottom Bottom bound of the frustum\n\t * @param {number} top Top bound of the frustum\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction ortho(out, left, right, bottom, top, near, far) {\n\t  var lr = 1 / (left - right);\n\t  var bt = 1 / (bottom - top);\n\t  var nf = 1 / (near - far);\n\t  out[0] = -2 * lr;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = -2 * bt;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 2 * nf;\n\t  out[11] = 0;\n\t  out[12] = (left + right) * lr;\n\t  out[13] = (top + bottom) * bt;\n\t  out[14] = (far + near) * nf;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a look-at matrix with the given eye position, focal point, and up axis\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tfunction lookAt(out, eye, center, up) {\n\t  var x0 = void 0,\n\t      x1 = void 0,\n\t      x2 = void 0,\n\t      y0 = void 0,\n\t      y1 = void 0,\n\t      y2 = void 0,\n\t      z0 = void 0,\n\t      z1 = void 0,\n\t      z2 = void 0,\n\t      len = void 0;\n\t  var eyex = eye[0];\n\t  var eyey = eye[1];\n\t  var eyez = eye[2];\n\t  var upx = up[0];\n\t  var upy = up[1];\n\t  var upz = up[2];\n\t  var centerx = center[0];\n\t  var centery = center[1];\n\t  var centerz = center[2];\n\t\n\t  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n\t    return identity(out);\n\t  }\n\t\n\t  z0 = eyex - centerx;\n\t  z1 = eyey - centery;\n\t  z2 = eyez - centerz;\n\t\n\t  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\t  z0 *= len;\n\t  z1 *= len;\n\t  z2 *= len;\n\t\n\t  x0 = upy * z2 - upz * z1;\n\t  x1 = upz * z0 - upx * z2;\n\t  x2 = upx * z1 - upy * z0;\n\t  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\t  if (!len) {\n\t    x0 = 0;\n\t    x1 = 0;\n\t    x2 = 0;\n\t  } else {\n\t    len = 1 / len;\n\t    x0 *= len;\n\t    x1 *= len;\n\t    x2 *= len;\n\t  }\n\t\n\t  y0 = z1 * x2 - z2 * x1;\n\t  y1 = z2 * x0 - z0 * x2;\n\t  y2 = z0 * x1 - z1 * x0;\n\t\n\t  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\t  if (!len) {\n\t    y0 = 0;\n\t    y1 = 0;\n\t    y2 = 0;\n\t  } else {\n\t    len = 1 / len;\n\t    y0 *= len;\n\t    y1 *= len;\n\t    y2 *= len;\n\t  }\n\t\n\t  out[0] = x0;\n\t  out[1] = y0;\n\t  out[2] = z0;\n\t  out[3] = 0;\n\t  out[4] = x1;\n\t  out[5] = y1;\n\t  out[6] = z1;\n\t  out[7] = 0;\n\t  out[8] = x2;\n\t  out[9] = y2;\n\t  out[10] = z2;\n\t  out[11] = 0;\n\t  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n\t  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n\t  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a matrix that makes something look at something else.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tfunction targetTo(out, eye, target, up) {\n\t  var eyex = eye[0],\n\t      eyey = eye[1],\n\t      eyez = eye[2],\n\t      upx = up[0],\n\t      upy = up[1],\n\t      upz = up[2];\n\t\n\t  var z0 = eyex - target[0],\n\t      z1 = eyey - target[1],\n\t      z2 = eyez - target[2];\n\t\n\t  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\t  if (len > 0) {\n\t    len = 1 / Math.sqrt(len);\n\t    z0 *= len;\n\t    z1 *= len;\n\t    z2 *= len;\n\t  }\n\t\n\t  var x0 = upy * z2 - upz * z1,\n\t      x1 = upz * z0 - upx * z2,\n\t      x2 = upx * z1 - upy * z0;\n\t\n\t  out[0] = x0;\n\t  out[1] = x1;\n\t  out[2] = x2;\n\t  out[3] = 0;\n\t  out[4] = z1 * x2 - z2 * x1;\n\t  out[5] = z2 * x0 - z0 * x2;\n\t  out[6] = z0 * x1 - z1 * x0;\n\t  out[7] = 0;\n\t  out[8] = z0;\n\t  out[9] = z1;\n\t  out[10] = z2;\n\t  out[11] = 0;\n\t  out[12] = eyex;\n\t  out[13] = eyey;\n\t  out[14] = eyez;\n\t  out[15] = 1;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat4\n\t *\n\t * @param {mat4} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat4\n\t *\n\t * @param {mat4} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n\t}\n\t\n\t/**\n\t * Adds two mat4's\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  out[6] = a[6] + b[6];\n\t  out[7] = a[7] + b[7];\n\t  out[8] = a[8] + b[8];\n\t  out[9] = a[9] + b[9];\n\t  out[10] = a[10] + b[10];\n\t  out[11] = a[11] + b[11];\n\t  out[12] = a[12] + b[12];\n\t  out[13] = a[13] + b[13];\n\t  out[14] = a[14] + b[14];\n\t  out[15] = a[15] + b[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  out[6] = a[6] - b[6];\n\t  out[7] = a[7] - b[7];\n\t  out[8] = a[8] - b[8];\n\t  out[9] = a[9] - b[9];\n\t  out[10] = a[10] - b[10];\n\t  out[11] = a[11] - b[11];\n\t  out[12] = a[12] - b[12];\n\t  out[13] = a[13] - b[13];\n\t  out[14] = a[14] - b[14];\n\t  out[15] = a[15] - b[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat4} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  out[6] = a[6] * b;\n\t  out[7] = a[7] * b;\n\t  out[8] = a[8] * b;\n\t  out[9] = a[9] * b;\n\t  out[10] = a[10] * b;\n\t  out[11] = a[11] * b;\n\t  out[12] = a[12] * b;\n\t  out[13] = a[13] * b;\n\t  out[14] = a[14] * b;\n\t  out[15] = a[15] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat4} out the receiving vector\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat4} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  out[6] = a[6] + b[6] * scale;\n\t  out[7] = a[7] + b[7] * scale;\n\t  out[8] = a[8] + b[8] * scale;\n\t  out[9] = a[9] + b[9] * scale;\n\t  out[10] = a[10] + b[10] * scale;\n\t  out[11] = a[11] + b[11] * scale;\n\t  out[12] = a[12] + b[12] * scale;\n\t  out[13] = a[13] + b[13] * scale;\n\t  out[14] = a[14] + b[14] * scale;\n\t  out[15] = a[15] + b[15] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat4} a The first matrix.\n\t * @param {mat4} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat4} a The first matrix.\n\t * @param {mat4} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var a4 = a[4],\n\t      a5 = a[5],\n\t      a6 = a[6],\n\t      a7 = a[7];\n\t  var a8 = a[8],\n\t      a9 = a[9],\n\t      a10 = a[10],\n\t      a11 = a[11];\n\t  var a12 = a[12],\n\t      a13 = a[13],\n\t      a14 = a[14],\n\t      a15 = a[15];\n\t\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  var b4 = b[4],\n\t      b5 = b[5],\n\t      b6 = b[6],\n\t      b7 = b[7];\n\t  var b8 = b[8],\n\t      b9 = b[9],\n\t      b10 = b[10],\n\t      b11 = b[11];\n\t  var b12 = b[12],\n\t      b13 = b[13],\n\t      b14 = b[14],\n\t      b15 = b[15];\n\t\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat4.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat4.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\n\texports.create = create;\n\texports.identity = identity;\n\texports.setAxisAngle = setAxisAngle;\n\texports.getAxisAngle = getAxisAngle;\n\texports.multiply = multiply;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.calculateW = calculateW;\n\texports.slerp = slerp;\n\texports.invert = invert;\n\texports.conjugate = conjugate;\n\texports.fromMat3 = fromMat3;\n\texports.fromEuler = fromEuler;\n\texports.str = str;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tvar _mat = __webpack_require__(1);\n\t\n\tvar mat3 = _interopRequireWildcard(_mat);\n\t\n\tvar _vec = __webpack_require__(2);\n\t\n\tvar vec3 = _interopRequireWildcard(_vec);\n\t\n\tvar _vec2 = __webpack_require__(3);\n\t\n\tvar vec4 = _interopRequireWildcard(_vec2);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Quaternion\n\t * @module quat\n\t */\n\t\n\t/**\n\t * Creates a new identity quat\n\t *\n\t * @returns {quat} a new quaternion\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a quat to the identity quaternion\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @returns {quat} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Sets a quat from the given angle and rotation axis,\n\t * then returns it.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {vec3} axis the axis around which to rotate\n\t * @param {Number} rad the angle in radians\n\t * @returns {quat} out\n\t **/\n\tfunction setAxisAngle(out, axis, rad) {\n\t  rad = rad * 0.5;\n\t  var s = Math.sin(rad);\n\t  out[0] = s * axis[0];\n\t  out[1] = s * axis[1];\n\t  out[2] = s * axis[2];\n\t  out[3] = Math.cos(rad);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Gets the rotation axis and angle for a given\n\t *  quaternion. If a quaternion is created with\n\t *  setAxisAngle, this method will return the same\n\t *  values as providied in the original parameter list\n\t *  OR functionally equivalent values.\n\t * Example: The quaternion formed by axis [0, 0, 1] and\n\t *  angle -90 is the same as the quaternion formed by\n\t *  [0, 0, 1] and 270. This method favors the latter.\n\t * @param  {vec3} out_axis  Vector receiving the axis of rotation\n\t * @param  {quat} q     Quaternion to be decomposed\n\t * @return {Number}     Angle, in radians, of the rotation\n\t */\n\tfunction getAxisAngle(out_axis, q) {\n\t  var rad = Math.acos(q[3]) * 2.0;\n\t  var s = Math.sin(rad / 2.0);\n\t  if (s != 0.0) {\n\t    out_axis[0] = q[0] / s;\n\t    out_axis[1] = q[1] / s;\n\t    out_axis[2] = q[2] / s;\n\t  } else {\n\t    // If s is zero, return any axis (no rotation - axis does not matter)\n\t    out_axis[0] = 1;\n\t    out_axis[1] = 0;\n\t    out_axis[2] = 0;\n\t  }\n\t  return rad;\n\t}\n\t\n\t/**\n\t * Multiplies two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2],\n\t      bw = b[3];\n\t\n\t  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n\t  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n\t  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n\t  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the X axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateX(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw + aw * bx;\n\t  out[1] = ay * bw + az * bx;\n\t  out[2] = az * bw - ay * bx;\n\t  out[3] = aw * bw - ax * bx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Y axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateY(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var by = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw - az * by;\n\t  out[1] = ay * bw + aw * by;\n\t  out[2] = az * bw + ax * by;\n\t  out[3] = aw * bw - ay * by;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Z axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateZ(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bz = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw + ay * bz;\n\t  out[1] = ay * bw - ax * bz;\n\t  out[2] = az * bw + aw * bz;\n\t  out[3] = aw * bw - az * bz;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the W component of a quat from the X, Y, and Z components.\n\t * Assumes that quaternion is 1 unit in length.\n\t * Any existing W component will be ignored.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate W component of\n\t * @returns {quat} out\n\t */\n\tfunction calculateW(out, a) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a spherical linear interpolation between two quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t */\n\tfunction slerp(out, a, b, t) {\n\t  // benchmarks:\n\t  //    http://jsperf.com/quaternion-slerp-implementations\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2],\n\t      bw = b[3];\n\t\n\t  var omega = void 0,\n\t      cosom = void 0,\n\t      sinom = void 0,\n\t      scale0 = void 0,\n\t      scale1 = void 0;\n\t\n\t  // calc cosine\n\t  cosom = ax * bx + ay * by + az * bz + aw * bw;\n\t  // adjust signs (if necessary)\n\t  if (cosom < 0.0) {\n\t    cosom = -cosom;\n\t    bx = -bx;\n\t    by = -by;\n\t    bz = -bz;\n\t    bw = -bw;\n\t  }\n\t  // calculate coefficients\n\t  if (1.0 - cosom > 0.000001) {\n\t    // standard case (slerp)\n\t    omega = Math.acos(cosom);\n\t    sinom = Math.sin(omega);\n\t    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n\t    scale1 = Math.sin(t * omega) / sinom;\n\t  } else {\n\t    // \"from\" and \"to\" quaternions are very close\n\t    //  ... so we can do a linear interpolation\n\t    scale0 = 1.0 - t;\n\t    scale1 = t;\n\t  }\n\t  // calculate final values\n\t  out[0] = scale0 * ax + scale1 * bx;\n\t  out[1] = scale0 * ay + scale1 * by;\n\t  out[2] = scale0 * az + scale1 * bz;\n\t  out[3] = scale0 * aw + scale1 * bw;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the inverse of a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate inverse of\n\t * @returns {quat} out\n\t */\n\tfunction invert(out, a) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n\t  var invDot = dot ? 1.0 / dot : 0;\n\t\n\t  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\t\n\t  out[0] = -a0 * invDot;\n\t  out[1] = -a1 * invDot;\n\t  out[2] = -a2 * invDot;\n\t  out[3] = a3 * invDot;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the conjugate of a quat\n\t * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate conjugate of\n\t * @returns {quat} out\n\t */\n\tfunction conjugate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a quaternion from the given 3x3 rotation matrix.\n\t *\n\t * NOTE: The resultant quaternion is not normalized, so you should be sure\n\t * to renormalize the quaternion yourself where necessary.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {mat3} m rotation matrix\n\t * @returns {quat} out\n\t * @function\n\t */\n\tfunction fromMat3(out, m) {\n\t  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t  // article \"Quaternion Calculus and Fast Animation\".\n\t  var fTrace = m[0] + m[4] + m[8];\n\t  var fRoot = void 0;\n\t\n\t  if (fTrace > 0.0) {\n\t    // |w| > 1/2, may as well choose w > 1/2\n\t    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\t    out[3] = 0.5 * fRoot;\n\t    fRoot = 0.5 / fRoot; // 1/(4w)\n\t    out[0] = (m[5] - m[7]) * fRoot;\n\t    out[1] = (m[6] - m[2]) * fRoot;\n\t    out[2] = (m[1] - m[3]) * fRoot;\n\t  } else {\n\t    // |w| <= 1/2\n\t    var i = 0;\n\t    if (m[4] > m[0]) i = 1;\n\t    if (m[8] > m[i * 3 + i]) i = 2;\n\t    var j = (i + 1) % 3;\n\t    var k = (i + 2) % 3;\n\t\n\t    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n\t    out[i] = 0.5 * fRoot;\n\t    fRoot = 0.5 / fRoot;\n\t    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n\t    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n\t    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a quaternion from the given euler angle x, y, z.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {x} Angle to rotate around X axis in degrees.\n\t * @param {y} Angle to rotate around Y axis in degrees.\n\t * @param {z} Angle to rotate around Z axis in degrees.\n\t * @returns {quat} out\n\t * @function\n\t */\n\tfunction fromEuler(out, x, y, z) {\n\t  var halfToRad = 0.5 * Math.PI / 180.0;\n\t  x *= halfToRad;\n\t  y *= halfToRad;\n\t  z *= halfToRad;\n\t\n\t  var sx = Math.sin(x);\n\t  var cx = Math.cos(x);\n\t  var sy = Math.sin(y);\n\t  var cy = Math.cos(y);\n\t  var sz = Math.sin(z);\n\t  var cz = Math.cos(z);\n\t\n\t  out[0] = sx * cy * cz - cx * sy * sz;\n\t  out[1] = cx * sy * cz + sx * cy * sz;\n\t  out[2] = cx * cy * sz - sx * sy * cz;\n\t  out[3] = cx * cy * cz + sx * sy * sz;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a quatenion\n\t *\n\t * @param {quat} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Creates a new quat initialized with values from an existing quaternion\n\t *\n\t * @param {quat} a quaternion to clone\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tvar clone = exports.clone = vec4.clone;\n\t\n\t/**\n\t * Creates a new quat initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tvar fromValues = exports.fromValues = vec4.fromValues;\n\t\n\t/**\n\t * Copy the values from one quat to another\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the source quaternion\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar copy = exports.copy = vec4.copy;\n\t\n\t/**\n\t * Set the components of a quat to the given values\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar set = exports.set = vec4.set;\n\t\n\t/**\n\t * Adds two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar add = exports.add = vec4.add;\n\t\n\t/**\n\t * Alias for {@link quat.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Scales a quat by a scalar number\n\t *\n\t * @param {quat} out the receiving vector\n\t * @param {quat} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar scale = exports.scale = vec4.scale;\n\t\n\t/**\n\t * Calculates the dot product of two quat's\n\t *\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {Number} dot product of a and b\n\t * @function\n\t */\n\tvar dot = exports.dot = vec4.dot;\n\t\n\t/**\n\t * Performs a linear interpolation between two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar lerp = exports.lerp = vec4.lerp;\n\t\n\t/**\n\t * Calculates the length of a quat\n\t *\n\t * @param {quat} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvar length = exports.length = vec4.length;\n\t\n\t/**\n\t * Alias for {@link quat.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Calculates the squared length of a quat\n\t *\n\t * @param {quat} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t * @function\n\t */\n\tvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\t\n\t/**\n\t * Alias for {@link quat.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Normalize a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quaternion to normalize\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar normalize = exports.normalize = vec4.normalize;\n\t\n\t/**\n\t * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {quat} a The first quaternion.\n\t * @param {quat} b The second quaternion.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\t\n\t/**\n\t * Returns whether or not the quaternions have approximately the same elements in the same position.\n\t *\n\t * @param {quat} a The first vector.\n\t * @param {quat} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tvar equals = exports.equals = vec4.equals;\n\t\n\t/**\n\t * Sets a quaternion to represent the shortest rotation from one\n\t * vector to another.\n\t *\n\t * Both vectors are assumed to be unit length.\n\t *\n\t * @param {quat} out the receiving quaternion.\n\t * @param {vec3} a the initial vector\n\t * @param {vec3} b the destination vector\n\t * @returns {quat} out\n\t */\n\tvar rotationTo = exports.rotationTo = function () {\n\t  var tmpvec3 = vec3.create();\n\t  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n\t  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\t\n\t  return function (out, a, b) {\n\t    var dot = vec3.dot(a, b);\n\t    if (dot < -0.999999) {\n\t      vec3.cross(tmpvec3, xUnitVec3, a);\n\t      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n\t      vec3.normalize(tmpvec3, tmpvec3);\n\t      setAxisAngle(out, tmpvec3, Math.PI);\n\t      return out;\n\t    } else if (dot > 0.999999) {\n\t      out[0] = 0;\n\t      out[1] = 0;\n\t      out[2] = 0;\n\t      out[3] = 1;\n\t      return out;\n\t    } else {\n\t      vec3.cross(tmpvec3, a, b);\n\t      out[0] = tmpvec3[0];\n\t      out[1] = tmpvec3[1];\n\t      out[2] = tmpvec3[2];\n\t      out[3] = 1 + dot;\n\t      return normalize(out, out);\n\t    }\n\t  };\n\t}();\n\t\n\t/**\n\t * Performs a spherical linear interpolation with two control points\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {quat} c the third operand\n\t * @param {quat} d the fourth operand\n\t * @param {Number} t interpolation amount\n\t * @returns {quat} out\n\t */\n\tvar sqlerp = exports.sqlerp = function () {\n\t  var temp1 = create();\n\t  var temp2 = create();\n\t\n\t  return function (out, a, b, c, d, t) {\n\t    slerp(temp1, a, d, t);\n\t    slerp(temp2, b, c, t);\n\t    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\t\n\t    return out;\n\t  };\n\t}();\n\t\n\t/**\n\t * Sets the specified quaternion with values corresponding to the given\n\t * axes. Each axis is a vec3 and is expected to be unit length and\n\t * perpendicular to all other specified axes.\n\t *\n\t * @param {vec3} view  the vector representing the viewing direction\n\t * @param {vec3} right the vector representing the local \"right\" direction\n\t * @param {vec3} up    the vector representing the local \"up\" direction\n\t * @returns {quat} out\n\t */\n\tvar setAxes = exports.setAxes = function () {\n\t  var matr = mat3.create();\n\t\n\t  return function (out, view, right, up) {\n\t    matr[0] = right[0];\n\t    matr[3] = right[1];\n\t    matr[6] = right[2];\n\t\n\t    matr[1] = up[0];\n\t    matr[4] = up[1];\n\t    matr[7] = up[2];\n\t\n\t    matr[2] = -view[0];\n\t    matr[5] = -view[1];\n\t    matr[8] = -view[2];\n\t\n\t    return normalize(out, fromMat3(out, matr));\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.length = length;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.cross = cross;\n\texports.lerp = lerp;\n\texports.random = random;\n\texports.transformMat2 = transformMat2;\n\texports.transformMat2d = transformMat2d;\n\texports.transformMat3 = transformMat3;\n\texports.transformMat4 = transformMat4;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2 Dimensional Vector\n\t * @module vec2\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec2\n\t *\n\t * @returns {vec2} a new 2D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec2 initialized with values from an existing vector\n\t *\n\t * @param {vec2} a vector to clone\n\t * @returns {vec2} a new 2D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec2 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} a new 2D vector\n\t */\n\tfunction fromValues(x, y) {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec2 to another\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the source vector\n\t * @returns {vec2} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec2 to the given values\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} out\n\t */\n\tfunction set(out, x, y) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Divides two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.ceil the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to ceil\n\t * @returns {vec2} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.floor the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to floor\n\t * @returns {vec2} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the minimum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.round the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to round\n\t * @returns {vec2} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Scales a vec2 by a scalar number\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec2} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec2} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0],\n\t      y = b[1] - a[1];\n\t  return Math.sqrt(x * x + y * y);\n\t};\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0],\n\t      y = b[1] - a[1];\n\t  return x * x + y * y;\n\t};\n\t\n\t/**\n\t * Calculates the length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  return Math.sqrt(x * x + y * y);\n\t};\n\t\n\t/**\n\t * Calculates the squared length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  return x * x + y * y;\n\t};\n\t\n\t/**\n\t * Negates the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to negate\n\t * @returns {vec2} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to invert\n\t * @returns {vec2} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to normalize\n\t * @returns {vec2} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  var len = x * x + y * y;\n\t  if (len > 0) {\n\t    //TODO: evaluate use of glm_invsqrt here?\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = a[0] * len;\n\t    out[1] = a[1] * len;\n\t  }\n\t  return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec2's\n\t * Note that the cross product must by definition produce a 3D vector\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction cross(out, a, b) {\n\t  var z = a[0] * b[1] - a[1] * b[0];\n\t  out[0] = out[1] = 0;\n\t  out[2] = z;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec2} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0],\n\t      ay = a[1];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec2} out\n\t */\n\tfunction random(out, scale) {\n\t  scale = scale || 1.0;\n\t  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t  out[0] = Math.cos(r) * scale;\n\t  out[1] = Math.sin(r) * scale;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat2(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[2] * y;\n\t  out[1] = m[1] * x + m[3] * y;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2d\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2d} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat2d(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[2] * y + m[4];\n\t  out[1] = m[1] * x + m[3] * y + m[5];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat3\n\t * 3rd vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat3} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat3(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[3] * y + m[6];\n\t  out[1] = m[1] * x + m[4] * y + m[7];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat4\n\t * 3rd vector component is implicitly '0'\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  out[0] = m[0] * x + m[4] * y + m[12];\n\t  out[1] = m[1] * x + m[5] * y + m[13];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec2} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec2} a The first vector.\n\t * @param {vec2} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec2} a The first vector.\n\t * @param {vec2} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1];\n\t  var b0 = b[0],\n\t      b1 = b[1];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec2.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec2.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec2.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec2.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec2.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec2.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec2.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec2s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 2;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar has = Object.prototype.hasOwnProperty\n\t  , prefix = '~';\n\t\n\t/**\n\t * Constructor to create a storage for our `EE` objects.\n\t * An `Events` instance is a plain object whose properties are event names.\n\t *\n\t * @constructor\n\t * @api private\n\t */\n\tfunction Events() {}\n\t\n\t//\n\t// We try to not inherit from `Object.prototype`. In some engines creating an\n\t// instance in this way is faster than calling `Object.create(null)` directly.\n\t// If `Object.create(null)` is not supported we prefix the event names with a\n\t// character to make sure that the built-in object properties are not\n\t// overridden or used as an attack vector.\n\t//\n\tif (Object.create) {\n\t  Events.prototype = Object.create(null);\n\t\n\t  //\n\t  // This hack is needed because the `__proto__` property is still inherited in\n\t  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n\t  //\n\t  if (!new Events().__proto__) prefix = false;\n\t}\n\t\n\t/**\n\t * Representation of a single event listener.\n\t *\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} context The context to invoke the listener with.\n\t * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n\t * @constructor\n\t * @api private\n\t */\n\tfunction EE(fn, context, once) {\n\t  this.fn = fn;\n\t  this.context = context;\n\t  this.once = once || false;\n\t}\n\t\n\t/**\n\t * Minimal `EventEmitter` interface that is molded against the Node.js\n\t * `EventEmitter` interface.\n\t *\n\t * @constructor\n\t * @api public\n\t */\n\tfunction EventEmitter() {\n\t  this._events = new Events();\n\t  this._eventsCount = 0;\n\t}\n\t\n\t/**\n\t * Return an array listing the events for which the emitter has registered\n\t * listeners.\n\t *\n\t * @returns {Array}\n\t * @api public\n\t */\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  var names = []\n\t    , events\n\t    , name;\n\t\n\t  if (this._eventsCount === 0) return names;\n\t\n\t  for (name in (events = this._events)) {\n\t    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n\t  }\n\t\n\t  if (Object.getOwnPropertySymbols) {\n\t    return names.concat(Object.getOwnPropertySymbols(events));\n\t  }\n\t\n\t  return names;\n\t};\n\t\n\t/**\n\t * Return the listeners registered for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Boolean} exists Only check if there are listeners.\n\t * @returns {Array|Boolean}\n\t * @api public\n\t */\n\tEventEmitter.prototype.listeners = function listeners(event, exists) {\n\t  var evt = prefix ? prefix + event : event\n\t    , available = this._events[evt];\n\t\n\t  if (exists) return !!available;\n\t  if (!available) return [];\n\t  if (available.fn) return [available.fn];\n\t\n\t  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n\t    ee[i] = available[i].fn;\n\t  }\n\t\n\t  return ee;\n\t};\n\t\n\t/**\n\t * Calls each of the listeners registered for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @returns {Boolean} `true` if the event had listeners, else `false`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) return false;\n\t\n\t  var listeners = this._events[evt]\n\t    , len = arguments.length\n\t    , args\n\t    , i;\n\t\n\t  if (listeners.fn) {\n\t    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\t\n\t    switch (len) {\n\t      case 1: return listeners.fn.call(listeners.context), true;\n\t      case 2: return listeners.fn.call(listeners.context, a1), true;\n\t      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n\t      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\t      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\t      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n\t    }\n\t\n\t    for (i = 1, args = new Array(len -1); i < len; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t\n\t    listeners.fn.apply(listeners.context, args);\n\t  } else {\n\t    var length = listeners.length\n\t      , j;\n\t\n\t    for (i = 0; i < length; i++) {\n\t      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\t\n\t      switch (len) {\n\t        case 1: listeners[i].fn.call(listeners[i].context); break;\n\t        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n\t        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n\t        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n\t        default:\n\t          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n\t            args[j - 1] = arguments[j];\n\t          }\n\t\n\t          listeners[i].fn.apply(listeners[i].context, args);\n\t      }\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * Add a listener for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.on = function on(event, fn, context) {\n\t  var listener = new EE(fn, context || this)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n\t  else if (!this._events[evt].fn) this._events[evt].push(listener);\n\t  else this._events[evt] = [this._events[evt], listener];\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add a one-time listener for a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {Mixed} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.once = function once(event, fn, context) {\n\t  var listener = new EE(fn, context || this, true)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n\t  else if (!this._events[evt].fn) this._events[evt].push(listener);\n\t  else this._events[evt] = [this._events[evt], listener];\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the listeners of a given event.\n\t *\n\t * @param {String|Symbol} event The event name.\n\t * @param {Function} fn Only remove the listeners that match this function.\n\t * @param {Mixed} context Only remove the listeners that have this context.\n\t * @param {Boolean} once Only remove one-time listeners.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events[evt]) return this;\n\t  if (!fn) {\n\t    if (--this._eventsCount === 0) this._events = new Events();\n\t    else delete this._events[evt];\n\t    return this;\n\t  }\n\t\n\t  var listeners = this._events[evt];\n\t\n\t  if (listeners.fn) {\n\t    if (\n\t         listeners.fn === fn\n\t      && (!once || listeners.once)\n\t      && (!context || listeners.context === context)\n\t    ) {\n\t      if (--this._eventsCount === 0) this._events = new Events();\n\t      else delete this._events[evt];\n\t    }\n\t  } else {\n\t    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n\t      if (\n\t           listeners[i].fn !== fn\n\t        || (once && !listeners[i].once)\n\t        || (context && listeners[i].context !== context)\n\t      ) {\n\t        events.push(listeners[i]);\n\t      }\n\t    }\n\t\n\t    //\n\t    // Reset the array, or remove it completely if we have no more listeners.\n\t    //\n\t    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n\t    else if (--this._eventsCount === 0) this._events = new Events();\n\t    else delete this._events[evt];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove all listeners, or those of the specified event.\n\t *\n\t * @param {String|Symbol} [event] The event name.\n\t * @returns {EventEmitter} `this`.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n\t  var evt;\n\t\n\t  if (event) {\n\t    evt = prefix ? prefix + event : event;\n\t    if (this._events[evt]) {\n\t      if (--this._eventsCount === 0) this._events = new Events();\n\t      else delete this._events[evt];\n\t    }\n\t  } else {\n\t    this._events = new Events();\n\t    this._eventsCount = 0;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Alias methods names because people roll like that.\n\t//\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\tEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t//\n\t// This function doesn't apply anymore.\n\t//\n\tEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n\t  return this;\n\t};\n\t\n\t//\n\t// Expose the prefix.\n\t//\n\tEventEmitter.prefixed = prefix;\n\t\n\t//\n\t// Allow `EventEmitter` to be imported as module namespace.\n\t//\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\t//\n\t// Expose the module.\n\t//\n\tif (true) {\n\t  module.exports = EventEmitter;\n\t}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @fileoverview gl-matrix - High performance matrix and vector operations\n\t * @author Brandon Jones\n\t * @author Colin MacKenzie IV\n\t * @version 2.4.0\n\t */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse {\n\t\t\tvar a = factory();\n\t\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t\t}\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setMatrixArrayType = setMatrixArrayType;\n\texports.toRadian = toRadian;\n\texports.equals = equals;\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t/**\n\t * Common utilities\n\t * @module glMatrix\n\t */\n\t\n\t// Configuration Constants\n\tvar EPSILON = exports.EPSILON = 0.000001;\n\tvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\tvar RANDOM = exports.RANDOM = Math.random;\n\t\n\t/**\n\t * Sets the type of array used when creating new vectors and matrices\n\t *\n\t * @param {Type} type Array type, such as Float32Array or Array\n\t */\n\tfunction setMatrixArrayType(type) {\n\t  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n\t}\n\t\n\tvar degree = Math.PI / 180;\n\t\n\t/**\n\t * Convert Degree To Radian\n\t *\n\t * @param {Number} a Angle in Degrees\n\t */\n\tfunction toRadian(a) {\n\t  return a * degree;\n\t}\n\t\n\t/**\n\t * Tests whether or not the arguments have approximately the same value, within an absolute\n\t * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n\t * than or equal to 1.0, and a relative tolerance is used for larger values)\n\t *\n\t * @param {Number} a The first number to test.\n\t * @param {Number} b The second number to test.\n\t * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n\t}\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.fromMat4 = fromMat4;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.identity = identity;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.translate = translate;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.fromTranslation = fromTranslation;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.fromMat2d = fromMat2d;\n\texports.fromQuat = fromQuat;\n\texports.normalFromMat4 = normalFromMat4;\n\texports.projection = projection;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 3x3 Matrix\n\t * @module mat3\n\t */\n\t\n\t/**\n\t * Creates a new identity mat3\n\t *\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copies the upper-left 3x3 values into the given mat3.\n\t *\n\t * @param {mat3} out the receiving 3x3 matrix\n\t * @param {mat4} a   the source 4x4 matrix\n\t * @returns {mat3} out\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction fromMat4(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[4];\n\t  out[4] = a[5];\n\t  out[5] = a[6];\n\t  out[6] = a[8];\n\t  out[7] = a[9];\n\t  out[8] = a[10];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat3 initialized with values from an existing matrix\n\t *\n\t * @param {mat3} a matrix to clone\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat3 to another\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat3 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\n\t * @returns {mat3} A new mat3\n\t */\n\tfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n\t  var out = new glMatrix.ARRAY_TYPE(9);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m10;\n\t  out[4] = m11;\n\t  out[5] = m12;\n\t  out[6] = m20;\n\t  out[7] = m21;\n\t  out[8] = m22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat3 to the given values\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 3)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 4)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 5)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 6)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 7)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 8)\n\t * @returns {mat3} out\n\t */\n\tfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m10;\n\t  out[4] = m11;\n\t  out[5] = m12;\n\t  out[6] = m20;\n\t  out[7] = m21;\n\t  out[8] = m22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat3 to the identity matrix\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @returns {mat3} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t  if (out === a) {\n\t    var a01 = a[1],\n\t        a02 = a[2],\n\t        a12 = a[5];\n\t    out[1] = a[3];\n\t    out[2] = a[6];\n\t    out[3] = a01;\n\t    out[5] = a[7];\n\t    out[6] = a02;\n\t    out[7] = a12;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[3];\n\t    out[2] = a[6];\n\t    out[3] = a[1];\n\t    out[4] = a[4];\n\t    out[5] = a[7];\n\t    out[6] = a[2];\n\t    out[7] = a[5];\n\t    out[8] = a[8];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction invert(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  var b01 = a22 * a11 - a12 * a21;\n\t  var b11 = -a22 * a10 + a12 * a20;\n\t  var b21 = a21 * a10 - a11 * a20;\n\t\n\t  // Calculate the determinant\n\t  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = b01 * det;\n\t  out[1] = (-a22 * a01 + a02 * a21) * det;\n\t  out[2] = (a12 * a01 - a02 * a11) * det;\n\t  out[3] = b11 * det;\n\t  out[4] = (a22 * a00 - a02 * a20) * det;\n\t  out[5] = (-a12 * a00 + a02 * a10) * det;\n\t  out[6] = b21 * det;\n\t  out[7] = (-a21 * a00 + a01 * a20) * det;\n\t  out[8] = (a11 * a00 - a01 * a10) * det;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tfunction adjoint(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  out[0] = a11 * a22 - a12 * a21;\n\t  out[1] = a02 * a21 - a01 * a22;\n\t  out[2] = a01 * a12 - a02 * a11;\n\t  out[3] = a12 * a20 - a10 * a22;\n\t  out[4] = a00 * a22 - a02 * a20;\n\t  out[5] = a02 * a10 - a00 * a12;\n\t  out[6] = a10 * a21 - a11 * a20;\n\t  out[7] = a01 * a20 - a00 * a21;\n\t  out[8] = a00 * a11 - a01 * a10;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat3\n\t *\n\t * @param {mat3} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n\t}\n\t\n\t/**\n\t * Multiplies two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2];\n\t  var a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5];\n\t  var a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8];\n\t\n\t  var b00 = b[0],\n\t      b01 = b[1],\n\t      b02 = b[2];\n\t  var b10 = b[3],\n\t      b11 = b[4],\n\t      b12 = b[5];\n\t  var b20 = b[6],\n\t      b21 = b[7],\n\t      b22 = b[8];\n\t\n\t  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\t\n\t  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\t\n\t  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translate a mat3 by the given vector\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to translate\n\t * @param {vec2} v vector to translate by\n\t * @returns {mat3} out\n\t */\n\tfunction translate(out, a, v) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5],\n\t      a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8],\n\t      x = v[0],\n\t      y = v[1];\n\t\n\t  out[0] = a00;\n\t  out[1] = a01;\n\t  out[2] = a02;\n\t\n\t  out[3] = a10;\n\t  out[4] = a11;\n\t  out[5] = a12;\n\t\n\t  out[6] = x * a00 + y * a10 + a20;\n\t  out[7] = x * a01 + y * a11 + a21;\n\t  out[8] = x * a02 + y * a12 + a22;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat3 by the given angle\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a10 = a[3],\n\t      a11 = a[4],\n\t      a12 = a[5],\n\t      a20 = a[6],\n\t      a21 = a[7],\n\t      a22 = a[8],\n\t      s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t\n\t  out[0] = c * a00 + s * a10;\n\t  out[1] = c * a01 + s * a11;\n\t  out[2] = c * a02 + s * a12;\n\t\n\t  out[3] = c * a10 - s * a00;\n\t  out[4] = c * a11 - s * a01;\n\t  out[5] = c * a12 - s * a02;\n\t\n\t  out[6] = a20;\n\t  out[7] = a21;\n\t  out[8] = a22;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Scales the mat3 by the dimensions in the given vec2\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat3} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1];\n\t\n\t  out[0] = x * a[0];\n\t  out[1] = x * a[1];\n\t  out[2] = x * a[2];\n\t\n\t  out[3] = y * a[3];\n\t  out[4] = y * a[4];\n\t  out[5] = y * a[5];\n\t\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.translate(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat3} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 1;\n\t  out[5] = 0;\n\t  out[6] = v[0];\n\t  out[7] = v[1];\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.rotate(dest, dest, rad);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = 0;\n\t\n\t  out[3] = -s;\n\t  out[4] = c;\n\t  out[5] = 0;\n\t\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.scale(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat3} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t\n\t  out[3] = 0;\n\t  out[4] = v[1];\n\t  out[5] = 0;\n\t\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copies the values from a mat2d into a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat2d} a the matrix to copy\n\t * @returns {mat3} out\n\t **/\n\tfunction fromMat2d(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = 0;\n\t\n\t  out[3] = a[2];\n\t  out[4] = a[3];\n\t  out[5] = 0;\n\t\n\t  out[6] = a[4];\n\t  out[7] = a[5];\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t* Calculates a 3x3 matrix from the given quaternion\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {quat} q Quaternion to create matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tfunction fromQuat(out, q) {\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var yx = y * x2;\n\t  var yy = y * y2;\n\t  var zx = z * x2;\n\t  var zy = z * y2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - yy - zz;\n\t  out[3] = yx - wz;\n\t  out[6] = zx + wy;\n\t\n\t  out[1] = yx + wz;\n\t  out[4] = 1 - xx - zz;\n\t  out[7] = zy - wx;\n\t\n\t  out[2] = zx - wy;\n\t  out[5] = zy + wx;\n\t  out[8] = 1 - xx - yy;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {mat4} a Mat4 to derive the normal matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tfunction normalFromMat4(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t\n\t  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t\n\t  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a 2D projection matrix with the given bounds\n\t *\n\t * @param {mat3} out mat3 frustum matrix will be written into\n\t * @param {number} width Width of your gl context\n\t * @param {number} height Height of gl context\n\t * @returns {mat3} out\n\t */\n\tfunction projection(out, width, height) {\n\t  out[0] = 2 / width;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = -2 / height;\n\t  out[5] = 0;\n\t  out[6] = -1;\n\t  out[7] = 1;\n\t  out[8] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat3\n\t *\n\t * @param {mat3} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat3\n\t *\n\t * @param {mat3} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n\t}\n\t\n\t/**\n\t * Adds two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  out[6] = a[6] + b[6];\n\t  out[7] = a[7] + b[7];\n\t  out[8] = a[8] + b[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  out[6] = a[6] - b[6];\n\t  out[7] = a[7] - b[7];\n\t  out[8] = a[8] - b[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat3} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  out[6] = a[6] * b;\n\t  out[7] = a[7] * b;\n\t  out[8] = a[8] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat3} out the receiving vector\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat3} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  out[6] = a[6] + b[6] * scale;\n\t  out[7] = a[7] + b[7] * scale;\n\t  out[8] = a[8] + b[8] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat3} a The first matrix.\n\t * @param {mat3} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat3} a The first matrix.\n\t * @param {mat3} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5],\n\t      a6 = a[6],\n\t      a7 = a[7],\n\t      a8 = a[8];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5],\n\t      b6 = b[6],\n\t      b7 = b[7],\n\t      b8 = b[8];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat3.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat3.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.length = length;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.cross = cross;\n\texports.lerp = lerp;\n\texports.hermite = hermite;\n\texports.bezier = bezier;\n\texports.random = random;\n\texports.transformMat4 = transformMat4;\n\texports.transformMat3 = transformMat3;\n\texports.transformQuat = transformQuat;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.angle = angle;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 3 Dimensional Vector\n\t * @module vec3\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec3\n\t *\n\t * @returns {vec3} a new 3D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec3 initialized with values from an existing vector\n\t *\n\t * @param {vec3} a vector to clone\n\t * @returns {vec3} a new 3D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  return Math.sqrt(x * x + y * y + z * z);\n\t}\n\t\n\t/**\n\t * Creates a new vec3 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} a new 3D vector\n\t */\n\tfunction fromValues(x, y, z) {\n\t  var out = new glMatrix.ARRAY_TYPE(3);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec3 to another\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the source vector\n\t * @returns {vec3} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec3 to the given values\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} out\n\t */\n\tfunction set(out, x, y, z) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  out[2] = a[2] * b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Divides two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  out[2] = a[2] / b[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.ceil the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to ceil\n\t * @returns {vec3} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  out[2] = Math.ceil(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.floor the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to floor\n\t * @returns {vec3} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  out[2] = Math.floor(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the minimum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  out[2] = Math.min(a[2], b[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the maximum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  out[2] = Math.max(a[2], b[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.round the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to round\n\t * @returns {vec3} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  out[2] = Math.round(a[2]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales a vec3 by a scalar number\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec3} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec3's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec3} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  return Math.sqrt(x * x + y * y + z * z);\n\t}\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  return x * x + y * y + z * z;\n\t}\n\t\n\t/**\n\t * Calculates the squared length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  return x * x + y * y + z * z;\n\t}\n\t\n\t/**\n\t * Negates the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to negate\n\t * @returns {vec3} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the inverse of the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to invert\n\t * @returns {vec3} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Normalize a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to normalize\n\t * @returns {vec3} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var len = x * x + y * y + z * z;\n\t  if (len > 0) {\n\t    //TODO: evaluate use of glm_invsqrt here?\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = a[0] * len;\n\t    out[1] = a[1] * len;\n\t    out[2] = a[2] * len;\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the dot product of two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\t/**\n\t * Computes the cross product of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction cross(out, a, b) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2];\n\t\n\t  out[0] = ay * bz - az * by;\n\t  out[1] = az * bx - ax * bz;\n\t  out[2] = ax * by - ay * bx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a linear interpolation between two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0];\n\t  var ay = a[1];\n\t  var az = a[2];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  out[2] = az + t * (b[2] - az);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a hermite interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction hermite(out, a, b, c, d, t) {\n\t  var factorTimes2 = t * t;\n\t  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n\t  var factor2 = factorTimes2 * (t - 2) + t;\n\t  var factor3 = factorTimes2 * (t - 1);\n\t  var factor4 = factorTimes2 * (3 - 2 * t);\n\t\n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a bezier interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tfunction bezier(out, a, b, c, d, t) {\n\t  var inverseFactor = 1 - t;\n\t  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n\t  var factorTimes2 = t * t;\n\t  var factor1 = inverseFactorTimesTwo * inverseFactor;\n\t  var factor2 = 3 * t * inverseFactorTimesTwo;\n\t  var factor3 = 3 * factorTimes2 * inverseFactor;\n\t  var factor4 = factorTimes2 * t;\n\t\n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec3} out\n\t */\n\tfunction random(out, scale) {\n\t  scale = scale || 1.0;\n\t\n\t  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n\t  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\t\n\t  out[0] = Math.cos(r) * zScale;\n\t  out[1] = Math.sin(r) * zScale;\n\t  out[2] = z * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a mat4.\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n\t  w = w || 1.0;\n\t  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n\t  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n\t  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a mat3.\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat3} m the 3x3 matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformMat3(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  out[0] = x * m[0] + y * m[3] + z * m[6];\n\t  out[1] = x * m[1] + y * m[4] + z * m[7];\n\t  out[2] = x * m[2] + y * m[5] + z * m[8];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec3 with a quat\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec3} out\n\t */\n\tfunction transformQuat(out, a, q) {\n\t  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\t\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var qx = q[0],\n\t      qy = q[1],\n\t      qz = q[2],\n\t      qw = q[3];\n\t\n\t  // calculate quat * vec\n\t  var ix = qw * x + qy * z - qz * y;\n\t  var iy = qw * y + qz * x - qx * z;\n\t  var iz = qw * z + qx * y - qy * x;\n\t  var iw = -qx * x - qy * y - qz * z;\n\t\n\t  // calculate result * inverse quat\n\t  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the x-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateX(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n\t  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the y-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateY(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n\t  r[1] = p[1];\n\t  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotate a 3D vector around the z-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tfunction rotateZ(out, a, b, c) {\n\t  var p = [],\n\t      r = [];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n\t  p[2] = a[2] - b[2];\n\t\n\t  //perform rotation\n\t  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n\t  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n\t  r[2] = p[2];\n\t\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Get the angle between two 3D vectors\n\t * @param {vec3} a The first operand\n\t * @param {vec3} b The second operand\n\t * @returns {Number} The angle in radians\n\t */\n\tfunction angle(a, b) {\n\t  var tempA = fromValues(a[0], a[1], a[2]);\n\t  var tempB = fromValues(b[0], b[1], b[2]);\n\t\n\t  normalize(tempA, tempA);\n\t  normalize(tempB, tempB);\n\t\n\t  var cosine = dot(tempA, tempB);\n\t\n\t  if (cosine > 1.0) {\n\t    return 0;\n\t  } else if (cosine < -1.0) {\n\t    return Math.PI;\n\t  } else {\n\t    return Math.acos(cosine);\n\t  }\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec3} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec3} a The first vector.\n\t * @param {vec3} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec3} a The first vector.\n\t * @param {vec3} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec3.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec3.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec3.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec3.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec3.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec3.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec3.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec3s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 3;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.length = length;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.lerp = lerp;\n\texports.random = random;\n\texports.transformMat4 = transformMat4;\n\texports.transformQuat = transformQuat;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 4 Dimensional Vector\n\t * @module vec4\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec4\n\t *\n\t * @returns {vec4} a new 4D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec4 initialized with values from an existing vector\n\t *\n\t * @param {vec4} a vector to clone\n\t * @returns {vec4} a new 4D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec4 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} a new 4D vector\n\t */\n\tfunction fromValues(x, y, z, w) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec4 to another\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the source vector\n\t * @returns {vec4} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec4 to the given values\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} out\n\t */\n\tfunction set(out, x, y, z, w) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  out[2] = a[2] * b[2];\n\t  out[3] = a[3] * b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Divides two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  out[2] = a[2] / b[2];\n\t  out[3] = a[3] / b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.ceil the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to ceil\n\t * @returns {vec4} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  out[2] = Math.ceil(a[2]);\n\t  out[3] = Math.ceil(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.floor the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to floor\n\t * @returns {vec4} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  out[2] = Math.floor(a[2]);\n\t  out[3] = Math.floor(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the minimum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  out[2] = Math.min(a[2], b[2]);\n\t  out[3] = Math.min(a[3], b[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the maximum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  out[2] = Math.max(a[2], b[2]);\n\t  out[3] = Math.max(a[3], b[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Math.round the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to round\n\t * @returns {vec4} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  out[2] = Math.round(a[2]);\n\t  out[3] = Math.round(a[3]);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales a vec4 by a scalar number\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec4} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec4's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec4} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  var w = b[3] - a[3];\n\t  return Math.sqrt(x * x + y * y + z * z + w * w);\n\t}\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0];\n\t  var y = b[1] - a[1];\n\t  var z = b[2] - a[2];\n\t  var w = b[3] - a[3];\n\t  return x * x + y * y + z * z + w * w;\n\t}\n\t\n\t/**\n\t * Calculates the length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  return Math.sqrt(x * x + y * y + z * z + w * w);\n\t}\n\t\n\t/**\n\t * Calculates the squared length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  return x * x + y * y + z * z + w * w;\n\t}\n\t\n\t/**\n\t * Negates the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to negate\n\t * @returns {vec4} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = -a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the inverse of the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to invert\n\t * @returns {vec4} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  out[3] = 1.0 / a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Normalize a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to normalize\n\t * @returns {vec4} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  var z = a[2];\n\t  var w = a[3];\n\t  var len = x * x + y * y + z * z + w * w;\n\t  if (len > 0) {\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = x * len;\n\t    out[1] = y * len;\n\t    out[2] = z * len;\n\t    out[3] = w * len;\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the dot product of two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t}\n\t\n\t/**\n\t * Performs a linear interpolation between two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec4} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0];\n\t  var ay = a[1];\n\t  var az = a[2];\n\t  var aw = a[3];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  out[2] = az + t * (b[2] - az);\n\t  out[3] = aw + t * (b[3] - aw);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec4} out\n\t */\n\tfunction random(out, vectorScale) {\n\t  vectorScale = vectorScale || 1.0;\n\t\n\t  //TODO: This is a pretty awful way of doing this. Find something better.\n\t  out[0] = glMatrix.RANDOM();\n\t  out[1] = glMatrix.RANDOM();\n\t  out[2] = glMatrix.RANDOM();\n\t  out[3] = glMatrix.RANDOM();\n\t  normalize(out, out);\n\t  scale(out, out, vectorScale);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec4 with a mat4.\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec4} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2],\n\t      w = a[3];\n\t  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n\t  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n\t  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n\t  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transforms the vec4 with a quat\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec4} out\n\t */\n\tfunction transformQuat(out, a, q) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t  var qx = q[0],\n\t      qy = q[1],\n\t      qz = q[2],\n\t      qw = q[3];\n\t\n\t  // calculate quat * vec\n\t  var ix = qw * x + qy * z - qz * y;\n\t  var iy = qw * y + qz * x - qx * z;\n\t  var iz = qw * z + qx * y - qy * x;\n\t  var iw = -qx * x - qy * y - qz * z;\n\t\n\t  // calculate result * inverse quat\n\t  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec4} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec4} a The first vector.\n\t * @param {vec4} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec4} a The first vector.\n\t * @param {vec4} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec4.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec4.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec4.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec4.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec4.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec4.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec4.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec4s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 4;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tvar _mat = __webpack_require__(5);\n\t\n\tvar mat2 = _interopRequireWildcard(_mat);\n\t\n\tvar _mat2d = __webpack_require__(6);\n\t\n\tvar mat2d = _interopRequireWildcard(_mat2d);\n\t\n\tvar _mat2 = __webpack_require__(1);\n\t\n\tvar mat3 = _interopRequireWildcard(_mat2);\n\t\n\tvar _mat3 = __webpack_require__(7);\n\t\n\tvar mat4 = _interopRequireWildcard(_mat3);\n\t\n\tvar _quat = __webpack_require__(8);\n\t\n\tvar quat = _interopRequireWildcard(_quat);\n\t\n\tvar _vec = __webpack_require__(9);\n\t\n\tvar vec2 = _interopRequireWildcard(_vec);\n\t\n\tvar _vec2 = __webpack_require__(2);\n\t\n\tvar vec3 = _interopRequireWildcard(_vec2);\n\t\n\tvar _vec3 = __webpack_require__(3);\n\t\n\tvar vec4 = _interopRequireWildcard(_vec3);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.glMatrix = glMatrix;\n\texports.mat2 = mat2;\n\texports.mat2d = mat2d;\n\texports.mat3 = mat3;\n\texports.mat4 = mat4;\n\texports.quat = quat;\n\texports.vec2 = vec2;\n\texports.vec3 = vec3;\n\texports.vec4 = vec4; /**\n\t                      * @fileoverview gl-matrix - High performance matrix and vector operations\n\t                      * @author Brandon Jones\n\t                      * @author Colin MacKenzie IV\n\t                      * @version 2.4.0\n\t                      */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t// END HEADER\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.identity = identity;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.str = str;\n\texports.frob = frob;\n\texports.LDU = LDU;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2x2 Matrix\n\t * @module mat2\n\t */\n\t\n\t/**\n\t * Creates a new identity mat2\n\t *\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat2 initialized with values from an existing matrix\n\t *\n\t * @param {mat2} a matrix to clone\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat2 to another\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat2 to the identity matrix\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @returns {mat2} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat2 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\n\t * @returns {mat2} out A new 2x2 matrix\n\t */\n\tfunction fromValues(m00, m01, m10, m11) {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m10;\n\t  out[3] = m11;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat2 to the given values\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 2)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 3)\n\t * @returns {mat2} out\n\t */\n\tfunction set(out, m00, m01, m10, m11) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m10;\n\t  out[3] = m11;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache\n\t  // some values\n\t  if (out === a) {\n\t    var a1 = a[1];\n\t    out[1] = a[2];\n\t    out[2] = a1;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[2];\n\t    out[2] = a[1];\n\t    out[3] = a[3];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction invert(out, a) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t\n\t  // Calculate the determinant\n\t  var det = a0 * a3 - a2 * a1;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = a3 * det;\n\t  out[1] = -a1 * det;\n\t  out[2] = -a2 * det;\n\t  out[3] = a0 * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tfunction adjoint(out, a) {\n\t  // Caching this value is nessecary if out == a\n\t  var a0 = a[0];\n\t  out[0] = a[3];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = a0;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat2\n\t *\n\t * @param {mat2} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  return a[0] * a[3] - a[2] * a[1];\n\t}\n\t\n\t/**\n\t * Multiplies two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  out[0] = a0 * b0 + a2 * b1;\n\t  out[1] = a1 * b0 + a3 * b1;\n\t  out[2] = a0 * b2 + a2 * b3;\n\t  out[3] = a1 * b2 + a3 * b3;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat2 by the given angle\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = a0 * c + a2 * s;\n\t  out[1] = a1 * c + a3 * s;\n\t  out[2] = a0 * -s + a2 * c;\n\t  out[3] = a1 * -s + a3 * c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat2 by the dimensions in the given vec2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0 * v0;\n\t  out[1] = a1 * v0;\n\t  out[2] = a2 * v1;\n\t  out[3] = a3 * v1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = -s;\n\t  out[3] = c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.scale(dest, dest, vec);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = v[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2\n\t *\n\t * @param {mat2} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2\n\t *\n\t * @param {mat2} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n\t}\n\t\n\t/**\n\t * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n\t * @param {mat2} L the lower triangular matrix\n\t * @param {mat2} D the diagonal matrix\n\t * @param {mat2} U the upper triangular matrix\n\t * @param {mat2} a the input matrix to factorize\n\t */\n\t\n\tfunction LDU(L, D, U, a) {\n\t  L[2] = a[2] / a[0];\n\t  U[0] = a[0];\n\t  U[1] = a[1];\n\t  U[3] = a[3] - L[2] * U[1];\n\t  return [L, D, U];\n\t}\n\t\n\t/**\n\t * Adds two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat2} a The first matrix.\n\t * @param {mat2} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat2} a The first matrix.\n\t * @param {mat2} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat2} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat2} out the receiving vector\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat2} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Alias for {@link mat2.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat2.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.identity = identity;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.invert = invert;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.rotate = rotate;\n\texports.scale = scale;\n\texports.translate = translate;\n\texports.fromRotation = fromRotation;\n\texports.fromScaling = fromScaling;\n\texports.fromTranslation = fromTranslation;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2x3 Matrix\n\t * @module mat2d\n\t *\n\t * @description\n\t * A mat2d contains six elements defined as:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty]\n\t * </pre>\n\t * This is a short form for the 3x3 matrix:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty,\n\t *  0, 0, 1]\n\t * </pre>\n\t * The last row is ignored so the array is shorter and operations are faster.\n\t */\n\t\n\t/**\n\t * Creates a new identity mat2d\n\t *\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat2d initialized with values from an existing matrix\n\t *\n\t * @param {mat2d} a matrix to clone\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat2d to another\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat2d to the identity matrix\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat2d with the given values\n\t *\n\t * @param {Number} a Component A (index 0)\n\t * @param {Number} b Component B (index 1)\n\t * @param {Number} c Component C (index 2)\n\t * @param {Number} d Component D (index 3)\n\t * @param {Number} tx Component TX (index 4)\n\t * @param {Number} ty Component TY (index 5)\n\t * @returns {mat2d} A new mat2d\n\t */\n\tfunction fromValues(a, b, c, d, tx, ty) {\n\t  var out = new glMatrix.ARRAY_TYPE(6);\n\t  out[0] = a;\n\t  out[1] = b;\n\t  out[2] = c;\n\t  out[3] = d;\n\t  out[4] = tx;\n\t  out[5] = ty;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat2d to the given values\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {Number} a Component A (index 0)\n\t * @param {Number} b Component B (index 1)\n\t * @param {Number} c Component C (index 2)\n\t * @param {Number} d Component D (index 3)\n\t * @param {Number} tx Component TX (index 4)\n\t * @param {Number} ty Component TY (index 5)\n\t * @returns {mat2d} out\n\t */\n\tfunction set(out, a, b, c, d, tx, ty) {\n\t  out[0] = a;\n\t  out[1] = b;\n\t  out[2] = c;\n\t  out[3] = d;\n\t  out[4] = tx;\n\t  out[5] = ty;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat2d\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tfunction invert(out, a) {\n\t  var aa = a[0],\n\t      ab = a[1],\n\t      ac = a[2],\n\t      ad = a[3];\n\t  var atx = a[4],\n\t      aty = a[5];\n\t\n\t  var det = aa * ad - ab * ac;\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = ad * det;\n\t  out[1] = -ab * det;\n\t  out[2] = -ac * det;\n\t  out[3] = aa * det;\n\t  out[4] = (ac * aty - ad * atx) * det;\n\t  out[5] = (ab * atx - aa * aty) * det;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat2d\n\t *\n\t * @param {mat2d} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  return a[0] * a[3] - a[1] * a[2];\n\t}\n\t\n\t/**\n\t * Multiplies two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5];\n\t  out[0] = a0 * b0 + a2 * b1;\n\t  out[1] = a1 * b0 + a3 * b1;\n\t  out[2] = a0 * b2 + a2 * b3;\n\t  out[3] = a1 * b2 + a3 * b3;\n\t  out[4] = a0 * b4 + a2 * b5 + a4;\n\t  out[5] = a1 * b4 + a3 * b5 + a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat2d by the given angle\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tfunction rotate(out, a, rad) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  out[0] = a0 * c + a2 * s;\n\t  out[1] = a1 * c + a3 * s;\n\t  out[2] = a0 * -s + a2 * c;\n\t  out[3] = a1 * -s + a3 * c;\n\t  out[4] = a4;\n\t  out[5] = a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0 * v0;\n\t  out[1] = a1 * v0;\n\t  out[2] = a2 * v1;\n\t  out[3] = a3 * v1;\n\t  out[4] = a4;\n\t  out[5] = a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translates the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to translate the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tfunction translate(out, a, v) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var v0 = v[0],\n\t      v1 = v[1];\n\t  out[0] = a0;\n\t  out[1] = a1;\n\t  out[2] = a2;\n\t  out[3] = a3;\n\t  out[4] = a0 * v0 + a2 * v1 + a4;\n\t  out[5] = a1 * v0 + a3 * v1 + a5;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tfunction fromRotation(out, rad) {\n\t  var s = Math.sin(rad),\n\t      c = Math.cos(rad);\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = -s;\n\t  out[3] = c;\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.scale(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2d} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = v[1];\n\t  out[4] = 0;\n\t  out[5] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.translate(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat2d} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  out[4] = v[0];\n\t  out[5] = v[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2d\n\t *\n\t * @param {mat2d} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2d\n\t *\n\t * @param {mat2d} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n\t}\n\t\n\t/**\n\t * Adds two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat2d} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat2d} out the receiving vector\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat2d} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat2d} a The first matrix.\n\t * @param {mat2d} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat2d} a The first matrix.\n\t * @param {mat2d} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3],\n\t      a4 = a[4],\n\t      a5 = a[5];\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3],\n\t      b4 = b[4],\n\t      b5 = b[5];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat2d.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat2d.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.sub = exports.mul = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.copy = copy;\n\texports.fromValues = fromValues;\n\texports.set = set;\n\texports.identity = identity;\n\texports.transpose = transpose;\n\texports.invert = invert;\n\texports.adjoint = adjoint;\n\texports.determinant = determinant;\n\texports.multiply = multiply;\n\texports.translate = translate;\n\texports.scale = scale;\n\texports.rotate = rotate;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.fromTranslation = fromTranslation;\n\texports.fromScaling = fromScaling;\n\texports.fromRotation = fromRotation;\n\texports.fromXRotation = fromXRotation;\n\texports.fromYRotation = fromYRotation;\n\texports.fromZRotation = fromZRotation;\n\texports.fromRotationTranslation = fromRotationTranslation;\n\texports.getTranslation = getTranslation;\n\texports.getScaling = getScaling;\n\texports.getRotation = getRotation;\n\texports.fromRotationTranslationScale = fromRotationTranslationScale;\n\texports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\n\texports.fromQuat = fromQuat;\n\texports.frustum = frustum;\n\texports.perspective = perspective;\n\texports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\n\texports.ortho = ortho;\n\texports.lookAt = lookAt;\n\texports.targetTo = targetTo;\n\texports.str = str;\n\texports.frob = frob;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiplyScalar = multiplyScalar;\n\texports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 4x4 Matrix\n\t * @module mat4\n\t */\n\t\n\t/**\n\t * Creates a new identity mat4\n\t *\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new mat4 initialized with values from an existing matrix\n\t *\n\t * @param {mat4} a matrix to clone\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  out[9] = a[9];\n\t  out[10] = a[10];\n\t  out[11] = a[11];\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one mat4 to another\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  out[2] = a[2];\n\t  out[3] = a[3];\n\t  out[4] = a[4];\n\t  out[5] = a[5];\n\t  out[6] = a[6];\n\t  out[7] = a[7];\n\t  out[8] = a[8];\n\t  out[9] = a[9];\n\t  out[10] = a[10];\n\t  out[11] = a[11];\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Create a new mat4 with the given values\n\t *\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\n\t * @returns {mat4} A new mat4\n\t */\n\tfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n\t  var out = new glMatrix.ARRAY_TYPE(16);\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m03;\n\t  out[4] = m10;\n\t  out[5] = m11;\n\t  out[6] = m12;\n\t  out[7] = m13;\n\t  out[8] = m20;\n\t  out[9] = m21;\n\t  out[10] = m22;\n\t  out[11] = m23;\n\t  out[12] = m30;\n\t  out[13] = m31;\n\t  out[14] = m32;\n\t  out[15] = m33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a mat4 to the given values\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {Number} m00 Component in column 0, row 0 position (index 0)\n\t * @param {Number} m01 Component in column 0, row 1 position (index 1)\n\t * @param {Number} m02 Component in column 0, row 2 position (index 2)\n\t * @param {Number} m03 Component in column 0, row 3 position (index 3)\n\t * @param {Number} m10 Component in column 1, row 0 position (index 4)\n\t * @param {Number} m11 Component in column 1, row 1 position (index 5)\n\t * @param {Number} m12 Component in column 1, row 2 position (index 6)\n\t * @param {Number} m13 Component in column 1, row 3 position (index 7)\n\t * @param {Number} m20 Component in column 2, row 0 position (index 8)\n\t * @param {Number} m21 Component in column 2, row 1 position (index 9)\n\t * @param {Number} m22 Component in column 2, row 2 position (index 10)\n\t * @param {Number} m23 Component in column 2, row 3 position (index 11)\n\t * @param {Number} m30 Component in column 3, row 0 position (index 12)\n\t * @param {Number} m31 Component in column 3, row 1 position (index 13)\n\t * @param {Number} m32 Component in column 3, row 2 position (index 14)\n\t * @param {Number} m33 Component in column 3, row 3 position (index 15)\n\t * @returns {mat4} out\n\t */\n\tfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n\t  out[0] = m00;\n\t  out[1] = m01;\n\t  out[2] = m02;\n\t  out[3] = m03;\n\t  out[4] = m10;\n\t  out[5] = m11;\n\t  out[6] = m12;\n\t  out[7] = m13;\n\t  out[8] = m20;\n\t  out[9] = m21;\n\t  out[10] = m22;\n\t  out[11] = m23;\n\t  out[12] = m30;\n\t  out[13] = m31;\n\t  out[14] = m32;\n\t  out[15] = m33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a mat4 to the identity matrix\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @returns {mat4} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Transpose the values of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction transpose(out, a) {\n\t  // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t  if (out === a) {\n\t    var a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3];\n\t    var a12 = a[6],\n\t        a13 = a[7];\n\t    var a23 = a[11];\n\t\n\t    out[1] = a[4];\n\t    out[2] = a[8];\n\t    out[3] = a[12];\n\t    out[4] = a01;\n\t    out[6] = a[9];\n\t    out[7] = a[13];\n\t    out[8] = a02;\n\t    out[9] = a12;\n\t    out[11] = a[14];\n\t    out[12] = a03;\n\t    out[13] = a13;\n\t    out[14] = a23;\n\t  } else {\n\t    out[0] = a[0];\n\t    out[1] = a[4];\n\t    out[2] = a[8];\n\t    out[3] = a[12];\n\t    out[4] = a[1];\n\t    out[5] = a[5];\n\t    out[6] = a[9];\n\t    out[7] = a[13];\n\t    out[8] = a[2];\n\t    out[9] = a[6];\n\t    out[10] = a[10];\n\t    out[11] = a[14];\n\t    out[12] = a[3];\n\t    out[13] = a[7];\n\t    out[14] = a[11];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Inverts a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction invert(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the adjugate of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tfunction adjoint(out, a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n\t  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\t  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n\t  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\t  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\t  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n\t  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\t  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n\t  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n\t  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\t  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n\t  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\t  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\t  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n\t  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\t  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the determinant of a mat4\n\t *\n\t * @param {mat4} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tfunction determinant(a) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  var b00 = a00 * a11 - a01 * a10;\n\t  var b01 = a00 * a12 - a02 * a10;\n\t  var b02 = a00 * a13 - a03 * a10;\n\t  var b03 = a01 * a12 - a02 * a11;\n\t  var b04 = a01 * a13 - a03 * a11;\n\t  var b05 = a02 * a13 - a03 * a12;\n\t  var b06 = a20 * a31 - a21 * a30;\n\t  var b07 = a20 * a32 - a22 * a30;\n\t  var b08 = a20 * a33 - a23 * a30;\n\t  var b09 = a21 * a32 - a22 * a31;\n\t  var b10 = a21 * a33 - a23 * a31;\n\t  var b11 = a22 * a33 - a23 * a32;\n\t\n\t  // Calculate the determinant\n\t  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t}\n\t\n\t/**\n\t * Multiplies two mat4s\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var a00 = a[0],\n\t      a01 = a[1],\n\t      a02 = a[2],\n\t      a03 = a[3];\n\t  var a10 = a[4],\n\t      a11 = a[5],\n\t      a12 = a[6],\n\t      a13 = a[7];\n\t  var a20 = a[8],\n\t      a21 = a[9],\n\t      a22 = a[10],\n\t      a23 = a[11];\n\t  var a30 = a[12],\n\t      a31 = a[13],\n\t      a32 = a[14],\n\t      a33 = a[15];\n\t\n\t  // Cache only the current line of the second matrix\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n\t  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n\t  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t\n\t  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n\t  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n\t  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n\t  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n\t  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Translate a mat4 by the given vector\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to translate\n\t * @param {vec3} v vector to translate by\n\t * @returns {mat4} out\n\t */\n\tfunction translate(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1],\n\t      z = v[2];\n\t  var a00 = void 0,\n\t      a01 = void 0,\n\t      a02 = void 0,\n\t      a03 = void 0;\n\t  var a10 = void 0,\n\t      a11 = void 0,\n\t      a12 = void 0,\n\t      a13 = void 0;\n\t  var a20 = void 0,\n\t      a21 = void 0,\n\t      a22 = void 0,\n\t      a23 = void 0;\n\t\n\t  if (a === out) {\n\t    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t  } else {\n\t    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n\t    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n\t    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\t\n\t    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n\t    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n\t    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\t\n\t    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {vec3} v the vec3 to scale the matrix by\n\t * @returns {mat4} out\n\t **/\n\tfunction scale(out, a, v) {\n\t  var x = v[0],\n\t      y = v[1],\n\t      z = v[2];\n\t\n\t  out[0] = a[0] * x;\n\t  out[1] = a[1] * x;\n\t  out[2] = a[2] * x;\n\t  out[3] = a[3] * x;\n\t  out[4] = a[4] * y;\n\t  out[5] = a[5] * y;\n\t  out[6] = a[6] * y;\n\t  out[7] = a[7] * y;\n\t  out[8] = a[8] * z;\n\t  out[9] = a[9] * z;\n\t  out[10] = a[10] * z;\n\t  out[11] = a[11] * z;\n\t  out[12] = a[12];\n\t  out[13] = a[13];\n\t  out[14] = a[14];\n\t  out[15] = a[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a mat4 by the given angle around the given axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tfunction rotate(out, a, rad, axis) {\n\t  var x = axis[0],\n\t      y = axis[1],\n\t      z = axis[2];\n\t  var len = Math.sqrt(x * x + y * y + z * z);\n\t  var s = void 0,\n\t      c = void 0,\n\t      t = void 0;\n\t  var a00 = void 0,\n\t      a01 = void 0,\n\t      a02 = void 0,\n\t      a03 = void 0;\n\t  var a10 = void 0,\n\t      a11 = void 0,\n\t      a12 = void 0,\n\t      a13 = void 0;\n\t  var a20 = void 0,\n\t      a21 = void 0,\n\t      a22 = void 0,\n\t      a23 = void 0;\n\t  var b00 = void 0,\n\t      b01 = void 0,\n\t      b02 = void 0;\n\t  var b10 = void 0,\n\t      b11 = void 0,\n\t      b12 = void 0;\n\t  var b20 = void 0,\n\t      b21 = void 0,\n\t      b22 = void 0;\n\t\n\t  if (Math.abs(len) < glMatrix.EPSILON) {\n\t    return null;\n\t  }\n\t\n\t  len = 1 / len;\n\t  x *= len;\n\t  y *= len;\n\t  z *= len;\n\t\n\t  s = Math.sin(rad);\n\t  c = Math.cos(rad);\n\t  t = 1 - c;\n\t\n\t  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n\t  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n\t  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\t\n\t  // Construct the elements of the rotation matrix\n\t  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n\t  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n\t  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\t\n\t  // Perform rotation-specific matrix multiplication\n\t  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged last row\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the X axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateX(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a10 = a[4];\n\t  var a11 = a[5];\n\t  var a12 = a[6];\n\t  var a13 = a[7];\n\t  var a20 = a[8];\n\t  var a21 = a[9];\n\t  var a22 = a[10];\n\t  var a23 = a[11];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged rows\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[4] = a10 * c + a20 * s;\n\t  out[5] = a11 * c + a21 * s;\n\t  out[6] = a12 * c + a22 * s;\n\t  out[7] = a13 * c + a23 * s;\n\t  out[8] = a20 * c - a10 * s;\n\t  out[9] = a21 * c - a11 * s;\n\t  out[10] = a22 * c - a12 * s;\n\t  out[11] = a23 * c - a13 * s;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Y axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateY(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a00 = a[0];\n\t  var a01 = a[1];\n\t  var a02 = a[2];\n\t  var a03 = a[3];\n\t  var a20 = a[8];\n\t  var a21 = a[9];\n\t  var a22 = a[10];\n\t  var a23 = a[11];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged rows\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = a00 * c - a20 * s;\n\t  out[1] = a01 * c - a21 * s;\n\t  out[2] = a02 * c - a22 * s;\n\t  out[3] = a03 * c - a23 * s;\n\t  out[8] = a00 * s + a20 * c;\n\t  out[9] = a01 * s + a21 * c;\n\t  out[10] = a02 * s + a22 * c;\n\t  out[11] = a03 * s + a23 * c;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Z axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction rotateZ(out, a, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t  var a00 = a[0];\n\t  var a01 = a[1];\n\t  var a02 = a[2];\n\t  var a03 = a[3];\n\t  var a10 = a[4];\n\t  var a11 = a[5];\n\t  var a12 = a[6];\n\t  var a13 = a[7];\n\t\n\t  if (a !== out) {\n\t    // If the source and destination differ, copy the unchanged last row\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t  }\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = a00 * c + a10 * s;\n\t  out[1] = a01 * c + a11 * s;\n\t  out[2] = a02 * c + a12 * s;\n\t  out[3] = a03 * c + a13 * s;\n\t  out[4] = a10 * c - a00 * s;\n\t  out[5] = a11 * c - a01 * s;\n\t  out[6] = a12 * c - a02 * s;\n\t  out[7] = a13 * c - a03 * s;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromTranslation(out, v) {\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.scale(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Scaling vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromScaling(out, v) {\n\t  out[0] = v[0];\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = v[1];\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = v[2];\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle around a given axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotate(dest, dest, rad, axis);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotation(out, rad, axis) {\n\t  var x = axis[0],\n\t      y = axis[1],\n\t      z = axis[2];\n\t  var len = Math.sqrt(x * x + y * y + z * z);\n\t  var s = void 0,\n\t      c = void 0,\n\t      t = void 0;\n\t\n\t  if (Math.abs(len) < glMatrix.EPSILON) {\n\t    return null;\n\t  }\n\t\n\t  len = 1 / len;\n\t  x *= len;\n\t  y *= len;\n\t  z *= len;\n\t\n\t  s = Math.sin(rad);\n\t  c = Math.cos(rad);\n\t  t = 1 - c;\n\t\n\t  // Perform rotation-specific matrix multiplication\n\t  out[0] = x * x * t + c;\n\t  out[1] = y * x * t + z * s;\n\t  out[2] = z * x * t - y * s;\n\t  out[3] = 0;\n\t  out[4] = x * y * t - z * s;\n\t  out[5] = y * y * t + c;\n\t  out[6] = z * y * t + x * s;\n\t  out[7] = 0;\n\t  out[8] = x * z * t + y * s;\n\t  out[9] = y * z * t - x * s;\n\t  out[10] = z * z * t + c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the X axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateX(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromXRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = 1;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = c;\n\t  out[6] = s;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = -s;\n\t  out[10] = c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Y axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateY(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromYRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = c;\n\t  out[1] = 0;\n\t  out[2] = -s;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = 1;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = s;\n\t  out[9] = 0;\n\t  out[10] = c;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Z axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateZ(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tfunction fromZRotation(out, rad) {\n\t  var s = Math.sin(rad);\n\t  var c = Math.cos(rad);\n\t\n\t  // Perform axis-specific matrix multiplication\n\t  out[0] = c;\n\t  out[1] = s;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = -s;\n\t  out[5] = c;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 1;\n\t  out[11] = 0;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation and vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslation(out, q, v) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - (yy + zz);\n\t  out[1] = xy + wz;\n\t  out[2] = xz - wy;\n\t  out[3] = 0;\n\t  out[4] = xy - wz;\n\t  out[5] = 1 - (xx + zz);\n\t  out[6] = yz + wx;\n\t  out[7] = 0;\n\t  out[8] = xz + wy;\n\t  out[9] = yz - wx;\n\t  out[10] = 1 - (xx + yy);\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the translation vector component of a transformation\n\t *  matrix. If a matrix is built with fromRotationTranslation,\n\t *  the returned vector will be the same as the translation vector\n\t *  originally supplied.\n\t * @param  {vec3} out Vector to receive translation component\n\t * @param  {mat4} mat Matrix to be decomposed (input)\n\t * @return {vec3} out\n\t */\n\tfunction getTranslation(out, mat) {\n\t  out[0] = mat[12];\n\t  out[1] = mat[13];\n\t  out[2] = mat[14];\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns the scaling factor component of a transformation\n\t *  matrix. If a matrix is built with fromRotationTranslationScale\n\t *  with a normalized Quaternion paramter, the returned vector will be\n\t *  the same as the scaling vector\n\t *  originally supplied.\n\t * @param  {vec3} out Vector to receive scaling factor component\n\t * @param  {mat4} mat Matrix to be decomposed (input)\n\t * @return {vec3} out\n\t */\n\tfunction getScaling(out, mat) {\n\t  var m11 = mat[0];\n\t  var m12 = mat[1];\n\t  var m13 = mat[2];\n\t  var m21 = mat[4];\n\t  var m22 = mat[5];\n\t  var m23 = mat[6];\n\t  var m31 = mat[8];\n\t  var m32 = mat[9];\n\t  var m33 = mat[10];\n\t\n\t  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n\t  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n\t  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a quaternion representing the rotational component\n\t *  of a transformation matrix. If a matrix is built with\n\t *  fromRotationTranslation, the returned quaternion will be the\n\t *  same as the quaternion originally supplied.\n\t * @param {quat} out Quaternion to receive the rotation component\n\t * @param {mat4} mat Matrix to be decomposed (input)\n\t * @return {quat} out\n\t */\n\tfunction getRotation(out, mat) {\n\t  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t  var trace = mat[0] + mat[5] + mat[10];\n\t  var S = 0;\n\t\n\t  if (trace > 0) {\n\t    S = Math.sqrt(trace + 1.0) * 2;\n\t    out[3] = 0.25 * S;\n\t    out[0] = (mat[6] - mat[9]) / S;\n\t    out[1] = (mat[8] - mat[2]) / S;\n\t    out[2] = (mat[1] - mat[4]) / S;\n\t  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n\t    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n\t    out[3] = (mat[6] - mat[9]) / S;\n\t    out[0] = 0.25 * S;\n\t    out[1] = (mat[1] + mat[4]) / S;\n\t    out[2] = (mat[8] + mat[2]) / S;\n\t  } else if (mat[5] > mat[10]) {\n\t    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n\t    out[3] = (mat[8] - mat[2]) / S;\n\t    out[0] = (mat[1] + mat[4]) / S;\n\t    out[1] = 0.25 * S;\n\t    out[2] = (mat[6] + mat[9]) / S;\n\t  } else {\n\t    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n\t    out[3] = (mat[1] - mat[4]) / S;\n\t    out[0] = (mat[8] + mat[2]) / S;\n\t    out[1] = (mat[6] + mat[9]) / S;\n\t    out[2] = 0.25 * S;\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslationScale(out, q, v, s) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t  var sx = s[0];\n\t  var sy = s[1];\n\t  var sz = s[2];\n\t\n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0];\n\t  out[13] = v[1];\n\t  out[14] = v[2];\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     mat4.translate(dest, origin);\n\t *     let quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *     mat4.translate(dest, negativeOrigin);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @param {vec3} o The origin vector around which to scale and rotate\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n\t  // Quaternion math\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var xy = x * y2;\n\t  var xz = x * z2;\n\t  var yy = y * y2;\n\t  var yz = y * z2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  var sx = s[0];\n\t  var sy = s[1];\n\t  var sz = s[2];\n\t\n\t  var ox = o[0];\n\t  var oy = o[1];\n\t  var oz = o[2];\n\t\n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n\t  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n\t  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates a 4x4 matrix from the given quaternion\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat} q Quaternion to create matrix from\n\t *\n\t * @returns {mat4} out\n\t */\n\tfunction fromQuat(out, q) {\n\t  var x = q[0],\n\t      y = q[1],\n\t      z = q[2],\n\t      w = q[3];\n\t  var x2 = x + x;\n\t  var y2 = y + y;\n\t  var z2 = z + z;\n\t\n\t  var xx = x * x2;\n\t  var yx = y * x2;\n\t  var yy = y * y2;\n\t  var zx = z * x2;\n\t  var zy = z * y2;\n\t  var zz = z * z2;\n\t  var wx = w * x2;\n\t  var wy = w * y2;\n\t  var wz = w * z2;\n\t\n\t  out[0] = 1 - yy - zz;\n\t  out[1] = yx + wz;\n\t  out[2] = zx - wy;\n\t  out[3] = 0;\n\t\n\t  out[4] = yx - wz;\n\t  out[5] = 1 - xx - zz;\n\t  out[6] = zy + wx;\n\t  out[7] = 0;\n\t\n\t  out[8] = zx + wy;\n\t  out[9] = zy - wx;\n\t  out[10] = 1 - xx - yy;\n\t  out[11] = 0;\n\t\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 0;\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a frustum matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Number} left Left bound of the frustum\n\t * @param {Number} right Right bound of the frustum\n\t * @param {Number} bottom Bottom bound of the frustum\n\t * @param {Number} top Top bound of the frustum\n\t * @param {Number} near Near bound of the frustum\n\t * @param {Number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction frustum(out, left, right, bottom, top, near, far) {\n\t  var rl = 1 / (right - left);\n\t  var tb = 1 / (top - bottom);\n\t  var nf = 1 / (near - far);\n\t  out[0] = near * 2 * rl;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = near * 2 * tb;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = (right + left) * rl;\n\t  out[9] = (top + bottom) * tb;\n\t  out[10] = (far + near) * nf;\n\t  out[11] = -1;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = far * near * 2 * nf;\n\t  out[15] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fovy Vertical field of view in radians\n\t * @param {number} aspect Aspect ratio. typically viewport width/height\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction perspective(out, fovy, aspect, near, far) {\n\t  var f = 1.0 / Math.tan(fovy / 2);\n\t  var nf = 1 / (near - far);\n\t  out[0] = f / aspect;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = f;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = (far + near) * nf;\n\t  out[11] = -1;\n\t  out[12] = 0;\n\t  out[13] = 0;\n\t  out[14] = 2 * far * near * nf;\n\t  out[15] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given field of view.\n\t * This is primarily useful for generating projection matrices to be used\n\t * with the still experiemental WebVR API.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction perspectiveFromFieldOfView(out, fov, near, far) {\n\t  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n\t  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n\t  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n\t  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n\t  var xScale = 2.0 / (leftTan + rightTan);\n\t  var yScale = 2.0 / (upTan + downTan);\n\t\n\t  out[0] = xScale;\n\t  out[1] = 0.0;\n\t  out[2] = 0.0;\n\t  out[3] = 0.0;\n\t  out[4] = 0.0;\n\t  out[5] = yScale;\n\t  out[6] = 0.0;\n\t  out[7] = 0.0;\n\t  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n\t  out[9] = (upTan - downTan) * yScale * 0.5;\n\t  out[10] = far / (near - far);\n\t  out[11] = -1.0;\n\t  out[12] = 0.0;\n\t  out[13] = 0.0;\n\t  out[14] = far * near / (near - far);\n\t  out[15] = 0.0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a orthogonal projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} left Left bound of the frustum\n\t * @param {number} right Right bound of the frustum\n\t * @param {number} bottom Bottom bound of the frustum\n\t * @param {number} top Top bound of the frustum\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tfunction ortho(out, left, right, bottom, top, near, far) {\n\t  var lr = 1 / (left - right);\n\t  var bt = 1 / (bottom - top);\n\t  var nf = 1 / (near - far);\n\t  out[0] = -2 * lr;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 0;\n\t  out[4] = 0;\n\t  out[5] = -2 * bt;\n\t  out[6] = 0;\n\t  out[7] = 0;\n\t  out[8] = 0;\n\t  out[9] = 0;\n\t  out[10] = 2 * nf;\n\t  out[11] = 0;\n\t  out[12] = (left + right) * lr;\n\t  out[13] = (top + bottom) * bt;\n\t  out[14] = (far + near) * nf;\n\t  out[15] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a look-at matrix with the given eye position, focal point, and up axis\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tfunction lookAt(out, eye, center, up) {\n\t  var x0 = void 0,\n\t      x1 = void 0,\n\t      x2 = void 0,\n\t      y0 = void 0,\n\t      y1 = void 0,\n\t      y2 = void 0,\n\t      z0 = void 0,\n\t      z1 = void 0,\n\t      z2 = void 0,\n\t      len = void 0;\n\t  var eyex = eye[0];\n\t  var eyey = eye[1];\n\t  var eyez = eye[2];\n\t  var upx = up[0];\n\t  var upy = up[1];\n\t  var upz = up[2];\n\t  var centerx = center[0];\n\t  var centery = center[1];\n\t  var centerz = center[2];\n\t\n\t  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n\t    return mat4.identity(out);\n\t  }\n\t\n\t  z0 = eyex - centerx;\n\t  z1 = eyey - centery;\n\t  z2 = eyez - centerz;\n\t\n\t  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\t  z0 *= len;\n\t  z1 *= len;\n\t  z2 *= len;\n\t\n\t  x0 = upy * z2 - upz * z1;\n\t  x1 = upz * z0 - upx * z2;\n\t  x2 = upx * z1 - upy * z0;\n\t  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\t  if (!len) {\n\t    x0 = 0;\n\t    x1 = 0;\n\t    x2 = 0;\n\t  } else {\n\t    len = 1 / len;\n\t    x0 *= len;\n\t    x1 *= len;\n\t    x2 *= len;\n\t  }\n\t\n\t  y0 = z1 * x2 - z2 * x1;\n\t  y1 = z2 * x0 - z0 * x2;\n\t  y2 = z0 * x1 - z1 * x0;\n\t\n\t  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\t  if (!len) {\n\t    y0 = 0;\n\t    y1 = 0;\n\t    y2 = 0;\n\t  } else {\n\t    len = 1 / len;\n\t    y0 *= len;\n\t    y1 *= len;\n\t    y2 *= len;\n\t  }\n\t\n\t  out[0] = x0;\n\t  out[1] = y0;\n\t  out[2] = z0;\n\t  out[3] = 0;\n\t  out[4] = x1;\n\t  out[5] = y1;\n\t  out[6] = z1;\n\t  out[7] = 0;\n\t  out[8] = x2;\n\t  out[9] = y2;\n\t  out[10] = z2;\n\t  out[11] = 0;\n\t  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n\t  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n\t  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n\t  out[15] = 1;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Generates a matrix that makes something look at something else.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tfunction targetTo(out, eye, target, up) {\n\t  var eyex = eye[0],\n\t      eyey = eye[1],\n\t      eyez = eye[2],\n\t      upx = up[0],\n\t      upy = up[1],\n\t      upz = up[2];\n\t\n\t  var z0 = eyex - target[0],\n\t      z1 = eyey - target[1],\n\t      z2 = eyez - target[2];\n\t\n\t  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\t  if (len > 0) {\n\t    len = 1 / Math.sqrt(len);\n\t    z0 *= len;\n\t    z1 *= len;\n\t    z2 *= len;\n\t  }\n\t\n\t  var x0 = upy * z2 - upz * z1,\n\t      x1 = upz * z0 - upx * z2,\n\t      x2 = upx * z1 - upy * z0;\n\t\n\t  out[0] = x0;\n\t  out[1] = x1;\n\t  out[2] = x2;\n\t  out[3] = 0;\n\t  out[4] = z1 * x2 - z2 * x1;\n\t  out[5] = z2 * x0 - z0 * x2;\n\t  out[6] = z0 * x1 - z1 * x0;\n\t  out[7] = 0;\n\t  out[8] = z0;\n\t  out[9] = z1;\n\t  out[10] = z2;\n\t  out[11] = 0;\n\t  out[12] = eyex;\n\t  out[13] = eyey;\n\t  out[14] = eyez;\n\t  out[15] = 1;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat4\n\t *\n\t * @param {mat4} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tfunction str(a) {\n\t  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n\t}\n\t\n\t/**\n\t * Returns Frobenius norm of a mat4\n\t *\n\t * @param {mat4} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tfunction frob(a) {\n\t  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n\t}\n\t\n\t/**\n\t * Adds two mat4's\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  out[2] = a[2] + b[2];\n\t  out[3] = a[3] + b[3];\n\t  out[4] = a[4] + b[4];\n\t  out[5] = a[5] + b[5];\n\t  out[6] = a[6] + b[6];\n\t  out[7] = a[7] + b[7];\n\t  out[8] = a[8] + b[8];\n\t  out[9] = a[9] + b[9];\n\t  out[10] = a[10] + b[10];\n\t  out[11] = a[11] + b[11];\n\t  out[12] = a[12] + b[12];\n\t  out[13] = a[13] + b[13];\n\t  out[14] = a[14] + b[14];\n\t  out[15] = a[15] + b[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts matrix b from matrix a\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  out[2] = a[2] - b[2];\n\t  out[3] = a[3] - b[3];\n\t  out[4] = a[4] - b[4];\n\t  out[5] = a[5] - b[5];\n\t  out[6] = a[6] - b[6];\n\t  out[7] = a[7] - b[7];\n\t  out[8] = a[8] - b[8];\n\t  out[9] = a[9] - b[9];\n\t  out[10] = a[10] - b[10];\n\t  out[11] = a[11] - b[11];\n\t  out[12] = a[12] - b[12];\n\t  out[13] = a[13] - b[13];\n\t  out[14] = a[14] - b[14];\n\t  out[15] = a[15] - b[15];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiply each element of the matrix by a scalar.\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {Number} b amount to scale the matrix's elements by\n\t * @returns {mat4} out\n\t */\n\tfunction multiplyScalar(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  out[2] = a[2] * b;\n\t  out[3] = a[3] * b;\n\t  out[4] = a[4] * b;\n\t  out[5] = a[5] * b;\n\t  out[6] = a[6] * b;\n\t  out[7] = a[7] * b;\n\t  out[8] = a[8] * b;\n\t  out[9] = a[9] * b;\n\t  out[10] = a[10] * b;\n\t  out[11] = a[11] * b;\n\t  out[12] = a[12] * b;\n\t  out[13] = a[13] * b;\n\t  out[14] = a[14] * b;\n\t  out[15] = a[15] * b;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n\t *\n\t * @param {mat4} out the receiving vector\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @param {Number} scale the amount to scale b's elements by before adding\n\t * @returns {mat4} out\n\t */\n\tfunction multiplyScalarAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  out[2] = a[2] + b[2] * scale;\n\t  out[3] = a[3] + b[3] * scale;\n\t  out[4] = a[4] + b[4] * scale;\n\t  out[5] = a[5] + b[5] * scale;\n\t  out[6] = a[6] + b[6] * scale;\n\t  out[7] = a[7] + b[7] * scale;\n\t  out[8] = a[8] + b[8] * scale;\n\t  out[9] = a[9] + b[9] * scale;\n\t  out[10] = a[10] + b[10] * scale;\n\t  out[11] = a[11] + b[11] * scale;\n\t  out[12] = a[12] + b[12] * scale;\n\t  out[13] = a[13] + b[13] * scale;\n\t  out[14] = a[14] + b[14] * scale;\n\t  out[15] = a[15] + b[15] * scale;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {mat4} a The first matrix.\n\t * @param {mat4} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n\t}\n\t\n\t/**\n\t * Returns whether or not the matrices have approximately the same elements in the same position.\n\t *\n\t * @param {mat4} a The first matrix.\n\t * @param {mat4} b The second matrix.\n\t * @returns {Boolean} True if the matrices are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var a4 = a[4],\n\t      a5 = a[5],\n\t      a6 = a[6],\n\t      a7 = a[7];\n\t  var a8 = a[8],\n\t      a9 = a[9],\n\t      a10 = a[10],\n\t      a11 = a[11];\n\t  var a12 = a[12],\n\t      a13 = a[13],\n\t      a14 = a[14],\n\t      a15 = a[15];\n\t\n\t  var b0 = b[0],\n\t      b1 = b[1],\n\t      b2 = b[2],\n\t      b3 = b[3];\n\t  var b4 = b[4],\n\t      b5 = b[5],\n\t      b6 = b[6],\n\t      b7 = b[7];\n\t  var b8 = b[8],\n\t      b9 = b[9],\n\t      b10 = b[10],\n\t      b11 = b[11];\n\t  var b12 = b[12],\n\t      b13 = b[13],\n\t      b14 = b[14],\n\t      b15 = b[15];\n\t\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n\t}\n\t\n\t/**\n\t * Alias for {@link mat4.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link mat4.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\n\texports.create = create;\n\texports.identity = identity;\n\texports.setAxisAngle = setAxisAngle;\n\texports.getAxisAngle = getAxisAngle;\n\texports.multiply = multiply;\n\texports.rotateX = rotateX;\n\texports.rotateY = rotateY;\n\texports.rotateZ = rotateZ;\n\texports.calculateW = calculateW;\n\texports.slerp = slerp;\n\texports.invert = invert;\n\texports.conjugate = conjugate;\n\texports.fromMat3 = fromMat3;\n\texports.fromEuler = fromEuler;\n\texports.str = str;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tvar _mat = __webpack_require__(1);\n\t\n\tvar mat3 = _interopRequireWildcard(_mat);\n\t\n\tvar _vec = __webpack_require__(2);\n\t\n\tvar vec3 = _interopRequireWildcard(_vec);\n\t\n\tvar _vec2 = __webpack_require__(3);\n\t\n\tvar vec4 = _interopRequireWildcard(_vec2);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Quaternion\n\t * @module quat\n\t */\n\t\n\t/**\n\t * Creates a new identity quat\n\t *\n\t * @returns {quat} a new quaternion\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(4);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set a quat to the identity quaternion\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @returns {quat} out\n\t */\n\tfunction identity(out) {\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  out[2] = 0;\n\t  out[3] = 1;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Sets a quat from the given angle and rotation axis,\n\t * then returns it.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {vec3} axis the axis around which to rotate\n\t * @param {Number} rad the angle in radians\n\t * @returns {quat} out\n\t **/\n\tfunction setAxisAngle(out, axis, rad) {\n\t  rad = rad * 0.5;\n\t  var s = Math.sin(rad);\n\t  out[0] = s * axis[0];\n\t  out[1] = s * axis[1];\n\t  out[2] = s * axis[2];\n\t  out[3] = Math.cos(rad);\n\t  return out;\n\t}\n\t\n\t/**\n\t * Gets the rotation axis and angle for a given\n\t *  quaternion. If a quaternion is created with\n\t *  setAxisAngle, this method will return the same\n\t *  values as providied in the original parameter list\n\t *  OR functionally equivalent values.\n\t * Example: The quaternion formed by axis [0, 0, 1] and\n\t *  angle -90 is the same as the quaternion formed by\n\t *  [0, 0, 1] and 270. This method favors the latter.\n\t * @param  {vec3} out_axis  Vector receiving the axis of rotation\n\t * @param  {quat} q     Quaternion to be decomposed\n\t * @return {Number}     Angle, in radians, of the rotation\n\t */\n\tfunction getAxisAngle(out_axis, q) {\n\t  var rad = Math.acos(q[3]) * 2.0;\n\t  var s = Math.sin(rad / 2.0);\n\t  if (s != 0.0) {\n\t    out_axis[0] = q[0] / s;\n\t    out_axis[1] = q[1] / s;\n\t    out_axis[2] = q[2] / s;\n\t  } else {\n\t    // If s is zero, return any axis (no rotation - axis does not matter)\n\t    out_axis[0] = 1;\n\t    out_axis[1] = 0;\n\t    out_axis[2] = 0;\n\t  }\n\t  return rad;\n\t}\n\t\n\t/**\n\t * Multiplies two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2],\n\t      bw = b[3];\n\t\n\t  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n\t  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n\t  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n\t  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the X axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateX(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw + aw * bx;\n\t  out[1] = ay * bw + az * bx;\n\t  out[2] = az * bw - ay * bx;\n\t  out[3] = aw * bw - ax * bx;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Y axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateY(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var by = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw - az * by;\n\t  out[1] = ay * bw + aw * by;\n\t  out[2] = az * bw + ax * by;\n\t  out[3] = aw * bw - ay * by;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Z axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tfunction rotateZ(out, a, rad) {\n\t  rad *= 0.5;\n\t\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bz = Math.sin(rad),\n\t      bw = Math.cos(rad);\n\t\n\t  out[0] = ax * bw + ay * bz;\n\t  out[1] = ay * bw - ax * bz;\n\t  out[2] = az * bw + aw * bz;\n\t  out[3] = aw * bw - az * bz;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the W component of a quat from the X, Y, and Z components.\n\t * Assumes that quaternion is 1 unit in length.\n\t * Any existing W component will be ignored.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate W component of\n\t * @returns {quat} out\n\t */\n\tfunction calculateW(out, a) {\n\t  var x = a[0],\n\t      y = a[1],\n\t      z = a[2];\n\t\n\t  out[0] = x;\n\t  out[1] = y;\n\t  out[2] = z;\n\t  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n\t  return out;\n\t}\n\t\n\t/**\n\t * Performs a spherical linear interpolation between two quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t */\n\tfunction slerp(out, a, b, t) {\n\t  // benchmarks:\n\t  //    http://jsperf.com/quaternion-slerp-implementations\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      az = a[2],\n\t      aw = a[3];\n\t  var bx = b[0],\n\t      by = b[1],\n\t      bz = b[2],\n\t      bw = b[3];\n\t\n\t  var omega = void 0,\n\t      cosom = void 0,\n\t      sinom = void 0,\n\t      scale0 = void 0,\n\t      scale1 = void 0;\n\t\n\t  // calc cosine\n\t  cosom = ax * bx + ay * by + az * bz + aw * bw;\n\t  // adjust signs (if necessary)\n\t  if (cosom < 0.0) {\n\t    cosom = -cosom;\n\t    bx = -bx;\n\t    by = -by;\n\t    bz = -bz;\n\t    bw = -bw;\n\t  }\n\t  // calculate coefficients\n\t  if (1.0 - cosom > 0.000001) {\n\t    // standard case (slerp)\n\t    omega = Math.acos(cosom);\n\t    sinom = Math.sin(omega);\n\t    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n\t    scale1 = Math.sin(t * omega) / sinom;\n\t  } else {\n\t    // \"from\" and \"to\" quaternions are very close\n\t    //  ... so we can do a linear interpolation\n\t    scale0 = 1.0 - t;\n\t    scale1 = t;\n\t  }\n\t  // calculate final values\n\t  out[0] = scale0 * ax + scale1 * bx;\n\t  out[1] = scale0 * ay + scale1 * by;\n\t  out[2] = scale0 * az + scale1 * bz;\n\t  out[3] = scale0 * aw + scale1 * bw;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the inverse of a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate inverse of\n\t * @returns {quat} out\n\t */\n\tfunction invert(out, a) {\n\t  var a0 = a[0],\n\t      a1 = a[1],\n\t      a2 = a[2],\n\t      a3 = a[3];\n\t  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n\t  var invDot = dot ? 1.0 / dot : 0;\n\t\n\t  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\t\n\t  out[0] = -a0 * invDot;\n\t  out[1] = -a1 * invDot;\n\t  out[2] = -a2 * invDot;\n\t  out[3] = a3 * invDot;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Calculates the conjugate of a quat\n\t * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate conjugate of\n\t * @returns {quat} out\n\t */\n\tfunction conjugate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  out[2] = -a[2];\n\t  out[3] = a[3];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a quaternion from the given 3x3 rotation matrix.\n\t *\n\t * NOTE: The resultant quaternion is not normalized, so you should be sure\n\t * to renormalize the quaternion yourself where necessary.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {mat3} m rotation matrix\n\t * @returns {quat} out\n\t * @function\n\t */\n\tfunction fromMat3(out, m) {\n\t  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t  // article \"Quaternion Calculus and Fast Animation\".\n\t  var fTrace = m[0] + m[4] + m[8];\n\t  var fRoot = void 0;\n\t\n\t  if (fTrace > 0.0) {\n\t    // |w| > 1/2, may as well choose w > 1/2\n\t    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\t    out[3] = 0.5 * fRoot;\n\t    fRoot = 0.5 / fRoot; // 1/(4w)\n\t    out[0] = (m[5] - m[7]) * fRoot;\n\t    out[1] = (m[6] - m[2]) * fRoot;\n\t    out[2] = (m[1] - m[3]) * fRoot;\n\t  } else {\n\t    // |w| <= 1/2\n\t    var i = 0;\n\t    if (m[4] > m[0]) i = 1;\n\t    if (m[8] > m[i * 3 + i]) i = 2;\n\t    var j = (i + 1) % 3;\n\t    var k = (i + 2) % 3;\n\t\n\t    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n\t    out[i] = 0.5 * fRoot;\n\t    fRoot = 0.5 / fRoot;\n\t    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n\t    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n\t    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a quaternion from the given euler angle x, y, z.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {x} Angle to rotate around X axis in degrees.\n\t * @param {y} Angle to rotate around Y axis in degrees.\n\t * @param {z} Angle to rotate around Z axis in degrees.\n\t * @returns {quat} out\n\t * @function\n\t */\n\tfunction fromEuler(out, x, y, z) {\n\t  var halfToRad = 0.5 * Math.PI / 180.0;\n\t  x *= halfToRad;\n\t  y *= halfToRad;\n\t  z *= halfToRad;\n\t\n\t  var sx = Math.sin(x);\n\t  var cx = Math.cos(x);\n\t  var sy = Math.sin(y);\n\t  var cy = Math.cos(y);\n\t  var sz = Math.sin(z);\n\t  var cz = Math.cos(z);\n\t\n\t  out[0] = sx * cy * cz - cx * sy * sz;\n\t  out[1] = cx * sy * cz + sx * cy * sz;\n\t  out[2] = cx * cy * sz - sx * sy * cz;\n\t  out[3] = cx * cy * cz + sx * sy * sz;\n\t\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a quatenion\n\t *\n\t * @param {quat} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t}\n\t\n\t/**\n\t * Creates a new quat initialized with values from an existing quaternion\n\t *\n\t * @param {quat} a quaternion to clone\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tvar clone = exports.clone = vec4.clone;\n\t\n\t/**\n\t * Creates a new quat initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tvar fromValues = exports.fromValues = vec4.fromValues;\n\t\n\t/**\n\t * Copy the values from one quat to another\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the source quaternion\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar copy = exports.copy = vec4.copy;\n\t\n\t/**\n\t * Set the components of a quat to the given values\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar set = exports.set = vec4.set;\n\t\n\t/**\n\t * Adds two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar add = exports.add = vec4.add;\n\t\n\t/**\n\t * Alias for {@link quat.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Scales a quat by a scalar number\n\t *\n\t * @param {quat} out the receiving vector\n\t * @param {quat} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar scale = exports.scale = vec4.scale;\n\t\n\t/**\n\t * Calculates the dot product of two quat's\n\t *\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {Number} dot product of a and b\n\t * @function\n\t */\n\tvar dot = exports.dot = vec4.dot;\n\t\n\t/**\n\t * Performs a linear interpolation between two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar lerp = exports.lerp = vec4.lerp;\n\t\n\t/**\n\t * Calculates the length of a quat\n\t *\n\t * @param {quat} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvar length = exports.length = vec4.length;\n\t\n\t/**\n\t * Alias for {@link quat.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Calculates the squared length of a quat\n\t *\n\t * @param {quat} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t * @function\n\t */\n\tvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\t\n\t/**\n\t * Alias for {@link quat.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Normalize a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quaternion to normalize\n\t * @returns {quat} out\n\t * @function\n\t */\n\tvar normalize = exports.normalize = vec4.normalize;\n\t\n\t/**\n\t * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n\t *\n\t * @param {quat} a The first quaternion.\n\t * @param {quat} b The second quaternion.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\t\n\t/**\n\t * Returns whether or not the quaternions have approximately the same elements in the same position.\n\t *\n\t * @param {quat} a The first vector.\n\t * @param {quat} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tvar equals = exports.equals = vec4.equals;\n\t\n\t/**\n\t * Sets a quaternion to represent the shortest rotation from one\n\t * vector to another.\n\t *\n\t * Both vectors are assumed to be unit length.\n\t *\n\t * @param {quat} out the receiving quaternion.\n\t * @param {vec3} a the initial vector\n\t * @param {vec3} b the destination vector\n\t * @returns {quat} out\n\t */\n\tvar rotationTo = exports.rotationTo = function () {\n\t  var tmpvec3 = vec3.create();\n\t  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n\t  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\t\n\t  return function (out, a, b) {\n\t    var dot = vec3.dot(a, b);\n\t    if (dot < -0.999999) {\n\t      vec3.cross(tmpvec3, xUnitVec3, a);\n\t      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n\t      vec3.normalize(tmpvec3, tmpvec3);\n\t      setAxisAngle(out, tmpvec3, Math.PI);\n\t      return out;\n\t    } else if (dot > 0.999999) {\n\t      out[0] = 0;\n\t      out[1] = 0;\n\t      out[2] = 0;\n\t      out[3] = 1;\n\t      return out;\n\t    } else {\n\t      vec3.cross(tmpvec3, a, b);\n\t      out[0] = tmpvec3[0];\n\t      out[1] = tmpvec3[1];\n\t      out[2] = tmpvec3[2];\n\t      out[3] = 1 + dot;\n\t      return normalize(out, out);\n\t    }\n\t  };\n\t}();\n\t\n\t/**\n\t * Performs a spherical linear interpolation with two control points\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {quat} c the third operand\n\t * @param {quat} d the fourth operand\n\t * @param {Number} t interpolation amount\n\t * @returns {quat} out\n\t */\n\tvar sqlerp = exports.sqlerp = function () {\n\t  var temp1 = create();\n\t  var temp2 = create();\n\t\n\t  return function (out, a, b, c, d, t) {\n\t    slerp(temp1, a, d, t);\n\t    slerp(temp2, b, c, t);\n\t    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\t\n\t    return out;\n\t  };\n\t}();\n\t\n\t/**\n\t * Sets the specified quaternion with values corresponding to the given\n\t * axes. Each axis is a vec3 and is expected to be unit length and\n\t * perpendicular to all other specified axes.\n\t *\n\t * @param {vec3} view  the vector representing the viewing direction\n\t * @param {vec3} right the vector representing the local \"right\" direction\n\t * @param {vec3} up    the vector representing the local \"up\" direction\n\t * @returns {quat} out\n\t */\n\tvar setAxes = exports.setAxes = function () {\n\t  var matr = mat3.create();\n\t\n\t  return function (out, view, right, up) {\n\t    matr[0] = right[0];\n\t    matr[3] = right[1];\n\t    matr[6] = right[2];\n\t\n\t    matr[1] = up[0];\n\t    matr[4] = up[1];\n\t    matr[7] = up[2];\n\t\n\t    matr[2] = -view[0];\n\t    matr[5] = -view[1];\n\t    matr[8] = -view[2];\n\t\n\t    return normalize(out, fromMat3(out, matr));\n\t  };\n\t}();\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\n\texports.create = create;\n\texports.clone = clone;\n\texports.fromValues = fromValues;\n\texports.copy = copy;\n\texports.set = set;\n\texports.add = add;\n\texports.subtract = subtract;\n\texports.multiply = multiply;\n\texports.divide = divide;\n\texports.ceil = ceil;\n\texports.floor = floor;\n\texports.min = min;\n\texports.max = max;\n\texports.round = round;\n\texports.scale = scale;\n\texports.scaleAndAdd = scaleAndAdd;\n\texports.distance = distance;\n\texports.squaredDistance = squaredDistance;\n\texports.length = length;\n\texports.squaredLength = squaredLength;\n\texports.negate = negate;\n\texports.inverse = inverse;\n\texports.normalize = normalize;\n\texports.dot = dot;\n\texports.cross = cross;\n\texports.lerp = lerp;\n\texports.random = random;\n\texports.transformMat2 = transformMat2;\n\texports.transformMat2d = transformMat2d;\n\texports.transformMat3 = transformMat3;\n\texports.transformMat4 = transformMat4;\n\texports.str = str;\n\texports.exactEquals = exactEquals;\n\texports.equals = equals;\n\t\n\tvar _common = __webpack_require__(0);\n\t\n\tvar glMatrix = _interopRequireWildcard(_common);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * 2 Dimensional Vector\n\t * @module vec2\n\t */\n\t\n\t/**\n\t * Creates a new, empty vec2\n\t *\n\t * @returns {vec2} a new 2D vector\n\t */\n\tfunction create() {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = 0;\n\t  out[1] = 0;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec2 initialized with values from an existing vector\n\t *\n\t * @param {vec2} a vector to clone\n\t * @returns {vec2} a new 2D vector\n\t */\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tfunction clone(a) {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Creates a new vec2 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} a new 2D vector\n\t */\n\tfunction fromValues(x, y) {\n\t  var out = new glMatrix.ARRAY_TYPE(2);\n\t  out[0] = x;\n\t  out[1] = y;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Copy the values from one vec2 to another\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the source vector\n\t * @returns {vec2} out\n\t */\n\tfunction copy(out, a) {\n\t  out[0] = a[0];\n\t  out[1] = a[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Set the components of a vec2 to the given values\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} out\n\t */\n\tfunction set(out, x, y) {\n\t  out[0] = x;\n\t  out[1] = y;\n\t  return out;\n\t}\n\t\n\t/**\n\t * Adds two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction add(out, a, b) {\n\t  out[0] = a[0] + b[0];\n\t  out[1] = a[1] + b[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction subtract(out, a, b) {\n\t  out[0] = a[0] - b[0];\n\t  out[1] = a[1] - b[1];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Multiplies two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction multiply(out, a, b) {\n\t  out[0] = a[0] * b[0];\n\t  out[1] = a[1] * b[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Divides two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction divide(out, a, b) {\n\t  out[0] = a[0] / b[0];\n\t  out[1] = a[1] / b[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.ceil the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to ceil\n\t * @returns {vec2} out\n\t */\n\tfunction ceil(out, a) {\n\t  out[0] = Math.ceil(a[0]);\n\t  out[1] = Math.ceil(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.floor the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to floor\n\t * @returns {vec2} out\n\t */\n\tfunction floor(out, a) {\n\t  out[0] = Math.floor(a[0]);\n\t  out[1] = Math.floor(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the minimum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction min(out, a, b) {\n\t  out[0] = Math.min(a[0], b[0]);\n\t  out[1] = Math.min(a[1], b[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tfunction max(out, a, b) {\n\t  out[0] = Math.max(a[0], b[0]);\n\t  out[1] = Math.max(a[1], b[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Math.round the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to round\n\t * @returns {vec2} out\n\t */\n\tfunction round(out, a) {\n\t  out[0] = Math.round(a[0]);\n\t  out[1] = Math.round(a[1]);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Scales a vec2 by a scalar number\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec2} out\n\t */\n\tfunction scale(out, a, b) {\n\t  out[0] = a[0] * b;\n\t  out[1] = a[1] * b;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec2} out\n\t */\n\tfunction scaleAndAdd(out, a, b, scale) {\n\t  out[0] = a[0] + b[0] * scale;\n\t  out[1] = a[1] + b[1] * scale;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tfunction distance(a, b) {\n\t  var x = b[0] - a[0],\n\t      y = b[1] - a[1];\n\t  return Math.sqrt(x * x + y * y);\n\t};\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tfunction squaredDistance(a, b) {\n\t  var x = b[0] - a[0],\n\t      y = b[1] - a[1];\n\t  return x * x + y * y;\n\t};\n\t\n\t/**\n\t * Calculates the length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tfunction length(a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  return Math.sqrt(x * x + y * y);\n\t};\n\t\n\t/**\n\t * Calculates the squared length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tfunction squaredLength(a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  return x * x + y * y;\n\t};\n\t\n\t/**\n\t * Negates the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to negate\n\t * @returns {vec2} out\n\t */\n\tfunction negate(out, a) {\n\t  out[0] = -a[0];\n\t  out[1] = -a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to invert\n\t * @returns {vec2} out\n\t */\n\tfunction inverse(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to normalize\n\t * @returns {vec2} out\n\t */\n\tfunction normalize(out, a) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  var len = x * x + y * y;\n\t  if (len > 0) {\n\t    //TODO: evaluate use of glm_invsqrt here?\n\t    len = 1 / Math.sqrt(len);\n\t    out[0] = a[0] * len;\n\t    out[1] = a[1] * len;\n\t  }\n\t  return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tfunction dot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec2's\n\t * Note that the cross product must by definition produce a 3D vector\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec3} out\n\t */\n\tfunction cross(out, a, b) {\n\t  var z = a[0] * b[1] - a[1] * b[0];\n\t  out[0] = out[1] = 0;\n\t  out[2] = z;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec2} out\n\t */\n\tfunction lerp(out, a, b, t) {\n\t  var ax = a[0],\n\t      ay = a[1];\n\t  out[0] = ax + t * (b[0] - ax);\n\t  out[1] = ay + t * (b[1] - ay);\n\t  return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec2} out\n\t */\n\tfunction random(out, scale) {\n\t  scale = scale || 1.0;\n\t  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t  out[0] = Math.cos(r) * scale;\n\t  out[1] = Math.sin(r) * scale;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat2(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[2] * y;\n\t  out[1] = m[1] * x + m[3] * y;\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2d\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2d} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat2d(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[2] * y + m[4];\n\t  out[1] = m[1] * x + m[3] * y + m[5];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat3\n\t * 3rd vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat3} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat3(out, a, m) {\n\t  var x = a[0],\n\t      y = a[1];\n\t  out[0] = m[0] * x + m[3] * y + m[6];\n\t  out[1] = m[1] * x + m[4] * y + m[7];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat4\n\t * 3rd vector component is implicitly '0'\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tfunction transformMat4(out, a, m) {\n\t  var x = a[0];\n\t  var y = a[1];\n\t  out[0] = m[0] * x + m[4] * y + m[12];\n\t  out[1] = m[1] * x + m[5] * y + m[13];\n\t  return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec2} a vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tfunction str(a) {\n\t  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n\t *\n\t * @param {vec2} a The first vector.\n\t * @param {vec2} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction exactEquals(a, b) {\n\t  return a[0] === b[0] && a[1] === b[1];\n\t}\n\t\n\t/**\n\t * Returns whether or not the vectors have approximately the same elements in the same position.\n\t *\n\t * @param {vec2} a The first vector.\n\t * @param {vec2} b The second vector.\n\t * @returns {Boolean} True if the vectors are equal, false otherwise.\n\t */\n\tfunction equals(a, b) {\n\t  var a0 = a[0],\n\t      a1 = a[1];\n\t  var b0 = b[0],\n\t      b1 = b[1];\n\t  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n\t}\n\t\n\t/**\n\t * Alias for {@link vec2.length}\n\t * @function\n\t */\n\tvar len = exports.len = length;\n\t\n\t/**\n\t * Alias for {@link vec2.subtract}\n\t * @function\n\t */\n\tvar sub = exports.sub = subtract;\n\t\n\t/**\n\t * Alias for {@link vec2.multiply}\n\t * @function\n\t */\n\tvar mul = exports.mul = multiply;\n\t\n\t/**\n\t * Alias for {@link vec2.divide}\n\t * @function\n\t */\n\tvar div = exports.div = divide;\n\t\n\t/**\n\t * Alias for {@link vec2.distance}\n\t * @function\n\t */\n\tvar dist = exports.dist = distance;\n\t\n\t/**\n\t * Alias for {@link vec2.squaredDistance}\n\t * @function\n\t */\n\tvar sqrDist = exports.sqrDist = squaredDistance;\n\t\n\t/**\n\t * Alias for {@link vec2.squaredLength}\n\t * @function\n\t */\n\tvar sqrLen = exports.sqrLen = squaredLength;\n\t\n\t/**\n\t * Perform some operation over an array of vec2s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvar forEach = exports.forEach = function () {\n\t  var vec = create();\n\t\n\t  return function (a, stride, offset, count, fn, arg) {\n\t    var i = void 0,\n\t        l = void 0;\n\t    if (!stride) {\n\t      stride = 2;\n\t    }\n\t\n\t    if (!offset) {\n\t      offset = 0;\n\t    }\n\t\n\t    if (count) {\n\t      l = Math.min(count * stride + offset, a.length);\n\t    } else {\n\t      l = a.length;\n\t    }\n\t\n\t    for (i = offset; i < l; i += stride) {\n\t      vec[0] = a[i];vec[1] = a[i + 1];\n\t      fn(vec, vec, arg);\n\t      a[i] = vec[0];a[i + 1] = vec[1];\n\t    }\n\t\n\t    return a;\n\t  };\n\t}();\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\tmodule.exports = function parseURI (str, opts) {\n\t  opts = opts || {}\n\t\n\t  var o = {\n\t    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n\t    q: {\n\t      name: 'queryKey',\n\t      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t    },\n\t    parser: {\n\t      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t    }\n\t  }\n\t\n\t  var m = o.parser[opts.strictMode ? 'strict' : 'loose'].exec(str)\n\t  var uri = {}\n\t  var i = 14\n\t\n\t  while (i--) uri[o.key[i]] = m[i] || ''\n\t\n\t  uri[o.q.name] = {}\n\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t    if ($1) uri[o.q.name][$1] = $2\n\t  })\n\t\n\t  return uri\n\t}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Smaller version of the async library constructs.\n\t *\n\t */\n\t\n\tmodule.exports = {\n\t    eachSeries: asyncEachSeries,\n\t    queue: asyncQueue\n\t};\n\t\n\tfunction _noop() { /* empty */ }\n\t\n\t/**\n\t * Iterates an array in series.\n\t *\n\t * @param {*[]} array - Array to iterate.\n\t * @param {function} iterator - Function to call for each element.\n\t * @param {function} callback - Function to call when done, or on error.\n\t */\n\tfunction asyncEachSeries(array, iterator, callback) {\n\t    var i = 0;\n\t    var len = array.length;\n\t\n\t    (function next(err) {\n\t        if (err || i === len) {\n\t            if (callback) {\n\t                callback(err);\n\t            }\n\t\n\t            return;\n\t        }\n\t\n\t        iterator(array[i++], next);\n\t    })();\n\t}\n\t\n\t/**\n\t * Ensures a function is only called once.\n\t *\n\t * @param {function} fn - The function to wrap.\n\t * @return {function} The wrapping function.\n\t */\n\tfunction onlyOnce(fn) {\n\t    return function onceWrapper() {\n\t        if (fn === null) {\n\t            throw new Error('Callback was already called.');\n\t        }\n\t\n\t        var callFn = fn;\n\t\n\t        fn = null;\n\t        callFn.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * Async queue implementation,\n\t *\n\t * @param {function} worker - The worker function to call for each task.\n\t * @param {number} concurrency - How many workers to run in parrallel.\n\t * @return {*} The async queue object.\n\t */\n\tfunction asyncQueue(worker, concurrency) {\n\t    if (concurrency == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t        concurrency = 1;\n\t    }\n\t    else if (concurrency === 0) {\n\t        throw new Error('Concurrency must not be zero');\n\t    }\n\t\n\t    var workers = 0;\n\t    var q = {\n\t        _tasks: [],\n\t        concurrency: concurrency,\n\t        saturated: _noop,\n\t        unsaturated: _noop,\n\t        buffer: concurrency / 4,\n\t        empty: _noop,\n\t        drain: _noop,\n\t        error: _noop,\n\t        started: false,\n\t        paused: false,\n\t        push: function (data, callback) {\n\t            _insert(data, false, callback);\n\t        },\n\t        kill: function () {\n\t            q.drain = _noop;\n\t            q._tasks = [];\n\t        },\n\t        unshift: function (data, callback) {\n\t            _insert(data, true, callback);\n\t        },\n\t        process: function () {\n\t            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n\t                var task = q._tasks.shift();\n\t\n\t                if (q._tasks.length === 0) {\n\t                    q.empty();\n\t                }\n\t\n\t                workers += 1;\n\t\n\t                if (workers === q.concurrency) {\n\t                    q.saturated();\n\t                }\n\t\n\t                worker(task.data, onlyOnce(_next(task)));\n\t            }\n\t        },\n\t        length: function () {\n\t            return q._tasks.length;\n\t        },\n\t        running: function () {\n\t            return workers;\n\t        },\n\t        idle: function () {\n\t            return q._tasks.length + workers === 0;\n\t        },\n\t        pause: function () {\n\t            if (q.paused === true) {\n\t                return;\n\t            }\n\t\n\t            q.paused = true;\n\t        },\n\t        resume: function () {\n\t            if (q.paused === false) {\n\t                return;\n\t            }\n\t\n\t            q.paused = false;\n\t\n\t            // Need to call q.process once per concurrent\n\t            // worker to preserve full concurrency after pause\n\t            for (var w = 1; w <= q.concurrency; w++) {\n\t                q.process();\n\t            }\n\t        }\n\t    };\n\t\n\t    function _insert(data, insertAtFront, callback) {\n\t        if (callback != null && typeof callback !== 'function') { // eslint-disable-line no-eq-null,eqeqeq\n\t            throw new Error('task callback must be a function');\n\t        }\n\t\n\t        q.started = true;\n\t\n\t        if (data == null && q.idle()) { // eslint-disable-line no-eq-null,eqeqeq\n\t            // call drain immediately if there are no tasks\n\t            setTimeout(function () {\n\t                q.drain();\n\t            }, 1);\n\t\n\t            return;\n\t        }\n\t\n\t        var item = {\n\t            data: data,\n\t            callback: typeof callback === 'function' ? callback : _noop\n\t        };\n\t\n\t        if (insertAtFront) {\n\t            q._tasks.unshift(item);\n\t        }\n\t        else {\n\t            q._tasks.push(item);\n\t        }\n\t\n\t        setTimeout(function () {\n\t            q.process();\n\t        }, 1);\n\t    }\n\t\n\t    function _next(task) {\n\t        return function () {\n\t            workers -= 1;\n\t\n\t            task.callback.apply(task, arguments);\n\t\n\t            if (arguments[0] != null) { // eslint-disable-line no-eq-null,eqeqeq\n\t                q.error(arguments[0], task.data);\n\t            }\n\t\n\t            if (workers <= (q.concurrency - q.buffer)) {\n\t                q.unsaturated();\n\t            }\n\t\n\t            if (q.idle()) {\n\t                q.drain();\n\t            }\n\t\n\t            q.process();\n\t        };\n\t    }\n\t\n\t    return q;\n\t}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _const = __webpack_require__(12);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\texports.default = new (function () {\n\t    function GLExtensions() {\n\t        _classCallCheck(this, GLExtensions);\n\t\n\t        this.extensions = {};\n\t    }\n\t\n\t    GLExtensions.prototype.init = function init() {\n\t        var gl = POLY.gl;\n\t\n\t        for (var i = 0; i < _const.extensions.length; i++) {\n\t            this.extensions[_const.extensions[i]] = gl.getExtension(_const.extensions[i]);\n\t        }\n\t    };\n\t\n\t    GLExtensions.prototype.checkExtension = function checkExtension(id) {\n\t        return !!this.extensions[id];\n\t    };\n\t\n\t    GLExtensions.prototype.getExtension = function getExtension(id) {\n\t        return this.extensions[id];\n\t    };\n\t\n\t    return GLExtensions;\n\t}())();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = {\n\t\tuniformTypes: {\n\t\t\tfloat: 'uniform1f',\n\t\t\tvec2: 'uniform2fv',\n\t\t\tvec3: 'uniform3fv',\n\t\t\tvec4: 'uniform4fv',\n\t\t\tint: 'uniform1i',\n\t\t\ttexture: 'uniform1i',\n\t\t\tmat3: 'uniformMatrix3fv',\n\t\t\tmat4: 'uniformMatrix4fv'\n\t\t},\n\t\textensions: ['EXT_shader_texture_lod', 'EXT_sRGB', 'EXT_frag_depth', 'OES_texture_float', 'OES_texture_half_float', 'OES_texture_float_linear', 'OES_texture_half_float_linear', 'OES_standard_derivatives', 'WEBGL_depth_texture', 'EXT_texture_filter_anisotropic', 'ANGLE_instanced_arrays', 'WEBGL_draw_buffers']\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FacesMultiplicator = function () {\n\t  function FacesMultiplicator() {\n\t    _classCallCheck(this, FacesMultiplicator);\n\t\n\t    this.indexUniq = 0;\n\t    this.middlePointIndexCache = {};\n\t    this.vertices = [];\n\t    this.isNormalised = true;\n\t  }\n\t\n\t  FacesMultiplicator.prototype.multiplyTriangles = function multiplyTriangles(n, indices, vertices) {\n\t    this.indexUniq = vertices.length;\n\t    this.vertices = vertices;\n\t    var faces = indices.slice();\n\t\n\t    this.isNormalised = true;\n\t    for (var i = 0; i < this.vertices.length; i++) {\n\t      if (!this.isNormalised) break;\n\t\n\t      for (var k = 0; k < this.vertices[i].length; k++) {\n\t        if (Math.abs(this.vertices[i][k]) > 1) {\n\t          this.isNormalised = false;\n\t        }\n\t      }\n\t    }\n\t    for (var i = 0; i < n; i++) {\n\t      var faces2 = [];\n\t      for (var k = 0; k < faces.length; k++) {\n\t        var tri = faces[k];\n\t\n\t        var a = this.getMiddlePoint(tri[0], tri[1]);\n\t        var b = this.getMiddlePoint(tri[1], tri[2]);\n\t        var c = this.getMiddlePoint(tri[2], tri[0]);\n\t\n\t        faces2.push([tri[0], a, c]);\n\t        faces2.push([tri[1], b, a]);\n\t        faces2.push([tri[2], b, c]);\n\t        faces2.push([a, b, c]);\n\t      }\n\t\n\t      faces = faces2.slice();\n\t    }\n\t\n\t    return faces;\n\t  };\n\t\n\t  FacesMultiplicator.prototype.addVertex = function addVertex(position) {\n\t    var length = this.isNormalised ? Math.sqrt(position[0] * position[0] + position[1] * position[1] + position[2] * position[2]) : 1;\n\t    this.vertices.push([position[0] / length, position[1] / length, position[2] / length]);\n\t\n\t    return this.indexUniq++;\n\t  };\n\t\n\t  FacesMultiplicator.prototype.getMiddlePoint = function getMiddlePoint(p1, p2) {\n\t    var firstPointIsSmaller = p1 < p2;\n\t    var smallerIndex = firstPointIsSmaller ? p1 : p2;\n\t    var greaterIndex = firstPointIsSmaller ? p2 : p1;\n\t    var key = (smallerIndex << 32) + greaterIndex;\n\t\n\t    var point1 = this.vertices[p1];\n\t    var point2 = this.vertices[p2];\n\t    var middle = [(point1[0] + point2[0]) / 2.0, (point1[1] + point2[1]) / 2.0, (point1[2] + point2[2]) / 2.0];\n\t\n\t    var i = this.addVertex(middle);\n\t    this.middlePointIndexCache[key] = i;\n\t\n\t    return i;\n\t  };\n\t\n\t  return FacesMultiplicator;\n\t}();\n\t\n\texports.default = new FacesMultiplicator();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FacesSeparator = function () {\n\t  function FacesSeparator() {\n\t    _classCallCheck(this, FacesSeparator);\n\t  }\n\t\n\t  FacesSeparator.prototype.separate = function separate(faces, vertices) {\n\t    var triangles = [];\n\t    var ind = [];\n\t\n\t    for (var i = 0; i < faces.length; i++) {\n\t      triangles.push(faces[i][0], faces[i][1], faces[i][2]);\n\t      ind.push(faces[i][0], faces[i][1], faces[i][2]);\n\t    }\n\t\n\t    var oldVerts = vertices.slice();\n\t    var newVertices = [];\n\t    for (var _i = 0; _i < triangles.length; _i++) {\n\t      newVertices[_i] = oldVerts[triangles[_i]].slice();\n\t      triangles[_i] = _i;\n\t    }\n\t\n\t    return { faces: triangles, vertices: newVertices };\n\t  };\n\t\n\t  return FacesSeparator;\n\t}();\n\t\n\texports.default = new FacesSeparator();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Poly = __webpack_require__(2);\n\t\n\tvar POLY = _interopRequireWildcard(_Poly);\n\t\n\tvar _MainScene = __webpack_require__(16);\n\t\n\tvar _MainScene2 = _interopRequireDefault(_MainScene);\n\t\n\tvar _ParticlesScene = __webpack_require__(17);\n\t\n\tvar _ParticlesScene2 = _interopRequireDefault(_ParticlesScene);\n\t\n\tvar _utils = __webpack_require__(20);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Manifests = __webpack_require__(32);\n\t\n\twindow.ASSET_URL = '../../assets/';\n\t\n\tvar App = function () {\n\t\tfunction App() {\n\t\t\t_classCallCheck(this, App);\n\t\n\t\t\tvar canvas = document.getElementById(\"canvas\");\n\t\n\t\t\tPOLY.init(canvas);\n\t\t\tthis.gl = POLY.gl;\n\t\n\t\t\tthis.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\t\n\t\t\tthis.loader = new _utils.Loader();\n\t\t\tthis.loader.addManifest(Manifests.default, window.ASSET_URL);\n\t\t\tthis.loader.onComplete.add(this._loadComplete, this);\n\t\t\tthis.loader.load();\n\t\t}\n\t\n\t\tApp.prototype._loadComplete = function _loadComplete() {\n\t\t\t// this.scene = new MainScene();\n\t\t\tthis.scene = new _ParticlesScene2.default();\n\t\t\tthis.scene.resize();\n\t\n\t\t\tPOLY.utils.loop.add(this._update.bind(this));\n\t\t};\n\t\n\t\tApp.prototype.resize = function resize() {\n\t\t\tPOLY.GL.resize(this.gl.canvas.clientWidth, this.gl.canvas.clientHeight);\n\t\n\t\t\tif (this.scene) {\n\t\t\t\tthis.scene.resize();\n\t\t\t}\n\t\t};\n\t\n\t\tApp.prototype._update = function _update() {\n\t\t\tthis.gl.clearColor(0, 0, 0, 1);\n\t\t\tthis.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\t\n\t\t\tthis.scene.render();\n\t\t};\n\t\n\t\treturn App;\n\t}();\n\t\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Poly = __webpack_require__(2);\n\t\n\tvar POLY = _interopRequireWildcard(_Poly);\n\t\n\tvar _basic = __webpack_require__(33);\n\t\n\tvar _basic2 = _interopRequireDefault(_basic);\n\t\n\tvar _basic3 = __webpack_require__(34);\n\t\n\tvar _basic4 = _interopRequireDefault(_basic3);\n\t\n\tvar _glMatrix = __webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MainScene = function () {\n\t\tfunction MainScene() {\n\t\t\t_classCallCheck(this, MainScene);\n\t\n\t\t\tthis.gl = null;\n\t\t\tthis.program = null;\n\t\t\tthis.sphere = null;\n\t\t\tthis.rot = null;\n\t\t\tthis.tick = 0;\n\t\t\tthis.angle = null;\n\t\n\t\t\tthis.modelMatrix = _glMatrix.mat4.create();\n\t\n\t\t\tthis.camera = new POLY.cameras.PerspectiveCamera();\n\t\t\tthis.camera.perspective(45, POLY.GL.aspectRatio, 0.1, 100.0);\n\t\t\tthis.orbitalControl = new POLY.control.OrbitalControl(this.camera.matrix);\n\t\n\t\t\tthis._matrix = _glMatrix.mat4.create();\n\t\t\tthis.normalMatrix = _glMatrix.mat3.create();\n\t\n\t\t\tthis.gl = POLY.gl;\n\t\n\t\t\tvar state = new POLY.State(this.gl);\n\t\t\tstate.depthTest = true;\n\t\n\t\t\tthis.fbo = new POLY.FrameBuffer(1024, 1024);\n\t\n\t\t\tvar vertQuad = '\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\tattribute vec3 aPosition;\\n\\t\\t\\tattribute vec3 aNormal;\\n\\t\\t\\tattribute vec2 aUv;\\n\\t\\t\\tuniform mat4 modelMatrix;\\n\\t\\t\\tuniform mat4 viewMatrix;\\n\\t\\t\\tuniform mat4 projectionMatrix;\\n\\n\\t\\t\\tvarying vec3 vPos;\\n\\t\\t\\tvarying vec2 vUv;\\n\\n\\n\\t\\t\\tvoid main(void) {\\n\\t\\t\\t\\tvPos = aPosition;\\n\\t\\t\\t\\tvec3 n = aNormal;\\n\\t\\t\\t\\tvUv = aUv;\\n\\t\\t\\t    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(aPosition, 1.0);\\n\\t\\t\\t}\\n\\t\\t';\n\t\n\t\t\tvar fragQuad = '\\n\\t\\tprecision mediump float;\\n\\n\\t\\tuniform sampler2D uTexture;\\n\\n\\t\\tvarying vec3 vPos;\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main(void) {\\n\\n\\t\\t\\tvec4 textureColor = texture2D(uTexture, vec2(vUv.s, vUv.t));\\n\\t\\t\\tgl_FragColor = textureColor;\\n\\t\\t\\t// gl_FragColor = vec4(1.);\\n\\t\\t\\t// gl_FragColor.rgb *= uAlpha;\\n\\t\\t}\\n\\n\\t\\t';\n\t\n\t\t\tthis.textureCrate = new POLY.Texture(window.ASSET_URL + 'image/crate.gif');\n\t\t\tthis.programQuad = new POLY.Program(vertQuad, fragQuad, {\n\t\t\t\tprojectionMatrix: {\n\t\t\t\t\tvalue: this.camera.projectionMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tmodelMatrix: {\n\t\t\t\t\tvalue: this.modelMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tviewMatrix: {\n\t\t\t\t\tvalue: this.camera.matrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tuTexture: {\n\t\t\t\t\ttype: 'texture',\n\t\t\t\t\tvalue: this.textureCrate\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tthis.quad = new POLY.geometry.Mesh(this.programQuad, state);\n\t\t\tthis.quad.addPosition([-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0], 'aPosition');\n\t\t\tthis.quad.addAttribute([1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0], 'aUv', 2);\n\t\t\t//\n\t\t\tthis.quad.addIndices([0, 1, 2, 0, 2, 3]);\n\t\n\t\t\tthis.texture = new POLY.Texture(window.ASSET_URL + 'image/earth.jpg');\n\t\t\tthis.textureSpecular = new POLY.Texture(window.ASSET_URL + 'image/earth-specular.gif');\n\t\n\t\t\tvar uniforms = {\n\t\t\t\tprojectionMatrix: {\n\t\t\t\t\tvalue: this.camera.projectionMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: this.normalMatrix,\n\t\t\t\t\ttype: 'mat3'\n\t\t\t\t},\n\t\t\t\tmodelMatrix: {\n\t\t\t\t\tvalue: this.modelMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tviewMatrix: {\n\t\t\t\t\tvalue: this.camera.matrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tuTexture: {\n\t\t\t\t\tvalue: this.texture,\n\t\t\t\t\ttype: 'texture',\n\t\t\t\t\tindex: 0\n\t\t\t\t},\n\t\t\t\tuTextureSpecular: {\n\t\t\t\t\tvalue: this.textureSpecular,\n\t\t\t\t\ttype: 'texture',\n\t\t\t\t\tindex: 1\n\t\t\t\t},\n\t\t\t\tuAmbientColor: {\n\t\t\t\t\tvalue: [.5, .5, .5],\n\t\t\t\t\ttype: 'vec3'\n\t\t\t\t},\n\t\t\t\tuPointLightingLocation: {\n\t\t\t\t\tvalue: [-2.0, .0, 0.],\n\t\t\t\t\ttype: 'vec3'\n\t\t\t\t},\n\t\t\t\tuPointLightingDiffuseColor: {\n\t\t\t\t\tvalue: [1., 0, 0],\n\t\t\t\t\ttype: 'vec3'\n\t\t\t\t},\n\t\t\t\tuPointLightingSpecularColor: {\n\t\t\t\t\tvalue: [5., 5., 5.],\n\t\t\t\t\ttype: 'vec3'\n\t\t\t\t},\n\t\t\t\tuMaterialShininess: {\n\t\t\t\t\tvalue: 40.,\n\t\t\t\t\ttype: 'float'\n\t\t\t\t},\n\t\t\t\tuAlpha: {\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\ttype: 'float'\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tthis.program = new POLY.Program(_basic4.default, _basic2.default, uniforms);\n\t\t\tthis.sphere = new POLY.geometry.Cube(this.program, {}, state);\n\t\t}\n\t\n\t\tMainScene.prototype.render = function render() {\n\t\t\tthis.tick++;\n\t\n\t\t\tthis.orbitalControl.update();\n\t\t\tthis.camera.position[2] += .01;\n\t\t\t// this.program.uniforms.uTexture.bind();\n\t\n\t\t\t// set uniforms\n\t\t\tthis.sphere.rotation.y += .01;\n\t\n\t\t\t_glMatrix.mat4.multiply(this._matrix, this.camera.matrix, this.sphere._matrix);\n\t\t\t_glMatrix.mat3.fromMat4(this.normalMatrix, this._matrix);\n\t\t\t_glMatrix.mat3.transpose(this.normalMatrix, this.normalMatrix);\n\t\n\t\t\tthis.fbo.bind();\n\t\n\t\t\tthis.program.bind();\n\t\n\t\t\tthis.texture.bind(0);\n\t\t\tthis.textureSpecular.bind(1);\n\t\t\tthis.program.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t\t\tthis.program.uniforms.viewMatrix = this.camera.matrix;\n\t\t\tthis.program.uniforms.normalMatrix = this.normalMatrix;\n\t\t\tthis.program.uniforms.modelMatrix = this.sphere._matrix;\n\t\n\t\t\tPOLY.GL.draw(this.sphere);\n\t\n\t\t\tthis.fbo.unbind();\n\t\n\t\t\tthis.programQuad.bind();\n\t\t\tthis.fbo.textures[0].bind();\n\t\t\tthis.programQuad.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t\t\tthis.programQuad.uniforms.viewMatrix = this.camera.matrix;\n\t\t\tthis.programQuad.uniforms.modelMatrix = this.quad._matrix;\n\t\t\tPOLY.GL.draw(this.quad);\n\t\t};\n\t\n\t\tMainScene.prototype.resize = function resize() {\n\t\t\tthis.camera.setAspectRatio(POLY.GL.aspectRatio);\n\t\t\tthis.quad.scale.set(2 * POLY.GL.aspectRatio, 2, 0);\n\t\t};\n\t\n\t\treturn MainScene;\n\t}();\n\t\n\texports.default = MainScene;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Poly = __webpack_require__(2);\n\t\n\tvar POLY = _interopRequireWildcard(_Poly);\n\t\n\tvar _particles = __webpack_require__(35);\n\t\n\tvar _particles2 = _interopRequireDefault(_particles);\n\t\n\tvar _particles3 = __webpack_require__(36);\n\t\n\tvar _particles4 = _interopRequireDefault(_particles3);\n\t\n\tvar _simulation_fs = __webpack_require__(39);\n\t\n\tvar _simulation_fs2 = _interopRequireDefault(_simulation_fs);\n\t\n\tvar _simulation_vs = __webpack_require__(40);\n\t\n\tvar _simulation_vs2 = _interopRequireDefault(_simulation_vs);\n\t\n\tvar _render = __webpack_require__(37);\n\t\n\tvar _render2 = _interopRequireDefault(_render);\n\t\n\tvar _render3 = __webpack_require__(38);\n\t\n\tvar _render4 = _interopRequireDefault(_render3);\n\t\n\tvar _test = __webpack_require__(41);\n\t\n\tvar _test2 = _interopRequireDefault(_test);\n\t\n\tvar _test3 = __webpack_require__(42);\n\t\n\tvar _test4 = _interopRequireDefault(_test3);\n\t\n\tvar _glMatrix = __webpack_require__(7);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ParticlesScene = function () {\n\t\tfunction ParticlesScene() {\n\t\t\t_classCallCheck(this, ParticlesScene);\n\t\n\t\t\tthis.gl = null;\n\t\t\tthis.program = null;\n\t\t\tthis.sphere = null;\n\t\t\tthis.rot = null;\n\t\t\tthis.tick = 0;\n\t\t\tthis.angle = null;\n\t\n\t\t\tthis.modelMatrix = _glMatrix.mat4.create();\n\t\n\t\t\tthis.camera = new POLY.cameras.PerspectiveCamera();\n\t\t\tthis.camera.perspective(45, POLY.GL.aspectRatio, 0.1, 100.0);\n\t\t\tthis.orbitalControl = new POLY.control.OrbitalControl(this.camera.matrix);\n\t\n\t\t\tthis._matrix = _glMatrix.mat4.create();\n\t\t\tthis.normalMatrix = _glMatrix.mat3.create();\n\t\n\t\t\tthis.gl = POLY.gl;\n\t\n\t\t\tvar stateRendering = new POLY.State(this.gl);\n\t\t\tstateRendering.depthTest = true;\n\t\n\t\t\tvar width = 1024;\n\t\t\tvar height = 1024;\n\t\t\tthis.fbo = new POLY.FrameBuffer(width, height);\n\t\n\t\t\tvar w = width;\n\t\t\tvar h = height;\n\t\t\tvar len = w * h * 4;\n\t\t\tvar data = new Float32Array(len);\n\t\n\t\t\twhile (len--) {\n\t\t\t\tdata[len] = Math.random();\n\t\t\t}this.dataTexture = new POLY.DataTexture(data, w, h);\n\t\n\t\t\tthis.simulationProgram = new POLY.Program(_simulation_vs2.default, _simulation_fs2.default, {\n\t\t\t\tprojectionMatrix: {\n\t\t\t\t\tvalue: this.camera.projectionMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tmodelMatrix: {\n\t\t\t\t\tvalue: this.modelMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tviewMatrix: {\n\t\t\t\t\tvalue: this.camera.matrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.geomSim = new POLY.geometry.Quad(this.simulationProgram, null, stateRendering);\n\t\n\t\t\tthis.renderingProgram = new POLY.Program(_render4.default, _render2.default, {\n\t\t\t\tprojectionMatrix: {\n\t\t\t\t\tvalue: this.camera.projectionMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tmodelMatrix: {\n\t\t\t\t\tvalue: this.modelMatrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tviewMatrix: {\n\t\t\t\t\tvalue: this.camera.matrix,\n\t\t\t\t\ttype: 'mat4'\n\t\t\t\t},\n\t\t\t\tpointSize: {\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\ttype: 'float'\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tvar l = width * height;\n\t\t\tvar vertices = new Float32Array(l * 3);\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tvar i3 = i * 3;\n\t\t\t\tvertices[i3] = i % width / width;\n\t\t\t\tvertices[i3 + 1] = i / width / height;\n\t\t\t}\n\t\n\t\t\tthis.geomRendering = new POLY.geometry.Mesh(this.renderingProgram, stateRendering, POLY.gl.POINTS);\n\t\t\tthis.geomRendering.addPosition(vertices);\n\t\t}\n\t\n\t\tParticlesScene.prototype.render = function render() {\n\t\t\tthis.tick++;\n\t\n\t\t\tthis.orbitalControl.update();\n\t\n\t\t\t_glMatrix.mat3.fromMat4(this.normalMatrix, this._matrix);\n\t\t\t_glMatrix.mat3.transpose(this.normalMatrix, this.normalMatrix);\n\t\n\t\t\tthis.fbo.bind();\n\t\t\tthis.simulationProgram.bind();\n\t\t\tthis.dataTexture.bind(0);\n\t\t\tthis.simulationProgram.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t\t\tthis.simulationProgram.uniforms.viewMatrix = this.camera.matrix;\n\t\t\tPOLY.GL.draw(this.geomSim);\n\t\t\tthis.fbo.unbind();\n\t\n\t\t\tthis.renderingProgram.bind();\n\t\t\tthis.fbo.textures[0].bind(0);\n\t\t\tthis.renderingProgram.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t\t\tthis.renderingProgram.uniforms.viewMatrix = this.camera.matrix;\n\t\t\tPOLY.GL.draw(this.geomRendering);\n\t\n\t\t\tthis.fbo.clear();\n\t\t};\n\t\n\t\tParticlesScene.prototype.resize = function resize() {\n\t\t\tthis.camera.setAspectRatio(POLY.GL.aspectRatio);\n\t\t};\n\t\n\t\treturn ParticlesScene;\n\t}();\n\t\n\texports.default = ParticlesScene;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Cache = function () {\n\t  function Cache() {\n\t    _classCallCheck(this, Cache);\n\t\n\t    this._json = {};\n\t    this._text = {};\n\t  }\n\t\n\t  Cache.prototype.addJson = function addJson(json, id) {\n\t    this._json[id] = json;\n\t  };\n\t\n\t  Cache.prototype.getJson = function getJson(id) {\n\t    if (this._json[id]) {\n\t      return this._json[id];\n\t    } else {\n\t      console.warn(id + \" not found in Cache\");\n\t      return null;\n\t    }\n\t  };\n\t\n\t  return Cache;\n\t}();\n\t\n\texports.default = Cache;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _signals = __webpack_require__(28);\n\t\n\tvar _signals2 = _interopRequireDefault(_signals);\n\t\n\tvar _path = __webpack_require__(22);\n\t\n\tvar _path2 = _interopRequireDefault(_path);\n\t\n\tvar _Cache = __webpack_require__(18);\n\t\n\tvar _Cache2 = _interopRequireDefault(_Cache);\n\t\n\tvar _resourceLoader = __webpack_require__(25);\n\t\n\tvar _resourceLoader2 = _interopRequireDefault(_resourceLoader);\n\t\n\tvar _fontfaceobserver = __webpack_require__(21);\n\t\n\tvar _fontfaceobserver2 = _interopRequireDefault(_fontfaceobserver);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // Complete ripped of GoodboyDigital Loader, Real author of this is Mat Groves <3\n\t\n\t\n\tvar Loader = function () {\n\t    function Loader() {\n\t        _classCallCheck(this, Loader);\n\t\n\t        this.crossdomain = false;\n\t\n\t        this.assetsToLoad = [];\n\t        if (window.XDomainRequest && this.crossdomain) {\n\t            this.ajaxRequest = new window.XDomainRequest();\n\t            this.ajaxRequest.timeout = 3000;\n\t\n\t            this.ajaxRequest.onerror = function () {};\n\t\n\t            this.ajaxRequest.ontimeout = function () {};\n\t\n\t            this.ajaxRequest.onprogress = function () {};\n\t        } else if (window.XMLHttpRequest) {\n\t            this.ajaxRequest = new window.XMLHttpRequest();\n\t        }\n\t\n\t        this.ajaxRequest.onload = this._onFileLoaded.bind(this);\n\t        this.ajaxRequest.onreadystatechange = function (e) {};\n\t\n\t        this.fileCount = 0;\n\t        this.filesToLoad = [];\n\t\n\t        this.fontsToLoad = [];\n\t        // this.pixiAssetsToLoad = [];\n\t        this.soundsToLoad = [];\n\t        this.customToLoad = [];\n\t\n\t        this.onComplete = new _signals2.default();\n\t        this.onProgress = new _signals2.default();\n\t    }\n\t\n\t    Loader.prototype.addFonts = function addFonts(fonts) {\n\t        this.fontsToLoad = this.fontsToLoad.concat(fonts);\n\t        return this;\n\t    };\n\t\n\t    Loader.prototype.addJson = function addJson(url, id) {\n\t        var id = id || _path2.default.basename(url, _path2.default.extname(url));\n\t\n\t        var fileData = { url: url, id: id, type: Loader.JSON };\n\t\n\t        this.filesToLoad.push(fileData);\n\t        return this;\n\t    };\n\t\n\t    Loader.prototype.addAssets = function addAssets(assets) {\n\t        this.assetsToLoad = this.assetsToLoad.concat(assets);\n\t        return this;\n\t    };\n\t\n\t    Loader.prototype.addCSS = function addCSS(url) {\n\t        var link = document.createElement(\"link\");\n\t        link.type = \"text/css\";\n\t        link.rel = \"stylesheet\";\n\t        link.href = url;\n\t        document.getElementsByTagName(\"head\")[0].appendChild(link);\n\t\n\t        return this;\n\t    };\n\t\n\t    Loader.prototype.load = function load() {\n\t        this._loadFonts();\n\t    };\n\t\n\t    Loader.prototype._loadFiles = function _loadFiles() {\n\t        this.fileCount = 0;\n\t\n\t        if (this.filesToLoad.length) {\n\t            this._loadNextFile();\n\t        } else {\n\t            this._loadAssets();\n\t        }\n\t    };\n\t\n\t    Loader.prototype._loadNextFile = function _loadNextFile() {\n\t        var fileData = this.filesToLoad[this.fileCount];\n\t\n\t        if (fileData.type === Loader.CUSTOM) {\n\t            fileData.object.onLoaded.addOnce(this._onFileLoaded, this);\n\t            fileData.object.load();\n\t        } else {\n\t            this.ajaxRequest.open('GET', fileData.url, true);\n\t            this.ajaxRequest.send();\n\t        }\n\t    };\n\t\n\t    Loader.prototype._onFileLoaded = function _onFileLoaded() {\n\t        var fileData = this.filesToLoad[this.fileCount];\n\t\n\t        if (fileData.type === Loader.CUSTOM) {\n\t            // done!\n\t        } else {\n\t            if (this.ajaxRequest.status === 0 || this.ajaxRequest.status === 200) {\n\t                switch (fileData.type) {\n\t                    case Loader.TEXT:\n\t\n\t                        var text = this.ajaxRequest.responseText;\n\t                        _Cache2.default.addText(text, fileData.id);\n\t\n\t                        break;\n\t\n\t                    case Loader.JSON:\n\t\n\t                        //     console.log(this.ajaxRequest.responseText);\n\t                        var jsonObject = JSON.parse(this.ajaxRequest.responseText);\n\t                        _Cache2.default.addJson(jsonObject, fileData.id);\n\t\n\t                        break;\n\t                }\n\t            } else {\n\t                console.warn(\"Loader: \" + fileData.url + \" not found\");\n\t            }\n\t        }\n\t\n\t        this.fileCount++;\n\t        this._onProgress();\n\t\n\t        if (this.fileCount === this.filesToLoad.length) {\n\t            // complete!\n\t            this._loadAssets();\n\t        } else {\n\t            this._loadNextFile();\n\t        }\n\t    };\n\t\n\t    Loader.prototype._getFonts = function _getFonts(fonts) {\n\t        var a = [];\n\t        for (var i = 0; i < fonts.length; i++) {\n\t            a.push(fonts[i].load());\n\t        }\n\t\n\t        return a;\n\t    };\n\t\n\t    Loader.prototype._loadFonts = function _loadFonts() {\n\t        var _this = this;\n\t\n\t        if (this.fontsToLoad.length === 0) {\n\t            this._loadFiles();\n\t            return;\n\t        }\n\t\n\t        var fonts = [];\n\t        for (var i = 0; i < this.fontsToLoad.length; i++) {\n\t            var f = new _fontfaceobserver2.default(this.fontsToLoad[i]);\n\t            fonts.push(f);\n\t        }\n\t\n\t        Promise.all(this._getFonts(fonts)).then(function (fonts) {\n\t            // console.log('Fonts have loaded');\n\t            _this._loadFiles();\n\t        }, function () {\n\t            // console.log('Issue while loading the fonts');\n\t            _this._loadFiles();\n\t        });\n\t    };\n\t\n\t    Loader.prototype.addManifest = function addManifest(manifest, prefix) {\n\t        var assetsManifest = manifest.map(function (path) {\n\t            return prefix + path;\n\t        });\n\t\n\t        this.addAssets(assetsManifest);\n\t\n\t        return this;\n\t    };\n\t\n\t    Loader.prototype._loadAssets = function _loadAssets() {\n\t        if (this.assetsToLoad.length === 0) {\n\t            this._onComplete();\n\t            return;\n\t        }\n\t\n\t        this.assetLoader = new _resourceLoader2.default();\n\t        this.assetLoader.add(this.assetsToLoad);\n\t        this.assetLoader.on('progress', this._onProgress, this);\n\t\n\t        this.assetLoader.load(this._onComplete.bind(this));\n\t    };\n\t\n\t    Loader.prototype._onComplete = function _onComplete(l, r) {\n\t        POLY.loadedResources = r;\n\t        this.onProgress.dispatch(1);\n\t        this.onComplete.dispatch();\n\t    };\n\t\n\t    Loader.prototype._onProgress = function _onProgress() {\n\t        var total = this.filesToLoad.length + this.assetsToLoad.length;\n\t        var loaded = this.fileCount;\n\t\n\t        if (this.assetLoader) {\n\t            loaded = this.assetLoader.progress;\n\t        }\n\t\n\t        this.onProgress.dispatch(loaded * 0.01);\n\t    };\n\t\n\t    return Loader;\n\t}();\n\t\n\t// some constants..\n\t\n\t\n\tLoader.TEXT = 0;\n\tLoader.JSON = 1;\n\tLoader.CUSTOM = 2;\n\t\n\texports.default = Loader;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.Loader = undefined;\n\t\n\tvar _Loader = __webpack_require__(19);\n\t\n\tvar _Loader2 = _interopRequireDefault(_Loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Loader = _Loader2.default;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function(){function m(a,b){document.addEventListener?a.addEventListener(\"scroll\",b,!1):a.attachEvent(\"scroll\",b)}function n(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):document.attachEvent(\"onreadystatechange\",function l(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",l),a()})};function t(a){this.a=document.createElement(\"div\");this.a.setAttribute(\"aria-hidden\",\"true\");this.a.appendChild(document.createTextNode(a));this.b=document.createElement(\"span\");this.c=document.createElement(\"span\");this.h=document.createElement(\"span\");this.f=document.createElement(\"span\");this.g=-1;this.b.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.c.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\n\tthis.f.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.h.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}\n\tfunction x(a,b){a.a.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font:\"+b+\";\"}function y(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+\"px\";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function z(a,b){function c(){var a=l;y(a)&&a.a.parentNode&&b(a.g)}var l=a;m(a.b,c);m(a.c,c);y(a)};function A(a,b){var c=b||{};this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\"}var B=null,C=null,E=null,F=null;function I(){if(null===E){var a=document.createElement(\"div\");try{a.style.font=\"condensed 100px sans-serif\"}catch(b){}E=\"\"!==a.style.font}return E}function J(a,b){return[a.style,a.weight,I()?a.stretch:\"\",\"100px\",b].join(\" \")}\n\tA.prototype.load=function(a,b){var c=this,l=a||\"BESbswy\",r=0,D=b||3E3,G=(new Date).getTime();return new Promise(function(a,b){var e;null===F&&(F=!!document.fonts);if(e=F)null===C&&(C=/OS X.*Version\\/10\\..*Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),e=!C;if(e){e=new Promise(function(a,b){function f(){(new Date).getTime()-G>=D?b():document.fonts.load(J(c,'\"'+c.family+'\"'),l).then(function(c){1<=c.length?a():setTimeout(f,25)},function(){b()})}f()});var K=new Promise(function(a,\n\tc){r=setTimeout(c,D)});Promise.race([K,e]).then(function(){clearTimeout(r);a(c)},function(){b(c)})}else n(function(){function e(){var b;if(b=-1!=g&&-1!=h||-1!=g&&-1!=k||-1!=h&&-1!=k)(b=g!=h&&g!=k&&h!=k)||(null===B&&(b=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),B=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=B&&(g==u&&h==u&&k==u||g==v&&h==v&&k==v||g==w&&h==w&&k==w)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}\n\tfunction H(){if((new Date).getTime()-G>=D)d.parentNode&&d.parentNode.removeChild(d),b(c);else{var a=document.hidden;if(!0===a||void 0===a)g=f.a.offsetWidth,h=p.a.offsetWidth,k=q.a.offsetWidth,e();r=setTimeout(H,50)}}var f=new t(l),p=new t(l),q=new t(l),g=-1,h=-1,k=-1,u=-1,v=-1,w=-1,d=document.createElement(\"div\");d.dir=\"ltr\";x(f,J(c,\"sans-serif\"));x(p,J(c,\"serif\"));x(q,J(c,\"monospace\"));d.appendChild(f.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);u=f.a.offsetWidth;v=p.a.offsetWidth;\n\tw=q.a.offsetWidth;H();z(f,function(a){g=a;e()});x(f,J(c,'\"'+c.family+'\",sans-serif'));z(p,function(a){h=a;e()});x(p,J(c,'\"'+c.family+'\",serif'));z(q,function(a){k=a;e()});x(q,J(c,'\"'+c.family+'\",monospace'))})})}; true?module.exports=A:(window.FontFaceObserver=A,window.FontFaceObserver.prototype.load=A.prototype.load);}());\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\r\n\t//\r\n\t// Permission is hereby granted, free of charge, to any person obtaining a\r\n\t// copy of this software and associated documentation files (the\r\n\t// \"Software\"), to deal in the Software without restriction, including\r\n\t// without limitation the rights to use, copy, modify, merge, publish,\r\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n\t// persons to whom the Software is furnished to do so, subject to the\r\n\t// following conditions:\r\n\t//\r\n\t// The above copyright notice and this permission notice shall be included\r\n\t// in all copies or substantial portions of the Software.\r\n\t//\r\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\t\r\n\t'use strict';\r\n\t\r\n\t\r\n\tvar isWindows = process.platform === 'win32';\r\n\tvar util = __webpack_require__(31);\r\n\t\r\n\t\r\n\t// resolves . and .. elements in a path array with directory names there\r\n\t// must be no slashes or device names (c:\\) in the array\r\n\t// (so also no leading and trailing slashes - it does not distinguish\r\n\t// relative and absolute paths)\r\n\tfunction normalizeArray(parts, allowAboveRoot) {\r\n\t  var res = [];\r\n\t  for (var i = 0; i < parts.length; i++) {\r\n\t    var p = parts[i];\r\n\t\r\n\t    // ignore empty parts\r\n\t    if (!p || p === '.')\r\n\t      continue;\r\n\t\r\n\t    if (p === '..') {\r\n\t      if (res.length && res[res.length - 1] !== '..') {\r\n\t        res.pop();\r\n\t      } else if (allowAboveRoot) {\r\n\t        res.push('..');\r\n\t      }\r\n\t    } else {\r\n\t      res.push(p);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return res;\r\n\t}\r\n\t\r\n\t// returns an array with empty elements removed from either end of the input\r\n\t// array or the original array if no elements need to be removed\r\n\tfunction trimArray(arr) {\r\n\t  var lastIndex = arr.length - 1;\r\n\t  var start = 0;\r\n\t  for (; start <= lastIndex; start++) {\r\n\t    if (arr[start])\r\n\t      break;\r\n\t  }\r\n\t\r\n\t  var end = lastIndex;\r\n\t  for (; end >= 0; end--) {\r\n\t    if (arr[end])\r\n\t      break;\r\n\t  }\r\n\t\r\n\t  if (start === 0 && end === lastIndex)\r\n\t    return arr;\r\n\t  if (start > end)\r\n\t    return [];\r\n\t  return arr.slice(start, end + 1);\r\n\t}\r\n\t\r\n\t// Regex to split a windows path into three parts: [*, device, slash,\r\n\t// tail] windows-only\r\n\tvar splitDeviceRe =\r\n\t    /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\r\n\t\r\n\t// Regex to split the tail part of the above into [*, dir, basename, ext]\r\n\tvar splitTailRe =\r\n\t    /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\r\n\t\r\n\tvar win32 = {};\r\n\t\r\n\t// Function to split a filename into [root, dir, basename, ext]\r\n\tfunction win32SplitPath(filename) {\r\n\t  // Separate device+slash from tail\r\n\t  var result = splitDeviceRe.exec(filename),\r\n\t      device = (result[1] || '') + (result[2] || ''),\r\n\t      tail = result[3] || '';\r\n\t  // Split the tail into dir, basename and extension\r\n\t  var result2 = splitTailRe.exec(tail),\r\n\t      dir = result2[1],\r\n\t      basename = result2[2],\r\n\t      ext = result2[3];\r\n\t  return [device, dir, basename, ext];\r\n\t}\r\n\t\r\n\tfunction win32StatPath(path) {\r\n\t  var result = splitDeviceRe.exec(path),\r\n\t      device = result[1] || '',\r\n\t      isUnc = !!device && device[1] !== ':';\r\n\t  return {\r\n\t    device: device,\r\n\t    isUnc: isUnc,\r\n\t    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute\r\n\t    tail: result[3]\r\n\t  };\r\n\t}\r\n\t\r\n\tfunction normalizeUNCRoot(device) {\r\n\t  return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\r\n\t}\r\n\t\r\n\t// path.resolve([from ...], to)\r\n\twin32.resolve = function() {\r\n\t  var resolvedDevice = '',\r\n\t      resolvedTail = '',\r\n\t      resolvedAbsolute = false;\r\n\t\r\n\t  for (var i = arguments.length - 1; i >= -1; i--) {\r\n\t    var path;\r\n\t    if (i >= 0) {\r\n\t      path = arguments[i];\r\n\t    } else if (!resolvedDevice) {\r\n\t      path = process.cwd();\r\n\t    } else {\r\n\t      // Windows has the concept of drive-specific current working\r\n\t      // directories. If we've resolved a drive letter but not yet an\r\n\t      // absolute path, get cwd for that drive. We're sure the device is not\r\n\t      // an unc path at this points, because unc paths are always absolute.\r\n\t      path = process.env['=' + resolvedDevice];\r\n\t      // Verify that a drive-local cwd was found and that it actually points\r\n\t      // to our drive. If not, default to the drive's root.\r\n\t      if (!path || path.substr(0, 3).toLowerCase() !==\r\n\t          resolvedDevice.toLowerCase() + '\\\\') {\r\n\t        path = resolvedDevice + '\\\\';\r\n\t      }\r\n\t    }\r\n\t\r\n\t    // Skip empty and invalid entries\r\n\t    if (!util.isString(path)) {\r\n\t      throw new TypeError('Arguments to path.resolve must be strings');\r\n\t    } else if (!path) {\r\n\t      continue;\r\n\t    }\r\n\t\r\n\t    var result = win32StatPath(path),\r\n\t        device = result.device,\r\n\t        isUnc = result.isUnc,\r\n\t        isAbsolute = result.isAbsolute,\r\n\t        tail = result.tail;\r\n\t\r\n\t    if (device &&\r\n\t        resolvedDevice &&\r\n\t        device.toLowerCase() !== resolvedDevice.toLowerCase()) {\r\n\t      // This path points to another device so it is not applicable\r\n\t      continue;\r\n\t    }\r\n\t\r\n\t    if (!resolvedDevice) {\r\n\t      resolvedDevice = device;\r\n\t    }\r\n\t    if (!resolvedAbsolute) {\r\n\t      resolvedTail = tail + '\\\\' + resolvedTail;\r\n\t      resolvedAbsolute = isAbsolute;\r\n\t    }\r\n\t\r\n\t    if (resolvedDevice && resolvedAbsolute) {\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Convert slashes to backslashes when `resolvedDevice` points to an UNC\r\n\t  // root. Also squash multiple slashes into a single one where appropriate.\r\n\t  if (isUnc) {\r\n\t    resolvedDevice = normalizeUNCRoot(resolvedDevice);\r\n\t  }\r\n\t\r\n\t  // At this point the path should be resolved to a full absolute path,\r\n\t  // but handle relative paths to be safe (might happen when process.cwd()\r\n\t  // fails)\r\n\t\r\n\t  // Normalize the tail path\r\n\t  resolvedTail = normalizeArray(resolvedTail.split(/[\\\\\\/]+/),\r\n\t                                !resolvedAbsolute).join('\\\\');\r\n\t\r\n\t  return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\r\n\t         '.';\r\n\t};\r\n\t\r\n\t\r\n\twin32.normalize = function(path) {\r\n\t  var result = win32StatPath(path),\r\n\t      device = result.device,\r\n\t      isUnc = result.isUnc,\r\n\t      isAbsolute = result.isAbsolute,\r\n\t      tail = result.tail,\r\n\t      trailingSlash = /[\\\\\\/]$/.test(tail);\r\n\t\r\n\t  // Normalize the tail path\r\n\t  tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\r\n\t\r\n\t  if (!tail && !isAbsolute) {\r\n\t    tail = '.';\r\n\t  }\r\n\t  if (tail && trailingSlash) {\r\n\t    tail += '\\\\';\r\n\t  }\r\n\t\r\n\t  // Convert slashes to backslashes when `device` points to an UNC root.\r\n\t  // Also squash multiple slashes into a single one where appropriate.\r\n\t  if (isUnc) {\r\n\t    device = normalizeUNCRoot(device);\r\n\t  }\r\n\t\r\n\t  return device + (isAbsolute ? '\\\\' : '') + tail;\r\n\t};\r\n\t\r\n\t\r\n\twin32.isAbsolute = function(path) {\r\n\t  return win32StatPath(path).isAbsolute;\r\n\t};\r\n\t\r\n\twin32.join = function() {\r\n\t  var paths = [];\r\n\t  for (var i = 0; i < arguments.length; i++) {\r\n\t    var arg = arguments[i];\r\n\t    if (!util.isString(arg)) {\r\n\t      throw new TypeError('Arguments to path.join must be strings');\r\n\t    }\r\n\t    if (arg) {\r\n\t      paths.push(arg);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var joined = paths.join('\\\\');\r\n\t\r\n\t  // Make sure that the joined path doesn't start with two slashes, because\r\n\t  // normalize() will mistake it for an UNC path then.\r\n\t  //\r\n\t  // This step is skipped when it is very clear that the user actually\r\n\t  // intended to point at an UNC path. This is assumed when the first\r\n\t  // non-empty string arguments starts with exactly two slashes followed by\r\n\t  // at least one more non-slash character.\r\n\t  //\r\n\t  // Note that for normalize() to treat a path as an UNC path it needs to\r\n\t  // have at least 2 components, so we don't filter for that here.\r\n\t  // This means that the user can use join to construct UNC paths from\r\n\t  // a server name and a share name; for example:\r\n\t  //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\')\r\n\t  if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\r\n\t    joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\r\n\t  }\r\n\t\r\n\t  return win32.normalize(joined);\r\n\t};\r\n\t\r\n\t\r\n\t// path.relative(from, to)\r\n\t// it will solve the relative path from 'from' to 'to', for instance:\r\n\t// from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n\t// to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\n\twin32.relative = function(from, to) {\r\n\t  from = win32.resolve(from);\r\n\t  to = win32.resolve(to);\r\n\t\r\n\t  // windows is not case sensitive\r\n\t  var lowerFrom = from.toLowerCase();\r\n\t  var lowerTo = to.toLowerCase();\r\n\t\r\n\t  var toParts = trimArray(to.split('\\\\'));\r\n\t\r\n\t  var lowerFromParts = trimArray(lowerFrom.split('\\\\'));\r\n\t  var lowerToParts = trimArray(lowerTo.split('\\\\'));\r\n\t\r\n\t  var length = Math.min(lowerFromParts.length, lowerToParts.length);\r\n\t  var samePartsLength = length;\r\n\t  for (var i = 0; i < length; i++) {\r\n\t    if (lowerFromParts[i] !== lowerToParts[i]) {\r\n\t      samePartsLength = i;\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  if (samePartsLength == 0) {\r\n\t    return to;\r\n\t  }\r\n\t\r\n\t  var outputParts = [];\r\n\t  for (var i = samePartsLength; i < lowerFromParts.length; i++) {\r\n\t    outputParts.push('..');\r\n\t  }\r\n\t\r\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\t\r\n\t  return outputParts.join('\\\\');\r\n\t};\r\n\t\r\n\t\r\n\twin32._makeLong = function(path) {\r\n\t  // Note: this will *probably* throw somewhere.\r\n\t  if (!util.isString(path))\r\n\t    return path;\r\n\t\r\n\t  if (!path) {\r\n\t    return '';\r\n\t  }\r\n\t\r\n\t  var resolvedPath = win32.resolve(path);\r\n\t\r\n\t  if (/^[a-zA-Z]\\:\\\\/.test(resolvedPath)) {\r\n\t    // path is local filesystem path, which needs to be converted\r\n\t    // to long UNC path.\r\n\t    return '\\\\\\\\?\\\\' + resolvedPath;\r\n\t  } else if (/^\\\\\\\\[^?.]/.test(resolvedPath)) {\r\n\t    // path is network UNC path, which needs to be converted\r\n\t    // to long UNC path.\r\n\t    return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.substring(2);\r\n\t  }\r\n\t\r\n\t  return path;\r\n\t};\r\n\t\r\n\t\r\n\twin32.dirname = function(path) {\r\n\t  var result = win32SplitPath(path),\r\n\t      root = result[0],\r\n\t      dir = result[1];\r\n\t\r\n\t  if (!root && !dir) {\r\n\t    // No dirname whatsoever\r\n\t    return '.';\r\n\t  }\r\n\t\r\n\t  if (dir) {\r\n\t    // It has a dirname, strip trailing slash\r\n\t    dir = dir.substr(0, dir.length - 1);\r\n\t  }\r\n\t\r\n\t  return root + dir;\r\n\t};\r\n\t\r\n\t\r\n\twin32.basename = function(path, ext) {\r\n\t  var f = win32SplitPath(path)[2];\r\n\t  // TODO: make this comparison case-insensitive on windows?\r\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\r\n\t    f = f.substr(0, f.length - ext.length);\r\n\t  }\r\n\t  return f;\r\n\t};\r\n\t\r\n\t\r\n\twin32.extname = function(path) {\r\n\t  return win32SplitPath(path)[3];\r\n\t};\r\n\t\r\n\t\r\n\twin32.format = function(pathObject) {\r\n\t  if (!util.isObject(pathObject)) {\r\n\t    throw new TypeError(\r\n\t        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n\t    );\r\n\t  }\r\n\t\r\n\t  var root = pathObject.root || '';\r\n\t\r\n\t  if (!util.isString(root)) {\r\n\t    throw new TypeError(\r\n\t        \"'pathObject.root' must be a string or undefined, not \" +\r\n\t        typeof pathObject.root\r\n\t    );\r\n\t  }\r\n\t\r\n\t  var dir = pathObject.dir;\r\n\t  var base = pathObject.base || '';\r\n\t  if (!dir) {\r\n\t    return base;\r\n\t  }\r\n\t  if (dir[dir.length - 1] === win32.sep) {\r\n\t    return dir + base;\r\n\t  }\r\n\t  return dir + win32.sep + base;\r\n\t};\r\n\t\r\n\t\r\n\twin32.parse = function(pathString) {\r\n\t  if (!util.isString(pathString)) {\r\n\t    throw new TypeError(\r\n\t        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n\t    );\r\n\t  }\r\n\t  var allParts = win32SplitPath(pathString);\r\n\t  if (!allParts || allParts.length !== 4) {\r\n\t    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n\t  }\r\n\t  return {\r\n\t    root: allParts[0],\r\n\t    dir: allParts[0] + allParts[1].slice(0, -1),\r\n\t    base: allParts[2],\r\n\t    ext: allParts[3],\r\n\t    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n\t  };\r\n\t};\r\n\t\r\n\t\r\n\twin32.sep = '\\\\';\r\n\twin32.delimiter = ';';\r\n\t\r\n\t\r\n\t// Split a filename into [root, dir, basename, ext], unix version\r\n\t// 'root' is just a slash, or nothing.\r\n\tvar splitPathRe =\r\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n\tvar posix = {};\r\n\t\r\n\t\r\n\tfunction posixSplitPath(filename) {\r\n\t  return splitPathRe.exec(filename).slice(1);\r\n\t}\r\n\t\r\n\t\r\n\t// path.resolve([from ...], to)\r\n\t// posix version\r\n\tposix.resolve = function() {\r\n\t  var resolvedPath = '',\r\n\t      resolvedAbsolute = false;\r\n\t\r\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\r\n\t\r\n\t    // Skip empty and invalid entries\r\n\t    if (!util.isString(path)) {\r\n\t      throw new TypeError('Arguments to path.resolve must be strings');\r\n\t    } else if (!path) {\r\n\t      continue;\r\n\t    }\r\n\t\r\n\t    resolvedPath = path + '/' + resolvedPath;\r\n\t    resolvedAbsolute = path[0] === '/';\r\n\t  }\r\n\t\r\n\t  // At this point the path should be resolved to a full absolute path, but\r\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\t\r\n\t  // Normalize the path\r\n\t  resolvedPath = normalizeArray(resolvedPath.split('/'),\r\n\t                                !resolvedAbsolute).join('/');\r\n\t\r\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n\t};\r\n\t\r\n\t// path.normalize(path)\r\n\t// posix version\r\n\tposix.normalize = function(path) {\r\n\t  var isAbsolute = posix.isAbsolute(path),\r\n\t      trailingSlash = path && path[path.length - 1] === '/';\r\n\t\r\n\t  // Normalize the path\r\n\t  path = normalizeArray(path.split('/'), !isAbsolute).join('/');\r\n\t\r\n\t  if (!path && !isAbsolute) {\r\n\t    path = '.';\r\n\t  }\r\n\t  if (path && trailingSlash) {\r\n\t    path += '/';\r\n\t  }\r\n\t\r\n\t  return (isAbsolute ? '/' : '') + path;\r\n\t};\r\n\t\r\n\t// posix version\r\n\tposix.isAbsolute = function(path) {\r\n\t  return path.charAt(0) === '/';\r\n\t};\r\n\t\r\n\t// posix version\r\n\tposix.join = function() {\r\n\t  var path = '';\r\n\t  for (var i = 0; i < arguments.length; i++) {\r\n\t    var segment = arguments[i];\r\n\t    if (!util.isString(segment)) {\r\n\t      throw new TypeError('Arguments to path.join must be strings');\r\n\t    }\r\n\t    if (segment) {\r\n\t      if (!path) {\r\n\t        path += segment;\r\n\t      } else {\r\n\t        path += '/' + segment;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  return posix.normalize(path);\r\n\t};\r\n\t\r\n\t\r\n\t// path.relative(from, to)\r\n\t// posix version\r\n\tposix.relative = function(from, to) {\r\n\t  from = posix.resolve(from).substr(1);\r\n\t  to = posix.resolve(to).substr(1);\r\n\t\r\n\t  var fromParts = trimArray(from.split('/'));\r\n\t  var toParts = trimArray(to.split('/'));\r\n\t\r\n\t  var length = Math.min(fromParts.length, toParts.length);\r\n\t  var samePartsLength = length;\r\n\t  for (var i = 0; i < length; i++) {\r\n\t    if (fromParts[i] !== toParts[i]) {\r\n\t      samePartsLength = i;\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var outputParts = [];\r\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n\t    outputParts.push('..');\r\n\t  }\r\n\t\r\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\t\r\n\t  return outputParts.join('/');\r\n\t};\r\n\t\r\n\t\r\n\tposix._makeLong = function(path) {\r\n\t  return path;\r\n\t};\r\n\t\r\n\t\r\n\tposix.dirname = function(path) {\r\n\t  var result = posixSplitPath(path),\r\n\t      root = result[0],\r\n\t      dir = result[1];\r\n\t\r\n\t  if (!root && !dir) {\r\n\t    // No dirname whatsoever\r\n\t    return '.';\r\n\t  }\r\n\t\r\n\t  if (dir) {\r\n\t    // It has a dirname, strip trailing slash\r\n\t    dir = dir.substr(0, dir.length - 1);\r\n\t  }\r\n\t\r\n\t  return root + dir;\r\n\t};\r\n\t\r\n\t\r\n\tposix.basename = function(path, ext) {\r\n\t  var f = posixSplitPath(path)[2];\r\n\t  // TODO: make this comparison case-insensitive on windows?\r\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\r\n\t    f = f.substr(0, f.length - ext.length);\r\n\t  }\r\n\t  return f;\r\n\t};\r\n\t\r\n\t\r\n\tposix.extname = function(path) {\r\n\t  return posixSplitPath(path)[3];\r\n\t};\r\n\t\r\n\t\r\n\tposix.format = function(pathObject) {\r\n\t  if (!util.isObject(pathObject)) {\r\n\t    throw new TypeError(\r\n\t        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n\t    );\r\n\t  }\r\n\t\r\n\t  var root = pathObject.root || '';\r\n\t\r\n\t  if (!util.isString(root)) {\r\n\t    throw new TypeError(\r\n\t        \"'pathObject.root' must be a string or undefined, not \" +\r\n\t        typeof pathObject.root\r\n\t    );\r\n\t  }\r\n\t\r\n\t  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';\r\n\t  var base = pathObject.base || '';\r\n\t  return dir + base;\r\n\t};\r\n\t\r\n\t\r\n\tposix.parse = function(pathString) {\r\n\t  if (!util.isString(pathString)) {\r\n\t    throw new TypeError(\r\n\t        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n\t    );\r\n\t  }\r\n\t  var allParts = posixSplitPath(pathString);\r\n\t  if (!allParts || allParts.length !== 4) {\r\n\t    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n\t  }\r\n\t  allParts[1] = allParts[1] || '';\r\n\t  allParts[2] = allParts[2] || '';\r\n\t  allParts[3] = allParts[3] || '';\r\n\t\r\n\t  return {\r\n\t    root: allParts[0],\r\n\t    dir: allParts[0] + allParts[1].slice(0, -1),\r\n\t    base: allParts[2],\r\n\t    ext: allParts[3],\r\n\t    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n\t  };\r\n\t};\r\n\t\r\n\t\r\n\tposix.sep = '/';\r\n\tposix.delimiter = ':';\r\n\t\r\n\t\r\n\tif (isWindows)\r\n\t  module.exports = win32;\r\n\telse /* posix */\r\n\t  module.exports = posix;\r\n\t\r\n\tmodule.exports.posix = posix;\r\n\tmodule.exports.win32 = win32;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar parseUri        = __webpack_require__(8);\n\tvar async           = __webpack_require__(10);\n\tvar Resource        = __webpack_require__(3);\n\tvar EventEmitter    = __webpack_require__(6);\n\t\n\t// some constants\n\tvar DEFAULT_CONCURRENCY = 10;\n\tvar MAX_PROGRESS = 100;\n\t\n\t/**\n\t * Manages the state and loading of multiple resources to load.\n\t *\n\t * @class\n\t * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n\t * @param {number} [concurrency=10] - The number of resources to load concurrently.\n\t */\n\tfunction Loader(baseUrl, concurrency) {\n\t    EventEmitter.call(this);\n\t\n\t    concurrency = concurrency || DEFAULT_CONCURRENCY;\n\t\n\t    /**\n\t     * The base url for all resources loaded by this loader.\n\t     *\n\t     * @member {string}\n\t     */\n\t    this.baseUrl = baseUrl || '';\n\t\n\t    /**\n\t     * The progress percent of the loader going through the queue.\n\t     *\n\t     * @member {number}\n\t     */\n\t    this.progress = 0;\n\t\n\t    /**\n\t     * Loading state of the loader, true if it is currently loading resources.\n\t     *\n\t     * @member {boolean}\n\t     */\n\t    this.loading = false;\n\t\n\t    /**\n\t     * The percentage of total progress that a single resource represents.\n\t     *\n\t     * @member {number}\n\t     */\n\t    this._progressChunk = 0;\n\t\n\t    /**\n\t     * The middleware to run before loading each resource.\n\t     *\n\t     * @member {function[]}\n\t     */\n\t    this._beforeMiddleware = [];\n\t\n\t    /**\n\t     * The middleware to run after loading each resource.\n\t     *\n\t     * @member {function[]}\n\t     */\n\t    this._afterMiddleware = [];\n\t\n\t    /**\n\t     * The `_loadResource` function bound with this object context.\n\t     *\n\t     * @private\n\t     * @member {function}\n\t     */\n\t    this._boundLoadResource = this._loadResource.bind(this);\n\t\n\t    /**\n\t     * The resource buffer that fills until `load` is called to start loading resources.\n\t     *\n\t     * @private\n\t     * @member {Resource[]}\n\t     */\n\t    this._buffer = [];\n\t\n\t    /**\n\t     * Used to track load completion.\n\t     *\n\t     * @private\n\t     * @member {number}\n\t     */\n\t    this._numToLoad = 0;\n\t\n\t    /**\n\t     * The resources waiting to be loaded.\n\t     *\n\t     * @private\n\t     * @member {Resource[]}\n\t     */\n\t    this._queue = async.queue(this._boundLoadResource, concurrency);\n\t\n\t    /**\n\t     * All the resources for this loader keyed by name.\n\t     *\n\t     * @member {object<string, Resource>}\n\t     */\n\t    this.resources = {};\n\t\n\t    /**\n\t     * Emitted once per loaded or errored resource.\n\t     *\n\t     * @event progress\n\t     * @memberof Loader#\n\t     */\n\t\n\t    /**\n\t     * Emitted once per errored resource.\n\t     *\n\t     * @event error\n\t     * @memberof Loader#\n\t     */\n\t\n\t    /**\n\t     * Emitted once per loaded resource.\n\t     *\n\t     * @event load\n\t     * @memberof Loader#\n\t     */\n\t\n\t    /**\n\t     * Emitted when the loader begins to process the queue.\n\t     *\n\t     * @event start\n\t     * @memberof Loader#\n\t     */\n\t\n\t    /**\n\t     * Emitted when the queued resources all load.\n\t     *\n\t     * @event complete\n\t     * @memberof Loader#\n\t     */\n\t}\n\t\n\tLoader.prototype = Object.create(EventEmitter.prototype);\n\tLoader.prototype.constructor = Loader;\n\tmodule.exports = Loader;\n\t\n\t/**\n\t * Adds a resource (or multiple resources) to the loader queue.\n\t *\n\t * This function can take a wide variety of different parameters. The only thing that is always\n\t * required the url to load. All the following will work:\n\t *\n\t * ```js\n\t * loader\n\t *     // normal param syntax\n\t *     .add('key', 'http://...', function () {})\n\t *     .add('http://...', function () {})\n\t *     .add('http://...')\n\t *\n\t *     // object syntax\n\t *     .add({\n\t *         name: 'key2',\n\t *         url: 'http://...'\n\t *     }, function () {})\n\t *     .add({\n\t *         url: 'http://...'\n\t *     }, function () {})\n\t *     .add({\n\t *         name: 'key3',\n\t *         url: 'http://...'\n\t *         onComplete: function () {}\n\t *     })\n\t *     .add({\n\t *         url: 'https://...',\n\t *         onComplete: function () {},\n\t *         crossOrigin: true\n\t *     })\n\t *\n\t *     // you can also pass an array of objects or urls or both\n\t *     .add([\n\t *         { name: 'key4', url: 'http://...', onComplete: function () {} },\n\t *         { url: 'http://...', onComplete: function () {} },\n\t *         'http://...'\n\t *     ])\n\t *\n\t *     // and you can use both params and options\n\t *     .add('key', 'http://...', { crossOrigin: true }, function () {})\n\t *     .add('http://...', { crossOrigin: true }, function () {});\n\t * ```\n\t *\n\t * @alias enqueue\n\t * @param {string} [name] - The name of the resource to load, if not passed the url is used.\n\t * @param {string} [url] - The url for this resource, relative to the baseUrl of this loader.\n\t * @param {object} [options] - The options for the load.\n\t * @param {boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n\t * @param {Resource.XHR_LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n\t * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n\t *      loaded be interpreted when using XHR?\n\t * @param {function} [cb] - Function to call when this specific resource completes loading.\n\t * @return {Loader} Returns itself.\n\t */\n\tLoader.prototype.add = Loader.prototype.enqueue = function (name, url, options, cb) {\n\t    // special case of an array of objects or urls\n\t    if (Array.isArray(name)) {\n\t        for (var i = 0; i < name.length; ++i) {\n\t            this.add(name[i]);\n\t        }\n\t\n\t        return this;\n\t    }\n\t\n\t    // if an object is passed instead of params\n\t    if (typeof name === 'object') {\n\t        cb = url || name.callback || name.onComplete;\n\t        options = name;\n\t        url = name.url;\n\t        name = name.name || name.key || name.url;\n\t    }\n\t\n\t    // case where no name is passed shift all args over by one.\n\t    if (typeof url !== 'string') {\n\t        cb = options;\n\t        options = url;\n\t        url = name;\n\t    }\n\t\n\t    // now that we shifted make sure we have a proper url.\n\t    if (typeof url !== 'string') {\n\t        throw new Error('No url passed to add resource to loader.');\n\t    }\n\t\n\t    // options are optional so people might pass a function and no options\n\t    if (typeof options === 'function') {\n\t        cb = options;\n\t        options = null;\n\t    }\n\t\n\t    // check if resource already exists.\n\t    if (this.resources[name]) {\n\t        throw new Error('Resource with name \"' + name + '\" already exists.');\n\t    }\n\t\n\t    // add base url if this isn't an absolute url\n\t    url = this._prepareUrl(url);\n\t\n\t    // create the store the resource\n\t    this.resources[name] = new Resource(name, url, options);\n\t\n\t    if (typeof cb === 'function') {\n\t        this.resources[name].once('afterMiddleware', cb);\n\t    }\n\t\n\t    this._numToLoad++;\n\t\n\t    // if already loading add it to the worker queue\n\t    if (this._queue.started) {\n\t        this._queue.push(this.resources[name]);\n\t        this._progressChunk = (MAX_PROGRESS - this.progress) / (this._queue.length() + this._queue.running());\n\t    }\n\t    // otherwise buffer it to be added to the queue later\n\t    else {\n\t        this._buffer.push(this.resources[name]);\n\t        this._progressChunk = MAX_PROGRESS / this._buffer.length;\n\t    }\n\t\n\t    return this;\n\t};\n\t\n\t/**\n\t * Sets up a middleware function that will run *before* the\n\t * resource is loaded.\n\t *\n\t * @alias pre\n\t * @method before\n\t * @param {function} fn - The middleware function to register.\n\t * @return {Loader} Returns itself.\n\t */\n\tLoader.prototype.before = Loader.prototype.pre = function (fn) {\n\t    this._beforeMiddleware.push(fn);\n\t\n\t    return this;\n\t};\n\t\n\t/**\n\t * Sets up a middleware function that will run *after* the\n\t * resource is loaded.\n\t *\n\t * @alias use\n\t * @method after\n\t * @param {function} fn - The middleware function to register.\n\t * @return {Loader} Returns itself.\n\t */\n\tLoader.prototype.after = Loader.prototype.use = function (fn) {\n\t    this._afterMiddleware.push(fn);\n\t\n\t    return this;\n\t};\n\t\n\t/**\n\t * Resets the queue of the loader to prepare for a new load.\n\t *\n\t * @return {Loader} Returns itself.\n\t */\n\tLoader.prototype.reset = function () {\n\t    // this.baseUrl = baseUrl || '';\n\t\n\t    this.progress = 0;\n\t\n\t    this.loading = false;\n\t\n\t    this._progressChunk = 0;\n\t\n\t    // this._beforeMiddleware.length = 0;\n\t    // this._afterMiddleware.length = 0;\n\t\n\t    this._buffer.length = 0;\n\t\n\t    this._numToLoad = 0;\n\t\n\t    this._queue.kill();\n\t    this._queue.started = false;\n\t\n\t    // abort all resource loads\n\t    for (var k in this.resources) {\n\t        var res = this.resources[k];\n\t\n\t        res.off('complete', this._onLoad, this);\n\t\n\t        if (res.isLoading) {\n\t            res.abort();\n\t        }\n\t    }\n\t\n\t    this.resources = {};\n\t\n\t    return this;\n\t};\n\t\n\t/**\n\t * Starts loading the queued resources.\n\t *\n\t * @fires start\n\t * @param {function} [cb] - Optional callback that will be bound to the `complete` event.\n\t * @return {Loader} Returns itself.\n\t */\n\tLoader.prototype.load = function (cb) {\n\t    // register complete callback if they pass one\n\t    if (typeof cb === 'function') {\n\t        this.once('complete', cb);\n\t    }\n\t\n\t    // if the queue has already started we are done here\n\t    if (this._queue.started) {\n\t        return this;\n\t    }\n\t\n\t    // notify of start\n\t    this.emit('start', this);\n\t\n\t    // update loading state\n\t    this.loading = true;\n\t\n\t    // start the internal queue\n\t    for (var i = 0; i < this._buffer.length; ++i) {\n\t        this._queue.push(this._buffer[i]);\n\t    }\n\t\n\t    // empty the buffer\n\t    this._buffer.length = 0;\n\t\n\t    return this;\n\t};\n\t\n\t/**\n\t * Prepares a url for usage based on the configuration of this object\n\t *\n\t * @private\n\t * @param {string} url - The url to prepare.\n\t * @return {string} The prepared url.\n\t */\n\tLoader.prototype._prepareUrl = function (url) {\n\t    var parsedUrl = parseUri(url, { strictMode: true });\n\t\n\t    // absolute url, just use it as is.\n\t    if (parsedUrl.protocol || !parsedUrl.path || parsedUrl.path.indexOf('//') === 0) {\n\t        return url;\n\t    }\n\t\n\t    // if baseUrl doesn't end in slash and url doesn't start with slash, then add a slash inbetween\n\t    if (this.baseUrl.length\n\t        && this.baseUrl.lastIndexOf('/') !== this.baseUrl.length - 1\n\t        && url.charAt(0) !== '/'\n\t    ) {\n\t        return this.baseUrl + '/' + url;\n\t    }\n\t\n\t    return this.baseUrl + url;\n\t};\n\t\n\t/**\n\t * Loads a single resource.\n\t *\n\t * @private\n\t * @param {Resource} resource - The resource to load.\n\t * @param {function} dequeue - The function to call when we need to dequeue this item.\n\t */\n\tLoader.prototype._loadResource = function (resource, dequeue) {\n\t    var self = this;\n\t\n\t    resource._dequeue = dequeue;\n\t\n\t    // run before middleware\n\t    async.eachSeries(\n\t        this._beforeMiddleware,\n\t        function (fn, next) {\n\t            fn.call(self, resource, function () {\n\t                // if the before middleware marks the resource as complete,\n\t                // break and don't process any more before middleware\n\t                next(resource.isComplete ? {} : null);\n\t            });\n\t        },\n\t        function () {\n\t            // resource.on('progress', self.emit.bind(self, 'progress'));\n\t\n\t            if (resource.isComplete) {\n\t                self._onLoad(resource);\n\t            }\n\t            else {\n\t                resource.once('complete', self._onLoad, self);\n\t                resource.load();\n\t            }\n\t        }\n\t    );\n\t};\n\t\n\t/**\n\t * Called once each resource has loaded.\n\t *\n\t * @fires complete\n\t * @private\n\t */\n\tLoader.prototype._onComplete = function () {\n\t    this.loading = false;\n\t\n\t    this.emit('complete', this, this.resources);\n\t};\n\t\n\t/**\n\t * Called each time a resources is loaded.\n\t *\n\t * @fires progress\n\t * @fires error\n\t * @fires load\n\t * @private\n\t * @param {Resource} resource - The resource that was loaded\n\t */\n\tLoader.prototype._onLoad = function (resource) {\n\t    var self = this;\n\t\n\t    // run middleware, this *must* happen before dequeue so sub-assets get added properly\n\t    async.eachSeries(\n\t        this._afterMiddleware,\n\t        function (fn, next) {\n\t            fn.call(self, resource, next);\n\t        },\n\t        function () {\n\t            resource.emit('afterMiddleware', resource);\n\t\n\t            self._numToLoad--;\n\t\n\t            self.progress += self._progressChunk;\n\t            self.emit('progress', self, resource);\n\t\n\t            if (resource.error) {\n\t                self.emit('error', resource.error, self, resource);\n\t            }\n\t            else {\n\t                self.emit('load', self, resource);\n\t            }\n\t\n\t            // do completion check\n\t            if (self._numToLoad === 0) {\n\t                self.progress = 100;\n\t                self._onComplete();\n\t            }\n\t        }\n\t    );\n\t\n\t    // remove this resource from the async queue\n\t    resource._dequeue();\n\t};\n\t\n\tLoader.LOAD_TYPE = Resource.LOAD_TYPE;\n\tLoader.XHR_RESPONSE_TYPE = Resource.XHR_RESPONSE_TYPE;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t/* eslint no-magic-numbers: 0 */\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    // private property\n\t    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t\n\t    encodeBinary: function (input) {\n\t        var output = '';\n\t        var bytebuffer;\n\t        var encodedCharIndexes = new Array(4);\n\t        var inx = 0;\n\t        var jnx = 0;\n\t        var paddingBytes = 0;\n\t\n\t        while (inx < input.length) {\n\t            // Fill byte buffer array\n\t            bytebuffer = new Array(3);\n\t\n\t            for (jnx = 0; jnx < bytebuffer.length; jnx++) {\n\t                if (inx < input.length) {\n\t                    // throw away high-order byte, as documented at:\n\t                    // https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data\n\t                    bytebuffer[jnx] = input.charCodeAt(inx++) & 0xff;\n\t                }\n\t                else {\n\t                    bytebuffer[jnx] = 0;\n\t                }\n\t            }\n\t\n\t            // Get each encoded character, 6 bits at a time\n\t            // index 1: first 6 bits\n\t            encodedCharIndexes[0] = bytebuffer[0] >> 2;\n\t            // index 2: second 6 bits (2 least significant bits from input byte 1 + 4 most significant bits from byte 2)\n\t            encodedCharIndexes[1] = ((bytebuffer[0] & 0x3) << 4) | (bytebuffer[1] >> 4);\n\t            // index 3: third 6 bits (4 least significant bits from input byte 2 + 2 most significant bits from byte 3)\n\t            encodedCharIndexes[2] = ((bytebuffer[1] & 0x0f) << 2) | (bytebuffer[2] >> 6);\n\t            // index 3: forth 6 bits (6 least significant bits from input byte 3)\n\t            encodedCharIndexes[3] = bytebuffer[2] & 0x3f;\n\t\n\t            // Determine whether padding happened, and adjust accordingly\n\t            paddingBytes = inx - (input.length - 1);\n\t            switch (paddingBytes) {\n\t                case 2:\n\t                    // Set last 2 characters to padding char\n\t                    encodedCharIndexes[3] = 64;\n\t                    encodedCharIndexes[2] = 64;\n\t                    break;\n\t\n\t                case 1:\n\t                    // Set last character to padding char\n\t                    encodedCharIndexes[3] = 64;\n\t                    break;\n\t\n\t                default:\n\t                    break; // No padding - proceed\n\t            }\n\t\n\t            // Now we will grab each appropriate character out of our keystring\n\t            // based on our index array and append it to the output string\n\t            for (jnx = 0; jnx < encodedCharIndexes.length; jnx++) {\n\t                output += this._keyStr.charAt(encodedCharIndexes[jnx]);\n\t            }\n\t        }\n\t\n\t        return output;\n\t    }\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* eslint global-require: 0 */\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(23);\n\tmodule.exports.Resource = __webpack_require__(3);\n\tmodule.exports.middleware = {\n\t    caching: {\n\t        memory: __webpack_require__(26)\n\t    },\n\t    parsing: {\n\t        blob: __webpack_require__(27)\n\t    }\n\t};\n\t\n\tmodule.exports.async = __webpack_require__(10);\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// a simple in-memory cache for resources\n\tvar cache = {};\n\t\n\tmodule.exports = function () {\n\t    return function (resource, next) {\n\t        // if cached, then set data and complete the resource\n\t        if (cache[resource.url]) {\n\t            resource.data = cache[resource.url];\n\t            resource.complete(); // marks resource load complete and stops processing before middlewares\n\t        }\n\t        // if not cached, wait for complete and store it in the cache.\n\t        else {\n\t            resource.once('complete', function () {\n\t                cache[this.url] = this.data;\n\t            });\n\t        }\n\t\n\t        next();\n\t    };\n\t};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Resource = __webpack_require__(3);\n\tvar b64 = __webpack_require__(24);\n\t\n\tvar Url = window.URL || window.webkitURL;\n\t\n\t// a middleware for transforming XHR loaded Blobs into more useful objects\n\t\n\tmodule.exports = function () {\n\t    return function (resource, next) {\n\t        if (!resource.data) {\n\t            next();\n\t\n\t            return;\n\t        }\n\t\n\t        // if this was an XHR load of a blob\n\t        if (resource.xhr && resource.xhrType === Resource.XHR_RESPONSE_TYPE.BLOB) {\n\t            // if there is no blob support we probably got a binary string back\n\t            if (!window.Blob || typeof resource.data === 'string') {\n\t                var type = resource.xhr.getResponseHeader('content-type');\n\t\n\t                // this is an image, convert the binary string into a data url\n\t                if (type && type.indexOf('image') === 0) {\n\t                    resource.data = new Image();\n\t                    resource.data.src = 'data:' + type + ';base64,' + b64.encodeBinary(resource.xhr.responseText);\n\t\n\t                    resource.isImage = true;\n\t\n\t                    // wait until the image loads and then callback\n\t                    resource.data.onload = function () {\n\t                        resource.data.onload = null;\n\t\n\t                        next();\n\t                    };\n\t\n\t                    // next will be called on load\n\t                    return;\n\t                }\n\t            }\n\t            // if content type says this is an image, then we should transform the blob into an Image object\n\t            else if (resource.data.type.indexOf('image') === 0) {\n\t                var src = Url.createObjectURL(resource.data);\n\t\n\t                resource.blob = resource.data;\n\t                resource.data = new Image();\n\t                resource.data.src = src;\n\t\n\t                resource.isImage = true;\n\t\n\t                // cleanup the no longer used blob after the image loads\n\t                resource.data.onload = function () {\n\t                    Url.revokeObjectURL(src);\n\t                    resource.data.onload = null;\n\t\n\t                    next();\n\t                };\n\t\n\t                // next will be called on load.\n\t                return;\n\t            }\n\t        }\n\t\n\t        next();\n\t    };\n\t};\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n\t/*global define:false, require:false, exports:false, module:false, signals:false */\n\t\n\t/** @license\n\t * JS Signals <http://millermedeiros.github.com/js-signals/>\n\t * Released under the MIT license\n\t * Author: Miller Medeiros\n\t * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n\t */\n\t\n\t(function(global){\n\t\n\t    // SignalBinding -------------------------------------------------\n\t    //================================================================\n\t\n\t    /**\n\t     * Object that represents a binding between a Signal and a listener function.\n\t     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n\t     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n\t     * @author Miller Medeiros\n\t     * @constructor\n\t     * @internal\n\t     * @name SignalBinding\n\t     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n\t     * @param {Function} listener Handler function bound to the signal.\n\t     * @param {boolean} isOnce If binding should be executed just once.\n\t     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n\t     */\n\t    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\t\n\t        /**\n\t         * Handler function bound to the signal.\n\t         * @type Function\n\t         * @private\n\t         */\n\t        this._listener = listener;\n\t\n\t        /**\n\t         * If binding should be executed just once.\n\t         * @type boolean\n\t         * @private\n\t         */\n\t        this._isOnce = isOnce;\n\t\n\t        /**\n\t         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @memberOf SignalBinding.prototype\n\t         * @name context\n\t         * @type Object|undefined|null\n\t         */\n\t        this.context = listenerContext;\n\t\n\t        /**\n\t         * Reference to Signal object that listener is currently bound to.\n\t         * @type Signal\n\t         * @private\n\t         */\n\t        this._signal = signal;\n\t\n\t        /**\n\t         * Listener priority\n\t         * @type Number\n\t         * @private\n\t         */\n\t        this._priority = priority || 0;\n\t    }\n\t\n\t    SignalBinding.prototype = {\n\t\n\t        /**\n\t         * If binding is active and should be executed.\n\t         * @type boolean\n\t         */\n\t        active : true,\n\t\n\t        /**\n\t         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n\t         * @type Array|null\n\t         */\n\t        params : null,\n\t\n\t        /**\n\t         * Call listener passing arbitrary parameters.\n\t         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n\t         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n\t         * @return {*} Value returned by the listener.\n\t         */\n\t        execute : function (paramsArr) {\n\t            var handlerReturn, params;\n\t            if (this.active && !!this._listener) {\n\t                params = this.params? this.params.concat(paramsArr) : paramsArr;\n\t                handlerReturn = this._listener.apply(this.context, params);\n\t                if (this._isOnce) {\n\t                    this.detach();\n\t                }\n\t            }\n\t            return handlerReturn;\n\t        },\n\t\n\t        /**\n\t         * Detach binding from signal.\n\t         * - alias to: mySignal.remove(myBinding.getListener());\n\t         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n\t         */\n\t        detach : function () {\n\t            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n\t        },\n\t\n\t        /**\n\t         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n\t         */\n\t        isBound : function () {\n\t            return (!!this._signal && !!this._listener);\n\t        },\n\t\n\t        /**\n\t         * @return {boolean} If SignalBinding will only be executed once.\n\t         */\n\t        isOnce : function () {\n\t            return this._isOnce;\n\t        },\n\t\n\t        /**\n\t         * @return {Function} Handler function bound to the signal.\n\t         */\n\t        getListener : function () {\n\t            return this._listener;\n\t        },\n\t\n\t        /**\n\t         * @return {Signal} Signal that listener is currently bound to.\n\t         */\n\t        getSignal : function () {\n\t            return this._signal;\n\t        },\n\t\n\t        /**\n\t         * Delete instance properties\n\t         * @private\n\t         */\n\t        _destroy : function () {\n\t            delete this._signal;\n\t            delete this._listener;\n\t            delete this.context;\n\t        },\n\t\n\t        /**\n\t         * @return {string} String representation of the object.\n\t         */\n\t        toString : function () {\n\t            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n\t        }\n\t\n\t    };\n\t\n\t\n\t/*global SignalBinding:false*/\n\t\n\t    // Signal --------------------------------------------------------\n\t    //================================================================\n\t\n\t    function validateListener(listener, fnName) {\n\t        if (typeof listener !== 'function') {\n\t            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Custom event broadcaster\n\t     * <br />- inspired by Robert Penner's AS3 Signals.\n\t     * @name Signal\n\t     * @author Miller Medeiros\n\t     * @constructor\n\t     */\n\t    function Signal() {\n\t        /**\n\t         * @type Array.<SignalBinding>\n\t         * @private\n\t         */\n\t        this._bindings = [];\n\t        this._prevParams = null;\n\t\n\t        // enforce dispatch to aways work on same context (#47)\n\t        var self = this;\n\t        this.dispatch = function(){\n\t            Signal.prototype.dispatch.apply(self, arguments);\n\t        };\n\t    }\n\t\n\t    Signal.prototype = {\n\t\n\t        /**\n\t         * Signals Version Number\n\t         * @type String\n\t         * @const\n\t         */\n\t        VERSION : '1.0.0',\n\t\n\t        /**\n\t         * If Signal should keep record of previously dispatched parameters and\n\t         * automatically execute listener during `add()`/`addOnce()` if Signal was\n\t         * already dispatched before.\n\t         * @type boolean\n\t         */\n\t        memorize : false,\n\t\n\t        /**\n\t         * @type boolean\n\t         * @private\n\t         */\n\t        _shouldPropagate : true,\n\t\n\t        /**\n\t         * If Signal is active and should broadcast events.\n\t         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n\t         * @type boolean\n\t         */\n\t        active : true,\n\t\n\t        /**\n\t         * @param {Function} listener\n\t         * @param {boolean} isOnce\n\t         * @param {Object} [listenerContext]\n\t         * @param {Number} [priority]\n\t         * @return {SignalBinding}\n\t         * @private\n\t         */\n\t        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\t\n\t            var prevIndex = this._indexOfListener(listener, listenerContext),\n\t                binding;\n\t\n\t            if (prevIndex !== -1) {\n\t                binding = this._bindings[prevIndex];\n\t                if (binding.isOnce() !== isOnce) {\n\t                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n\t                }\n\t            } else {\n\t                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n\t                this._addBinding(binding);\n\t            }\n\t\n\t            if(this.memorize && this._prevParams){\n\t                binding.execute(this._prevParams);\n\t            }\n\t\n\t            return binding;\n\t        },\n\t\n\t        /**\n\t         * @param {SignalBinding} binding\n\t         * @private\n\t         */\n\t        _addBinding : function (binding) {\n\t            //simplified insertion sort\n\t            var n = this._bindings.length;\n\t            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n\t            this._bindings.splice(n + 1, 0, binding);\n\t        },\n\t\n\t        /**\n\t         * @param {Function} listener\n\t         * @return {number}\n\t         * @private\n\t         */\n\t        _indexOfListener : function (listener, context) {\n\t            var n = this._bindings.length,\n\t                cur;\n\t            while (n--) {\n\t                cur = this._bindings[n];\n\t                if (cur._listener === listener && cur.context === context) {\n\t                    return n;\n\t                }\n\t            }\n\t            return -1;\n\t        },\n\t\n\t        /**\n\t         * Check if listener was attached to Signal.\n\t         * @param {Function} listener\n\t         * @param {Object} [context]\n\t         * @return {boolean} if Signal has the specified listener.\n\t         */\n\t        has : function (listener, context) {\n\t            return this._indexOfListener(listener, context) !== -1;\n\t        },\n\t\n\t        /**\n\t         * Add a listener to the signal.\n\t         * @param {Function} listener Signal handler function.\n\t         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n\t         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n\t         */\n\t        add : function (listener, listenerContext, priority) {\n\t            validateListener(listener, 'add');\n\t            return this._registerListener(listener, false, listenerContext, priority);\n\t        },\n\t\n\t        /**\n\t         * Add listener to the signal that should be removed after first execution (will be executed only once).\n\t         * @param {Function} listener Signal handler function.\n\t         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n\t         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n\t         */\n\t        addOnce : function (listener, listenerContext, priority) {\n\t            validateListener(listener, 'addOnce');\n\t            return this._registerListener(listener, true, listenerContext, priority);\n\t        },\n\t\n\t        /**\n\t         * Remove a single listener from the dispatch queue.\n\t         * @param {Function} listener Handler function that should be removed.\n\t         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n\t         * @return {Function} Listener handler function.\n\t         */\n\t        remove : function (listener, context) {\n\t            validateListener(listener, 'remove');\n\t\n\t            var i = this._indexOfListener(listener, context);\n\t            if (i !== -1) {\n\t                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n\t                this._bindings.splice(i, 1);\n\t            }\n\t            return listener;\n\t        },\n\t\n\t        /**\n\t         * Remove all listeners from the Signal.\n\t         */\n\t        removeAll : function () {\n\t            var n = this._bindings.length;\n\t            while (n--) {\n\t                this._bindings[n]._destroy();\n\t            }\n\t            this._bindings.length = 0;\n\t        },\n\t\n\t        /**\n\t         * @return {number} Number of listeners attached to the Signal.\n\t         */\n\t        getNumListeners : function () {\n\t            return this._bindings.length;\n\t        },\n\t\n\t        /**\n\t         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n\t         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n\t         * @see Signal.prototype.disable\n\t         */\n\t        halt : function () {\n\t            this._shouldPropagate = false;\n\t        },\n\t\n\t        /**\n\t         * Dispatch/Broadcast Signal to all listeners added to the queue.\n\t         * @param {...*} [params] Parameters that should be passed to each handler.\n\t         */\n\t        dispatch : function (params) {\n\t            if (! this.active) {\n\t                return;\n\t            }\n\t\n\t            var paramsArr = Array.prototype.slice.call(arguments),\n\t                n = this._bindings.length,\n\t                bindings;\n\t\n\t            if (this.memorize) {\n\t                this._prevParams = paramsArr;\n\t            }\n\t\n\t            if (! n) {\n\t                //should come after memorize\n\t                return;\n\t            }\n\t\n\t            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n\t            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\t\n\t            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n\t            //reverse loop since listeners with higher priority will be added at the end of the list\n\t            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n\t        },\n\t\n\t        /**\n\t         * Forget memorized arguments.\n\t         * @see Signal.memorize\n\t         */\n\t        forget : function(){\n\t            this._prevParams = null;\n\t        },\n\t\n\t        /**\n\t         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n\t         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n\t         */\n\t        dispose : function () {\n\t            this.removeAll();\n\t            delete this._bindings;\n\t            delete this._prevParams;\n\t        },\n\t\n\t        /**\n\t         * @return {string} String representation of the object.\n\t         */\n\t        toString : function () {\n\t            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n\t        }\n\t\n\t    };\n\t\n\t\n\t    // Namespace -----------------------------------------------------\n\t    //================================================================\n\t\n\t    /**\n\t     * Signals namespace\n\t     * @namespace\n\t     * @name signals\n\t     */\n\t    var signals = Signal;\n\t\n\t    /**\n\t     * Custom event broadcaster\n\t     * @see Signal\n\t     */\n\t    // alias for backwards compatibility (see #gh-44)\n\t    signals.Signal = Signal;\n\t\n\t\n\t\n\t    //exports to multiple environments\n\t    if(true){ //AMD\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return signals; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module !== 'undefined' && module.exports){ //node\n\t        module.exports = signals;\n\t    } else { //browser\n\t        //use string because of Google closure compiler ADVANCED_MODE\n\t        /*jslint sub:true */\n\t        global['signals'] = signals;\n\t    }\n\t\n\t}(this));\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(30);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(29);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(9)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"default\":[\"image/./crate.gif\",\"image/./earth-specular.gif\",\"image/./earth.jpg\",\"image/./glass.gif\",\"image/./nehe.gif\"]}\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n\\n\\nuniform sampler2D uTexture;\\nuniform sampler2D uTextureSpecular;\\nuniform float uAlpha;\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec3 vNormal;\\n\\n\\nuniform vec3 uAmbientColor;\\nuniform vec3 uPointLightingLocation;\\nuniform vec3 uPointLightingSpecularColor;\\nuniform vec3 uPointLightingDiffuseColor;\\nuniform float uMaterialShininess;\\n\\nvoid main(void) {\\n\\n\\tfloat shininess = texture2D(uTextureSpecular, vec2(vUv.s, vUv.t)).r * 255.0;\\n\\n\\n\\tvec4 textureColor = texture2D(uTexture, vec2(vUv.s, vUv.t));\\n\\n\\tvec3 lightDirection = normalize(uPointLightingLocation - vPos.xyz);\\n    float directionalLightWeighting = max(dot(normalize(vNormal), lightDirection), 0.0);\\n\\n\\tvec3 normal = normalize(vNormal);\\n\\n\\tfloat specularLightWeighting = 0.;\\n\\n\\tif (shininess < 255.0)\\n\\t{\\n\\t\\tvec3 eyeDirection = normalize(-vPos.xyz);\\n\\t\\tvec3 reflectionDirection = reflect(-lightDirection, normal);\\n\\t\\tspecularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), 0.);\\n\\n        specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\\n    }\\n\\n\\n\\tfloat diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);\\n\\n\\tvec3 lightWeighting = uAmbientColor\\n        + uPointLightingSpecularColor * specularLightWeighting;\\n        + uPointLightingDiffuseColor * diffuseLightWeighting;\\n\\n\\t// gl_FragColor = vec4(textureColor.rgb * lightWeighting, textureColor.a);\\n\\t// gl_FragColor.rgb *= specularLightWeighting;\\n\\tgl_FragColor = vec4(textureColor.rgb * lightWeighting, textureColor.a * uAlpha);\\n\\tgl_FragColor.rgb *= uAlpha;\\n}\\n\"\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"\\nattribute vec3 aPosition;\\nattribute vec2 aUv;\\nattribute vec3 aNormal;\\n\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat3 normalMatrix;\\n\\nvarying vec3 vPos;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvUv = aUv;\\n\\n\\tvec3 transformedNormal = aNormal * normalMatrix;\\n\\tvNormal = transformedNormal;\\n\\tvec4 mvPosition =  viewMatrix * modelMatrix * vec4(aPosition, 1.0);\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\"\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision highp float;\\n\\n\\nvarying vec3 vPos;\\n\\n\\nvoid main(void) {\\n\\n\\t gl_FragColor = vec4(1.);\\n\\t}\\n\"\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"\\nattribute vec3 aPosition;\\n\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat3 normalMatrix;\\n\\nvarying vec3 vPos;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvec4 mvPosition =  viewMatrix * modelMatrix * vec4(aPosition, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\"\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n\\nvoid main() {\\n\\n    gl_FragColor = vec4( 1., 1., 1., .8 );\\n    gl_FragColor.rgb *= .8;\\n}\"\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n// attribute vec3 aPosition;\\n// attribute vec2 aUv;\\n\\n// uniform mat4 projectionMatrix;\\n// uniform mat4 modelMatrix;\\n// uniform mat4 viewMatrix;\\n\\n// uniform sampler2D positions;\\n// uniform float pointSize;\\n\\n// void main() {\\n//     vec3 pos = texture2D( positions, aPosition.xy ).xyz;\\n//     //pos now contains a 3D position in space, we can use it as a regular vertex\\n\\n//     //regular projection of our position\\n//     gl_Position = projectionMatrix * modelMatrix * viewMatrix * vec4( pos, 1.0 );\\n\\n//     //sets the point size\\n//     gl_PointSize = pointSize;\\n// }\\n\\nattribute vec3 aPosition;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\n\\nuniform float pointSize;\\n\\nuniform sampler2D positions;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n\\t// vec3 pos = aPosition;\\n\\tvec3 pos = texture2D( positions, aPosition.xy ).xyz;\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( pos, 1.0 );\\n\\n    gl_PointSize = pointSize;\\n}\\n\"\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n\\nuniform sampler2D uPositionsTexture;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n \\n    //basic simulation: displays the particles in place.\\n    vec3 pos = texture2D( uPositionsTexture, vUv ).rgb;\\n    /*\\n        we can move the particle here \\n    */\\n    gl_FragColor = vec4( pos,1.0 );\\n}\"\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\nattribute vec3 aPosition;\\nattribute vec2 aUv;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n    vUv = vec2(aUv.x, aUv.y);\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( aPosition, 1.0 );\\n}\"\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n\\nuniform sampler2D uTexture;\\n\\nvarying vec3 vPos;\\nvarying vec2 vUv;\\n\\nvoid main(void) {\\n\\n\\tvec4 textureColor = texture2D(uTexture, vec2(vPos.s, vPos.t));\\n\\tgl_FragColor = vec4(textureColor.rgb, 1.0);\\n}\"\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"precision mediump float;\\n\\nattribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aUv;\\n\\nvarying vec3 vPos;\\nvarying vec2 vUv;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvec3 n = aNormal;\\n\\tvUv = aUv;\\n    gl_Position = vec4(aPosition, 1.0);\\n}\"\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _GLExtensions = __webpack_require__(11);\n\t\n\tvar _GLExtensions2 = _interopRequireDefault(_GLExtensions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FrameBuffer = function () {\n\t    function FrameBuffer() {\n\t        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;\n\t        var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 512;\n\t        var texture = arguments[2];\n\t\n\t        _classCallCheck(this, FrameBuffer);\n\t\n\t        this.gl = POLY.gl;\n\t        var gl = this.gl;\n\t\n\t        this.width = width;\n\t        this.height = height;\n\t\n\t        /*\n\t         CREATE FRAME BUFFER AND SET UP ALL OF ITS MEMORY\n\t        */\n\t\n\t        var floatTextures = _GLExtensions2.default.getExtension('OES_texture_float');\n\t\n\t        if (!_GLExtensions2.default.getExtension(\"OES_texture_float\")) {\n\t            throw new Error(\"float textures not supported\");\n\t        }\n\t\n\t        var halfFloat = _GLExtensions2.default.getExtension(\"OES_texture_half_float\");\n\t        var type = gl.UNSIGNED_BYTE;\n\t        var extHalfFloat = _GLExtensions2.default.getExtension('OES_texture_half_float');\n\t        _GLExtensions2.default.getExtension(\"OES_texture_float_linear\");\n\t\n\t        if (_GLExtensions2.default.checkExtension('OES_texture_float')) {\n\t            type = gl.FLOAT;\n\t        } else if (extHalfFloat) {\n\t            type = extHalfFloat.HALF_FLOAT_OES;\n\t        }\n\t\n\t        // if (mcgl.GL.isMobile && type === gl.FLOAT && extHalfFloat) {\n\t        //     type = extHalfFloat.HALF_FLOAT_OES;\n\t        // }\n\t\n\t        this.textures = [];\n\t        // create frame buffer and bind it\n\t        this.framebuffer = gl.createFramebuffer();\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\n\t        // create an empty texture which can store the colour values\n\t\n\t        this.texture = gl.createTexture();\n\t        this.gltexture = new POLY.Texture(this.texture, true);\n\t        this.textures.push(this.gltexture);\n\t\n\t        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t        gl.generateMipmap(gl.TEXTURE_2D);\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, this.width, this.height, 0, gl.RGB, type, null);\n\t\n\t        // create a renderbuffer (buffer associated to a frame buffer object), this one for the depth!\n\t        var renderBufferDepth = gl.createRenderbuffer();\n\t        gl.bindRenderbuffer(gl.RENDERBUFFER, renderBufferDepth);\n\t        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\t\n\t        // attach everything to the current frame buffer\n\t        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n\t        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBufferDepth);\n\t\n\t        this.clean();\n\t    }\n\t\n\t    FrameBuffer.prototype.bind = function bind() {\n\t        var gl = this.gl;\n\t        gl.viewport(0, 0, this.width, this.height);\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t    };\n\t\n\t    FrameBuffer.prototype.unbind = function unbind() {\n\t        var gl = this.gl;\n\t\n\t        gl.bindTexture(gl.TEXTURE_2D, this.gltexture._texture);\n\t        gl.generateMipmap(gl.TEXTURE_2D);\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\n\t\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\t    };\n\t\n\t    FrameBuffer.prototype.clean = function clean() {\n\t        var gl = this.gl;\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\n\t        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t    };\n\t\n\t    FrameBuffer.prototype.clear = function clear() {\n\t        this.bind();\n\t        this.gl.clear(0, 0, 0, 0);\n\t        this.unbind();\n\t    };\n\t\n\t    return FrameBuffer;\n\t}();\n\t\n\texports.default = FrameBuffer;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _State = __webpack_require__(4);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tvar _GLExtensions = __webpack_require__(11);\n\t\n\tvar _GLExtensions2 = _interopRequireDefault(_GLExtensions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\texports.default = new (function () {\n\t\tfunction GLTool() {\n\t\t\t_classCallCheck(this, GLTool);\n\t\n\t\t\tthis._lastMesh = null;\n\t\t\tthis._lastProgram = null;\n\t\t\tthis.aspectRatio = 0;\n\t\t\tthis.state = null;\n\t\t\tthis.enabledVertexAttributes = [];\n\t\t}\n\t\n\t\tGLTool.prototype.init = function init(gl) {\n\t\t\tthis.state = new _State2.default(gl);\n\t\t\t_GLExtensions2.default.init();\n\t\t};\n\t\n\t\tGLTool.prototype._bindBuffers = function _bindBuffers(mesh) {\n\t\t\tvar gl = mesh.program.gl;\n\t\n\t\t\tfor (var i = 0; i < mesh._attributes.length; i++) {\n\t\t\t\tvar attrib = mesh._attributes[i];\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n\t\t\t\tvar attribLocation = mesh.program.getAttributeLocation(attrib.name);\n\t\n\t\t\t\tgl.vertexAttribPointer(attribLocation, attrib.itemSize, gl.FLOAT, false, 0, 0);\n\t\n\t\t\t\t// if(this.enabledVertexAttributes.indexOf(attribLocation) === -1)\n\t\t\t\t// {\n\t\t\t\tthis.enabledVertexAttributes.push(attribLocation);\n\t\t\t\tgl.enableVertexAttribArray(attribLocation); // NEVER FORGET THAT LINE (I did...)\n\t\t\t\t// }\n\t\t\t}\n\t\n\t\t\tif (mesh.indexBuffer) {\n\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexBuffer);\n\t\t\t}\n\t\t};\n\t\n\t\tGLTool.prototype.draw = function draw(mesh) {\n\t\t\tif (this._lastMesh !== mesh) {\n\t\t\t\tthis._bindBuffers(mesh);\n\t\t\t\tthis._lastMesh = mesh;\n\t\t\t}\n\t\n\t\t\tif (this._lastProgram !== mesh.program) {\n\t\t\t\tthis._lastProgram = mesh.program;\n\t\t\t}\n\t\n\t\t\tmesh.update();\n\t\t\tvar gl = mesh.program.gl;\n\t\n\t\t\tif (mesh.state) {\n\t\t\t\tthis.state.setState(mesh.state);\n\t\t\t}\n\t\n\t\t\tif (mesh.indexBuffer) {\n\t\t\t\tgl.drawElements(mesh.drawType, mesh._indices.length, gl.UNSIGNED_SHORT, 0);\n\t\t\t} else {\n\t\t\t\tgl.drawArrays(mesh.drawType, 0, mesh._numItems);\n\t\t\t}\n\t\t};\n\t\n\t\tGLTool.prototype.resize = function resize(w, h) {\n\t\t\tvar gl = POLY.gl;\n\t\t\tgl.canvas.width = w;\n\t\t\tgl.canvas.height = h;\n\t\n\t\t\tgl.viewportWidth = w;\n\t\t\tgl.viewportHeight = h;\n\t\t\tgl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\t\n\t\t\tthis.aspectRatio = w / h;\n\t\t};\n\t\n\t\treturn GLTool;\n\t}())();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Program = function () {\n\t    function Program(vertShader, fragShader) {\n\t        var uniforms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t        _classCallCheck(this, Program);\n\t\n\t        var gl = POLY.gl; // not sure that's great... :p\n\t        this.gl = gl;\n\t        // cache the locations of attributes and uniforms\n\t        this.cacheAttributesLocation = {};\n\t        this.cacheUniformsLocation = {};\n\t\n\t        // create the program itself\n\t        this.program = gl.createProgram();\n\t\n\t        var vert = this._createShader(vertShader, true);\n\t        var frag = this._createShader(fragShader, false);\n\t        this._attachShaders(vert, frag);\n\t\n\t        gl.linkProgram(this.program);\n\t\n\t        // check for errors\n\t        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n\t            throw \"Couldn't initialise program\";\n\t        }\n\t\n\t        gl.useProgram(this.program);\n\t\n\t        this._createGetterSetterUniforms(uniforms);\n\t        for (var uniform in uniforms) {\n\t            this.addUniformLocation(uniform);\n\t            var v = uniforms[uniform].value;\n\t            this.uniforms[uniform] = v;\n\t        }\n\t\n\t        this.bind();\n\t    }\n\t\n\t    Program.prototype.bind = function bind() {\n\t        this.gl.useProgram(this.program);\n\t    };\n\t\n\t    Program.prototype.addUniformLocation = function addUniformLocation(name) {\n\t        this.cacheUniformsLocation[name] = this.gl.getUniformLocation(this.program, name);\n\t    };\n\t\n\t    Program.prototype.getUniformLocation = function getUniformLocation(name) {\n\t        if (this.cacheUniformsLocation[name] !== undefined) {\n\t            return this.cacheUniformsLocation[name];\n\t        } else {\n\t            this.addUniformLocation(name);\n\t\n\t            return this.getUniformLocation(name);\n\t        }\n\t    };\n\t\n\t    // create a this.uniforms property\n\t    // useful for the setter, we can just update the uniform when it gets changed\n\t\n\t\n\t    Program.prototype._createGetterSetterUniforms = function _createGetterSetterUniforms(uniforms) {\n\t        var gl = this.gl;\n\t        var program = this.program;\n\t        var _this = this;\n\t\n\t        this.uniforms = new Proxy(uniforms, {\n\t            get: function get(target, name) {\n\t                if (!(name in target)) {\n\t                    console.log(\"Getting non-existant property '\" + name + \"'\");\n\t                    return undefined;\n\t                }\n\t\n\t                return target[name].value;\n\t            },\n\t            set: function set(target, name, value) {\n\t                if (!(name in target)) {\n\t                    console.log(\"Setting non-existant property '\" + name + \"', initial value: \" + value);\n\t\n\t                    return false;\n\t                }\n\t\n\t                // /!\\ TODO check Wen's GLShader.uniform() when it's not a number, seems more optimised\n\t                target[name].value = value;\n\t                var type = target[name].type;\n\t                var glFunction = POLY.CONST.uniformTypes[type];\n\t\n\t                if (type.indexOf('mat') === -1) {\n\t                    if (type === 'texture') {\n\t                        gl[glFunction](_this.getUniformLocation(name), value, target[name].index);\n\t                    } else {\n\t                        gl[glFunction](_this.getUniformLocation(name), value);\n\t                    }\n\t                } else {\n\t                    gl[glFunction](_this.getUniformLocation(name), false, value);\n\t                }\n\t\n\t                return true;\n\t            }\n\t        });\n\t    };\n\t\n\t    Program.prototype.addAttributeLocation = function addAttributeLocation(name) {\n\t\n\t        //     if(shaderProgram.cacheAttribLoc === undefined) {\tshaderProgram.cacheAttribLoc = {};\t}\n\t        // if(shaderProgram.cacheAttribLoc[name] === undefined) {\n\t        // \tshaderProgram.cacheAttribLoc[name] = gl.getAttribLocation(shaderProgram, name);\n\t        // }\n\t        //\n\t        // return shaderProgram.cacheAttribLoc[name];\n\t        // console.log(this.cacheAttributesLocation[name], name);\n\t\n\t        if (this.cacheAttributesLocation[name] === undefined) {\n\t            this.cacheAttributesLocation[name] = this.gl.getAttribLocation(this.program, name);\n\t        }\n\t    };\n\t\n\t    Program.prototype.getAttributeLocation = function getAttributeLocation(name) {\n\t        if (this.cacheAttributesLocation[name] !== undefined) {\n\t            return this.cacheAttributesLocation[name];\n\t        } else {\n\t            this.addAttributeLocation(name);\n\t\n\t            return this.getAttributeLocation(name);\n\t        }\n\t    };\n\t\n\t    Program.prototype._attachShaders = function _attachShaders(vert, frag) {\n\t        this.gl.attachShader(this.program, vert);\n\t        this.gl.attachShader(this.program, frag);\n\t    };\n\t\n\t    Program.prototype._createShader = function _createShader(src, isVertex) {\n\t        var gl = this.gl;\n\t        var shader = void 0;\n\t        if (isVertex) {\n\t            shader = gl.createShader(gl.VERTEX_SHADER);\n\t        } else {\n\t            shader = gl.createShader(gl.FRAGMENT_SHADER);\n\t        }\n\t\n\t        this.gl.shaderSource(shader, src);\n\t        this.gl.compileShader(shader);\n\t\n\t        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t            throw \"Couldn't initialise shader, \", gl.getShaderInfoLog(shader);\n\t            return null;\n\t        }\n\t\n\t        return shader;\n\t    };\n\t\n\t    return Program;\n\t}();\n\t\n\texports.default = Program;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _glMatrix = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Camera = function () {\n\t    function Camera() {\n\t        _classCallCheck(this, Camera);\n\t\n\t        this.aspectRatio = _glMatrix.mat4.create();\n\t\n\t        this.matrix = _glMatrix.mat4.create(); // changes on the camera\n\t        this.viewMatrix = _glMatrix.mat4.create(); // move the world in front of the camera (inverse)\n\t        this.projectionMatrix = _glMatrix.mat4.create();\n\t\n\t        this.mRX = _glMatrix.mat4.create();\n\t        this.mRY = _glMatrix.mat4.create();\n\t        this.mRZ = _glMatrix.mat4.create();\n\t        this.mT = _glMatrix.mat4.create();\n\t\n\t        this.position = _glMatrix.vec3.create();\n\t    }\n\t\n\t    Camera.prototype.lookAt = function lookAt(target) {\n\t        var up = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1, 0];\n\t\n\t        _glMatrix.mat4.lookAt(this.matrix, this.position, target, up);\n\t    };\n\t\n\t    Camera.prototype.rotateY = function rotateY(angle) {\n\t        _glMatrix.mat4.fromYRotation(this.mRY, angle);\n\t    };\n\t\n\t    Camera.prototype.rotateX = function rotateX(angle) {\n\t        _glMatrix.mat4.identity(this.mRX);\n\t        _glMatrix.mat4.fromXRotation(this.mRX, angle);\n\t    };\n\t\n\t    Camera.prototype.rotateZ = function rotateZ(angle) {\n\t        _glMatrix.mat4.identity(this.mRZ);\n\t        _glMatrix.mat4.fromXRotation(this.mRZ, angle);\n\t    };\n\t\n\t    Camera.prototype.setRotation = function setRotation(x, y, z) {};\n\t\n\t    Camera.prototype.setPosition = function setPosition(x, y, z) {\n\t        this.position = [x, y, z];\n\t        _glMatrix.mat4.identity(this.mT, this.mT);\n\t        _glMatrix.mat4.translate(this.mT, this.mT, [x, y, z]);\n\t    };\n\t\n\t    Camera.prototype.setAspectRatio = function setAspectRatio(aspectRatio) {\n\t        this.aspectRatio = aspectRatio;\n\t        this.perspective(this.fov, aspectRatio, this.near, this.far);\n\t    };\n\t\n\t    Camera.prototype.perspective = function perspective(fov, aspect, near, far) {\n\t        _glMatrix.mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n\t\n\t        this.fov = fov;\n\t        this.near = near;\n\t        this.far = far;\n\t        this.aspect = aspect;\n\t    };\n\t\n\t    Camera.prototype.orthographic = function orthographic(left, right, bottom, top, near, far, dst) {\n\t        dst = dst || new Float32Array(16);\n\t\n\t        dst[0] = 2 / (right - left);\n\t        dst[1] = 0;\n\t        dst[2] = 0;\n\t        dst[3] = 0;\n\t        dst[4] = 0;\n\t        dst[5] = 2 / (top - bottom);\n\t        dst[6] = 0;\n\t        dst[7] = 0;\n\t        dst[8] = 0;\n\t        dst[9] = 0;\n\t        dst[10] = 2 / (near - far);\n\t        dst[11] = 0;\n\t        dst[12] = (left + right) / (left - right);\n\t        dst[13] = (bottom + top) / (bottom - top);\n\t        dst[14] = (near + far) / (near - far);\n\t        dst[15] = 1;\n\t\n\t        return dst;\n\t    };\n\t\n\t    return Camera;\n\t}();\n\t\n\texports.default = Camera;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Camera = __webpack_require__(46);\n\t\n\tvar _Camera2 = _interopRequireDefault(_Camera);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tPerspectiveCamera: _Camera2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _glMatrix = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // https://github.com/yiwenl\n\t\n\tvar getCursorPos = function getCursorPos(e) {\n\t    if (e.touches) {\n\t        return {\n\t            x: e.touches[0].pageX,\n\t            y: e.touches[0].pageY\n\t        };\n\t    } else {\n\t        return {\n\t            x: e.clientX,\n\t            y: e.clientY\n\t        };\n\t    }\n\t};\n\t\n\tvar UP = _glMatrix.vec3.fromValues(0, 1, 0);\n\tvar ANGLE_LIMIT = Math.PI / 2 - 0.01;\n\t\n\tvar OrbitalCameraControl = function () {\n\t    function OrbitalCameraControl(mViewMatrix) {\n\t        var mRadius = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\t        var mListenerTarget = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n\t\n\t        _classCallCheck(this, OrbitalCameraControl);\n\t\n\t        this._mtxTarget = mViewMatrix;\n\t        this._radius = mRadius;\n\t        this._targetRadius = mRadius;\n\t        this._listenerTarget = mListenerTarget;\n\t        this._isDown = false;\n\t        this._rotation = _glMatrix.mat4.create();\n\t        this.center = _glMatrix.vec3.create();\n\t\n\t        this.easing = 0.1;\n\t        this.senstivity = 1;\n\t        this.senstivityRotation = 1;\n\t\n\t        this._isLocked = false;\n\t        this._isZoomLocked = false;\n\t        this._rx = 0;\n\t        this._trx = 0;\n\t        this._prevx = 0;\n\t        this._ry = 0;\n\t        this._try = 0;\n\t        this._prevy = 0;\n\t\n\t        this._quat = _glMatrix.quat.create();\n\t        this._vec = _glMatrix.vec3.create();\n\t        this._mtx = _glMatrix.mat4.create();\n\t\n\t        this._mouseDown = {\n\t            x: 0,\n\t            y: 0\n\t        };\n\t\n\t        this._mouse = {\n\t            x: 0,\n\t            y: 0\n\t        };\n\t\n\t        this._init();\n\t    }\n\t\n\t    OrbitalCameraControl.prototype._init = function _init() {\n\t        var _this = this;\n\t\n\t        this._listenerTarget.addEventListener('mousedown', function (e) {\n\t            return _this._onDown(e);\n\t        });\n\t        this._listenerTarget.addEventListener('mouseup', function () {\n\t            return _this._onUp();\n\t        });\n\t        this._listenerTarget.addEventListener('mousemove', function (e) {\n\t            return _this._onMove(e);\n\t        });\n\t\n\t        this._listenerTarget.addEventListener('touchstart', function (e) {\n\t            return _this._onDown(e);\n\t        });\n\t        this._listenerTarget.addEventListener('touchend', function () {\n\t            return _this._onUp();\n\t        });\n\t        this._listenerTarget.addEventListener('touchmove', function (e) {\n\t            return _this._onMove(e);\n\t        });\n\t\n\t        this._listenerTarget.addEventListener('mousewheel', function (e) {\n\t            return _this._onWheel(e);\n\t        });\n\t        this._listenerTarget.addEventListener('DOMMouseScroll', function (e) {\n\t            return _this._onWheel(e);\n\t        });\n\t    };\n\t\n\t    OrbitalCameraControl.prototype.lock = function lock(mValue) {\n\t        this._isLocked = mValue;\n\t    };\n\t\n\t    OrbitalCameraControl.prototype.lockZoom = function lockZoom(mValue) {\n\t        this._isZoomLocked = mValue;\n\t    };\n\t\n\t    OrbitalCameraControl.prototype._onWheel = function _onWheel(e) {\n\t        if (this._isZoomLocked) {\n\t            return;\n\t        }\n\t        var w = e.wheelDelta;\n\t        var d = e.detail;\n\t        var value = 0;\n\t        if (d) {\n\t            if (w) {\n\t                value = w / d / 40 * d > 0 ? 1 : -1; // Opera\n\t            } else {\n\t                value = -d / 3; // Firefox;         TODO: do not /3 for OS X\n\t            }\n\t        } else {\n\t            value = w / 120;\n\t        }\n\t\n\t        this._targetRadius += -value * 2 * this.senstivity;\n\t        if (this._targetRadius < 0.01) {\n\t            this._targetRadius = 0.01;\n\t        }\n\t    };\n\t\n\t    OrbitalCameraControl.prototype._onDown = function _onDown(e) {\n\t        if (this._isLocked) {\n\t            return;\n\t        }\n\t        this._isDown = true;\n\t\n\t        this._mouseDown = getCursorPos(e);\n\t        this._mouse = getCursorPos(e);\n\t\n\t        this._prevx = this._trx = this._rx;\n\t        this._prevy = this._try = this._ry;\n\t    };\n\t\n\t    OrbitalCameraControl.prototype._onMove = function _onMove(e) {\n\t        if (this._isLocked) {\n\t            return;\n\t        }\n\t        if (!this._isDown) {\n\t            return;\n\t        }\n\t        this._mouse = getCursorPos(e);\n\t    };\n\t\n\t    OrbitalCameraControl.prototype._onUp = function _onUp() {\n\t        if (this._isLocked) {\n\t            return;\n\t        }\n\t        this._isDown = false;\n\t    };\n\t\n\t    OrbitalCameraControl.prototype.update = function update() {\n\t        var dx = this._mouse.x - this._mouseDown.x;\n\t        var dy = this._mouse.y - this._mouseDown.y;\n\t\n\t        var senstivity = 0.02 * this.senstivityRotation;\n\t        this._try = this._prevy - dx * senstivity;\n\t        this._trx = this._prevx - dy * senstivity;\n\t\n\t        if (this._trx < -Math.PI / 2 + 0.01) {\n\t            this._trx = -Math.PI / 2 + 0.01;\n\t        } else if (this._trx > Math.PI / 2 - 0.01) {\n\t            this._trx = Math.PI / 2 - 0.01;\n\t        }\n\t\n\t        this._rx += (this._trx - this._rx) * this.easing;\n\t        this._ry += (this._try - this._ry) * this.easing;\n\t        this._radius += (this._targetRadius - this._radius) * this.easing;\n\t\n\t        _glMatrix.quat.identity(this._quat);\n\t        _glMatrix.quat.rotateY(this._quat, this._quat, this._ry);\n\t        _glMatrix.quat.rotateX(this._quat, this._quat, this._rx);\n\t\n\t        _glMatrix.vec3.set(this._vec, 0, 0, this._radius);\n\t        _glMatrix.vec3.transformQuat(this._vec, this._vec, this._quat);\n\t\n\t        _glMatrix.mat4.identity(this._mtx);\n\t        _glMatrix.mat4.lookAt(this._mtx, this._vec, this.center, UP);\n\t\n\t        if (this._mtxTarget) {\n\t            _glMatrix.mat4.copy(this._mtxTarget, this._mtx);\n\t        }\n\t    };\n\t\n\t    return OrbitalCameraControl;\n\t}();\n\t\n\texports.default = OrbitalCameraControl;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _OrbitalControl = __webpack_require__(48);\n\t\n\tvar _OrbitalControl2 = _interopRequireDefault(_OrbitalControl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tOrbitalControl: _OrbitalControl2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Vector = function () {\n\t    function Vector(cb) {\n\t        _classCallCheck(this, Vector);\n\t\n\t        this.cb = cb;\n\t\n\t        this._x = 0;\n\t        this._y = 0;\n\t        this._z = 0;\n\t\n\t        return this;\n\t    }\n\t\n\t    Vector.prototype.set = function set(x, y, z) {\n\t        if (!x) x = 0;\n\t\n\t        if (y === undefined) {\n\t            y = z = x;\n\t        }\n\t\n\t        this._x = x;\n\t        this._y = y;\n\t        this._z = z;\n\t\n\t        if (this.cb) this.cb();\n\t    };\n\t\n\t    _createClass(Vector, [{\n\t        key: \"x\",\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(value) {\n\t            this._x = value;\n\t            if (this.cb) this.cb();\n\t        }\n\t    }, {\n\t        key: \"y\",\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(value) {\n\t            this._y = value;\n\t            if (this.cb) this.cb();\n\t        }\n\t    }, {\n\t        key: \"z\",\n\t        get: function get() {\n\t            return this._z;\n\t        },\n\t        set: function set(value) {\n\t            this._z = value;\n\t            if (this.cb) this.cb();\n\t        }\n\t    }]);\n\t\n\t    return Vector;\n\t}();\n\t\n\texports.default = Vector;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Vector = __webpack_require__(50);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t        Vector: _Vector2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _glMatrix = __webpack_require__(5);\n\t\n\tvar _core = __webpack_require__(51);\n\t\n\tvar _core2 = _interopRequireDefault(_core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Object3D = function () {\n\t    function Object3D() {\n\t        _classCallCheck(this, Object3D);\n\t\n\t        this._matrix = _glMatrix.mat4.create();\n\t        this._needsUpdate = false;\n\t\n\t        this.position = new _core2.default.Vector(this._onPropertyUpdate.bind(this));\n\t        this.scale = new _core2.default.Vector(this._onPropertyUpdate.bind(this));\n\t        this.scale.set(1, 1, 1);\n\t        this.rotation = new _core2.default.Vector(this._onPropertyUpdate.bind(this));\n\t\n\t        this._rotation = _glMatrix.vec3.create();\n\t        this._scale = _glMatrix.vec3.fromValues(1, 1, 1);\n\t        this._position = _glMatrix.vec3.create();\n\t    }\n\t\n\t    Object3D.prototype._onPropertyUpdate = function _onPropertyUpdate() {\n\t        this._needsUpdate = true;\n\t    };\n\t\n\t    Object3D.prototype._updateMatrix = function _updateMatrix() {\n\t        _glMatrix.vec3.set(this._scale, this.scale.x, this.scale.y, this.scale.z);\n\t        _glMatrix.vec3.set(this._position, this.position.x, this.position.y, this.position.z);\n\t        _glMatrix.vec3.set(this._rotation, this.rotation.x, this.rotation.y, this.rotation.z);\n\t\n\t        _glMatrix.mat4.identity(this._matrix, this._matrix);\n\t        _glMatrix.mat4.translate(this._matrix, this._matrix, this._position);\n\t        _glMatrix.mat4.rotateX(this._matrix, this._matrix, this._rotation[0]);\n\t        _glMatrix.mat4.rotateY(this._matrix, this._matrix, this._rotation[1]);\n\t        _glMatrix.mat4.rotateZ(this._matrix, this._matrix, this._rotation[2]);\n\t        _glMatrix.mat4.scale(this._matrix, this._matrix, this._scale);\n\t    };\n\t\n\t    Object3D.prototype.update = function update() {\n\t        if (this._needsUpdate) {\n\t            this._updateMatrix();\n\t        }\n\t    };\n\t\n\t    return Object3D;\n\t}();\n\t\n\texports.default = Object3D;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Mesh = __webpack_require__(1);\n\t\n\tvar _Mesh2 = _interopRequireDefault(_Mesh);\n\t\n\tvar _Cube = __webpack_require__(55);\n\t\n\tvar _Cube2 = _interopRequireDefault(_Cube);\n\t\n\tvar _Sphere = __webpack_require__(57);\n\t\n\tvar _Sphere2 = _interopRequireDefault(_Sphere);\n\t\n\tvar _BigTriangle = __webpack_require__(54);\n\t\n\tvar _BigTriangle2 = _interopRequireDefault(_BigTriangle);\n\t\n\tvar _Quad = __webpack_require__(56);\n\t\n\tvar _Quad2 = _interopRequireDefault(_Quad);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\tMesh: _Mesh2.default,\n\t\tCube: _Cube2.default,\n\t\tSphere: _Sphere2.default,\n\t\tBigTriangle: _BigTriangle2.default,\n\t\tQuad: _Quad2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Mesh2 = __webpack_require__(1);\n\t\n\tvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\t\n\tvar _FacesMultiplicator = __webpack_require__(13);\n\t\n\tvar _FacesMultiplicator2 = _interopRequireDefault(_FacesMultiplicator);\n\t\n\tvar _FacesSeparator = __webpack_require__(14);\n\t\n\tvar _FacesSeparator2 = _interopRequireDefault(_FacesSeparator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BigTriangle = function (_Mesh) {\n\t  _inherits(BigTriangle, _Mesh);\n\t\n\t  function BigTriangle(program) {\n\t    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var state = arguments[2];\n\t    var drawType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t\n\t    _classCallCheck(this, BigTriangle);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Mesh.call(this, program, state, drawType));\n\t\n\t    var indices = [2, 1, 0];\n\t    var positions = [-1, -1, -1, 4, 4, -1];\n\t\n\t    _this.addPosition(positions);\n\t    _this.addIndices(indices, false);\n\t    return _this;\n\t  }\n\t\n\t  return BigTriangle;\n\t}(_Mesh3.default);\n\t\n\texports.default = BigTriangle;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Mesh2 = __webpack_require__(1);\n\t\n\tvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\t\n\tvar _FacesMultiplicator = __webpack_require__(13);\n\t\n\tvar _FacesMultiplicator2 = _interopRequireDefault(_FacesMultiplicator);\n\t\n\tvar _FacesSeparator = __webpack_require__(14);\n\t\n\tvar _FacesSeparator2 = _interopRequireDefault(_FacesSeparator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Cube = function (_Mesh) {\n\t  _inherits(Cube, _Mesh);\n\t\n\t  function Cube(program) {\n\t    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var state = arguments[2];\n\t    var drawType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t\n\t    _classCallCheck(this, Cube);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Mesh.call(this, program, state, drawType));\n\t\n\t    _this.options = {\n\t      w: data.w || 1,\n\t      h: data.h || 1,\n\t      d: data.d || 1,\n\t      multiFace: data.multiFace,\n\t      subdivision: data.subdivision || 0\n\t    };\n\t\n\t    _this.multiFace = _this.options.multiFace;\n\t\n\t    _this.subdivision = _this.options.subdivision;\n\t    _this.width = _this.options.w;\n\t    _this.height = _this.options.h;\n\t    _this.depth = _this.options.d;\n\t\n\t    _this.cube();\n\t    return _this;\n\t  }\n\t\n\t  Cube.prototype.cube = function cube() {\n\t    var x = this.width / 2;\n\t    var y = this.height / 2;\n\t    var z = this.depth / 2;\n\t\n\t    var positions = [];\n\t    var coords = [];\n\t    var indices = [];\n\t    var normals = [];\n\t    var count = 0;\n\t\n\t    // BACK\n\t    positions.push(-x, y, -z);\n\t    positions.push(x, y, -z);\n\t    positions.push(x, -y, -z);\n\t    positions.push(-x, -y, -z);\n\t\n\t    normals.push(0, 0, -1);\n\t    normals.push(0, 0, -1);\n\t    normals.push(0, 0, -1);\n\t    normals.push(0, 0, -1);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(0, 0);\n\t      coords.push(1 / 4, 0);\n\t      coords.push(1 / 4, 1 / 2);\n\t      coords.push(0, 1 / 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    count++;\n\t\n\t    // RIGHT\n\t    positions.push(x, y, -z);\n\t    positions.push(x, y, z);\n\t    positions.push(x, -y, z);\n\t    positions.push(x, -y, -z);\n\t\n\t    normals.push(1, 0, 0);\n\t    normals.push(1, 0, 0);\n\t    normals.push(1, 0, 0);\n\t    normals.push(1, 0, 0);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(1 / 4, 0);\n\t      coords.push(1 / 4 * 2, 0);\n\t      coords.push(1 / 4 * 2, 1 / 2);\n\t      coords.push(1 / 4, 1 / 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    count++;\n\t\n\t    // FRONT\n\t    positions.push(x, y, z);\n\t    positions.push(-x, y, z);\n\t    positions.push(-x, -y, z);\n\t    positions.push(x, -y, z);\n\t\n\t    normals.push(0, 0, 1);\n\t    normals.push(0, 0, 1);\n\t    normals.push(0, 0, 1);\n\t    normals.push(0, 0, 1);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(1 / 4 * 2, 0);\n\t      coords.push(1 / 4 * 3, 0);\n\t      coords.push(1 / 4 * 3, 1 / 2);\n\t      coords.push(1 / 4 * 2, 1 / 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    count++;\n\t\n\t    // LEFT\n\t    positions.push(-x, y, z);\n\t    positions.push(-x, y, -z);\n\t    positions.push(-x, -y, -z);\n\t    positions.push(-x, -y, z);\n\t\n\t    normals.push(-1, 0, 0);\n\t    normals.push(-1, 0, 0);\n\t    normals.push(-1, 0, 0);\n\t    normals.push(-1, 0, 0);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(0, 1 / 2);\n\t      coords.push(1 / 4, 1 / 2);\n\t      coords.push(1 / 4, 1 / 2 * 2);\n\t      coords.push(0, 1 / 2 * 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    count++;\n\t\n\t    // TOP\n\t    positions.push(-x, y, z);\n\t    positions.push(x, y, z);\n\t    positions.push(x, y, -z);\n\t    positions.push(-x, y, -z);\n\t\n\t    normals.push(0, 1, 0);\n\t    normals.push(0, 1, 0);\n\t    normals.push(0, 1, 0);\n\t    normals.push(0, 1, 0);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(1 / 4, 1 / 2);\n\t      coords.push(1 / 4 * 2, 1 / 2);\n\t      coords.push(1 / 4 * 2, 1 / 2 * 2);\n\t      coords.push(1 / 4, 1 / 2 * 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    count++;\n\t\n\t    // BOTTOM\n\t    positions.push(-x, -y, -z);\n\t    positions.push(x, -y, -z);\n\t    positions.push(x, -y, z);\n\t    positions.push(-x, -y, z);\n\t\n\t    normals.push(0, -1, 0);\n\t    normals.push(0, -1, 0);\n\t    normals.push(0, -1, 0);\n\t    normals.push(0, -1, 0);\n\t\n\t    if (this.multiFace) {\n\t      coords.push(1 / 4 * 2, 1 / 2);\n\t      coords.push(1 / 4 * 3, 1 / 2);\n\t      coords.push(1 / 4 * 3, 1 / 2 * 2);\n\t      coords.push(1 / 4 * 2, 1 / 2 * 2);\n\t    } else {\n\t      coords.push(0, 0);\n\t      coords.push(1, 0);\n\t      coords.push(1, 1);\n\t      coords.push(0, 1);\n\t    }\n\t\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 1);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 0);\n\t    indices.push(count * 4 + 2);\n\t    indices.push(count * 4 + 3);\n\t\n\t    var ind = [];\n\t\n\t    for (var i = 0; i < indices.length; i += 3) {\n\t      ind.push(indices[i], indices[i + 1], indices[i + 2]);\n\t    }\n\t\n\t    // TODO this is a temporary fix\n\t    var faces = _FacesMultiplicator2.default.multiplyTriangles(this.subdivision, ind, positions);\n\t    var l = positions.length - coords.length;\n\t    for (var i = 0; i < l; i++) {\n\t      coords.push(0, 0);\n\t      normals.push(0, -1, 0);\n\t    }\n\t\n\t    this.addPosition(positions);\n\t    this.addAttribute(coords, 'aUv', 2);\n\t    this.addAttribute(normals, 'aNormal', 3);\n\t    this.addIndices(faces, false);\n\t  };\n\t\n\t  return Cube;\n\t}(_Mesh3.default);\n\t\n\texports.default = Cube;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Mesh2 = __webpack_require__(1);\n\t\n\tvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Quad = function (_Mesh) {\n\t\t_inherits(Quad, _Mesh);\n\t\n\t\tfunction Quad(program) {\n\t\t\tvar data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\tvar state = arguments[2];\n\t\t\tvar drawType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\t\n\t\t\t_classCallCheck(this, Quad);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, _Mesh.call(this, program, state, drawType));\n\t\n\t\t\t_this.addPosition([-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0]);\n\t\n\t\t\t_this.addAttribute([1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0], 'aUv', 2);\n\t\t\t//\n\t\t\t_this.addIndices([0, 1, 2, 0, 2, 3]);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Quad;\n\t}(_Mesh3.default);\n\t\n\texports.default = Quad;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Mesh2 = __webpack_require__(1);\n\t\n\tvar _Mesh3 = _interopRequireDefault(_Mesh2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Sphere = function (_Mesh) {\n\t  _inherits(Sphere, _Mesh);\n\t\n\t  function Sphere(program) {\n\t    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t    var state = arguments[2];\n\t    var drawType = arguments[3];\n\t\n\t    _classCallCheck(this, Sphere);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Mesh.call(this, program, state, drawType));\n\t\n\t    _this.options = {\n\t      nbVert: data.nbVert || 10,\n\t      radius: data.radius || 1\n\t    };\n\t\n\t    _this.sphere();\n\t    return _this;\n\t  }\n\t\n\t  Sphere.prototype.sphere = function sphere() {\n\t    var positions = [];\n\t    var indices = [];\n\t    var index = 0;\n\t    var uv = [];\n\t    var offset = 0;\n\t\n\t    var dTex = 1 / this.options.nbVert;\n\t\n\t    var angle = void 0;\n\t    for (var i = 0; i < this.options.nbVert; i++) {\n\t      for (var j = 0; j < this.options.nbVert; j++) {\n\t        angle = this.getAngle(i, j);\n\t        positions.push(angle[0], angle[1], angle[2]);\n\t\n\t        angle = this.getAngle(i + 1, j);\n\t        positions.push(angle[0], angle[1], angle[2]);\n\t\n\t        angle = this.getAngle(i + 1, j + 1);\n\t        positions.push(angle[0], angle[1], angle[2]);\n\t\n\t        angle = this.getAngle(i, j + 1);\n\t        positions.push(angle[0], angle[1], angle[2]);\n\t\n\t        var u = j / this.options.nbVert;\n\t        var v = i / this.options.nbVert;\n\t        uv.push(1.0 - u, v);\n\t        uv.push(1.0 - u, v + dTex);\n\t        uv.push(1.0 - u - dTex, v + dTex);\n\t        uv.push(1.0 - u - dTex, v);\n\t\n\t        indices.push(index * 4 + 0);\n\t        indices.push(index * 4 + 1);\n\t        indices.push(index * 4 + 2);\n\t        indices.push(index * 4 + 0);\n\t        indices.push(index * 4 + 2);\n\t        indices.push(index * 4 + 3);\n\t        index++;\n\t      }\n\t    }\n\t\n\t    this.addPosition(positions);\n\t    this.addAttribute(uv, 'aUv', 2);\n\t    this.addIndices(indices, false);\n\t  };\n\t\n\t  Sphere.prototype.getAngle = function getAngle(i, j) {\n\t    var isNormal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t    //\trx : -90 ~ 90 , ry : 0 ~ 360\n\t    var ry = j / this.options.nbVert * Math.PI * 2 - Math.PI;\n\t    var rx = i / this.options.nbVert * Math.PI - Math.PI * 0.5;\n\t    var r = this.options.radius;\n\t    var pos = [];\n\t    pos[1] = Math.sin(rx) * r;\n\t    var t = Math.cos(rx) * r;\n\t    pos[0] = Math.cos(ry) * t;\n\t    pos[2] = Math.sin(ry) * t;\n\t\n\t    return [pos[0], pos[1], pos[2]];\n\t  };\n\t\n\t  Sphere.prototype.render = function render() {};\n\t\n\t  return Sphere;\n\t}(_Mesh3.default);\n\t\n\texports.default = Sphere;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _GLExtensions = __webpack_require__(11);\n\t\n\tvar _GLExtensions2 = _interopRequireDefault(_GLExtensions);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DataTexture = function () {\n\t\tfunction DataTexture(data) {\n\t\t\tvar width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 256;\n\t\t\tvar height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 256;\n\t\t\tvar format = arguments[3];\n\t\n\t\t\t_classCallCheck(this, DataTexture);\n\t\n\t\t\tthis.gl = POLY.gl;\n\t\t\tvar gl = this.gl;\n\t\n\t\t\tformat = format || gl.RGBA;\n\t\n\t\t\tvar floatTextures = _GLExtensions2.default.getExtension('OES_texture_float');\n\t\n\t\t\tif (!_GLExtensions2.default.getExtension(\"OES_texture_float\")) {\n\t\t\t\tthrow new Error(\"float textures not supported\");\n\t\t\t}\n\t\n\t\t\tvar halfFloat = _GLExtensions2.default.getExtension(\"OES_texture_half_float\");\n\t\t\tvar type = gl.UNSIGNED_BYTE;\n\t\t\tvar extHalfFloat = _GLExtensions2.default.getExtension('OES_texture_half_float');\n\t\t\t_GLExtensions2.default.getExtension(\"OES_texture_float_linear\");\n\t\n\t\t\tif (_GLExtensions2.default.checkExtension('OES_texture_float')) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (extHalfFloat) {\n\t\t\t\ttype = extHalfFloat.HALF_FLOAT_OES;\n\t\t\t}\n\t\n\t\t\tconsole.log(type, gl.FLOAT);\n\t\n\t\t\tthis._texture = gl.createTexture();\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, data);\n\t\n\t\t\tif (POLY.utils.isPowerOfTwo(width) && POLY.utils.isPowerOfTwo(height)) {}\n\t\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t// gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT ) ;\n\t\t\t// gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT ) ;\n\t\t}\n\t\n\t\tDataTexture.prototype.bind = function bind() {\n\t\t\tvar index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t\t\tvar gl = this.gl;\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\t};\n\t\n\t\treturn DataTexture;\n\t}();\n\t\n\texports.default = DataTexture;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Texture = function () {\n\t\tfunction Texture(image, isTexture) {\n\t\t\t_classCallCheck(this, Texture);\n\t\n\t\t\tthis.gl = POLY.gl;\n\t\t\tvar gl = this.gl;\n\t\n\t\t\tif (isTexture) {\n\t\t\t\tthis._texture = image;\n\t\t\t} else {\n\t\t\t\tthis._texture = gl.createTexture();\n\t\n\t\t\t\tthis.image = new Image();\n\t\t\t\tthis.image.src = image;\n\t\n\t\t\t\tthis.image.addEventListener('load', this.onImageLoaded.bind(this, this.image));\n\t\t\t}\n\t\t}\n\t\n\t\tTexture.prototype.onImageLoaded = function onImageLoaded(image) {\n\t\t\tvar gl = this.gl;\n\t\n\t\t\tvar ext = gl.getExtension('OES_texture_float');\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.FLOAT, image);\n\t\n\t\t\tif (POLY.utils.isPowerOfTwo(image.width) && POLY.utils.isPowerOfTwo(image.height)) {\n\t\t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t\t\t}\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t};\n\t\n\t\tTexture.prototype.bind = function bind() {\n\t\t\tvar index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t\t\tvar gl = this.gl;\n\t\t\tgl.activeTexture(gl.TEXTURE0 + index);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\t};\n\t\n\t\treturn Texture;\n\t}();\n\t\n\texports.default = Texture;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\texports.default = new (function () {\n\t\tfunction Loop() {\n\t\t\t_classCallCheck(this, Loop);\n\t\n\t\t\tthis._loops = [];\n\t\t\tthis._idLoop = 1;\n\t\n\t\t\tthis._active = false;\n\t\t}\n\t\n\t\tLoop.prototype.add = function add(func, scope) {\n\t\t\tvar id = this._idLoop;\n\t\t\tthis._loops.push({\n\t\t\t\tfunc: func,\n\t\t\t\tid: id,\n\t\t\t\tscope: scope\n\t\t\t});\n\t\n\t\t\tif (!this._active) {\n\t\t\t\twindow.requestAnimationFrame(this._update.bind(this));\n\t\t\t\tthis.start();\n\t\t\t}\n\t\n\t\t\treturn id;\n\t\t};\n\t\n\t\tLoop.prototype.clear = function clear() {\n\t\t\tthis._loops = [];\n\t\t\tthis.stop();\n\t\t};\n\t\n\t\tLoop.prototype.start = function start() {\n\t\t\tthis._active = true;\n\t\t};\n\t\n\t\tLoop.prototype.stop = function stop() {\n\t\t\tthis._active = false;\n\t\t};\n\t\n\t\tLoop.prototype._update = function _update() {\n\t\t\tif (this._active) {\n\t\t\t\twindow.requestAnimationFrame(this._update.bind(this));\n\t\n\t\t\t\tif (this._loops.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < this._loops.length; i++) {\n\t\t\t\t\t\tthis._loops[i].func(this._loops[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\treturn Loop;\n\t}())();\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.isPowerOfTwo = exports.loop = undefined;\n\t\n\tvar _Loop = __webpack_require__(60);\n\t\n\tvar _Loop2 = _interopRequireDefault(_Loop);\n\t\n\tvar _isPowerOfTwo = __webpack_require__(62);\n\t\n\tvar _isPowerOfTwo2 = _interopRequireDefault(_isPowerOfTwo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.loop = _Loop2.default;\n\texports.isPowerOfTwo = _isPowerOfTwo2.default;\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tvar isPowerOfTwo = function isPowerOfTwo(value) {\n\t\n\t\tif (!(value & value - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t\t// return !!(value & (value - 1) == 0);\n\t};\n\t\n\texports.default = isPowerOfTwo;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 79b16dd522001716fb0f","import Application from './App';\nimport * as POLY from 'poly/Poly';\n\n\nlet App;\nlet _init = ()=>\n{\n\tlet canvas = document.getElementById(\"canvas\");\n\tPOLY.init(canvas);\n\n    App = new Application();\n    window.addEventListener('resize', resize);\n\n    resize();\n}\n\nlet resize = ()=>\n{\n\tApp.resize();\n}\n\n_init();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/index.js","import State from '../State';\nimport Object3D from './Object3D';\n\nexport default class Mesh extends Object3D\n{\n\tconstructor(program , state, drawType = 4)\n\t{\n\t\tsuper();\n\n\t\tthis.program = program;\n\t\tthis.state = state || new State(this.program.gl);\n\t\tthis.drawType = drawType;\n\t\tthis._attributes = [];\n\t\tthis._vertices = [];\n\t\tthis._indices = [];\n\t\tthis._vertexSize = 0;\n\t\tthis._numItems = 0;\n\t\tthis.indexBuffer = null;\n\t}\n\n\taddIndices(indices, dynamic)\n\t{\n\t\tlet gl = this.program.gl;\n\t\tconst drawType = dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\tthis._indices = indices;\n\n\t\tthis.indexBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), drawType);\n\n\t\t}\n\n\taddPosition(data, name = 'aPosition')\n\t{\n\t\tthis._vertices = data;\n\t\tthis._vertexSize = this._vertices.length;\n\t\tthis._numItems = this._vertexSize/3;\n\t\tthis.addAttribute(data, name);\n\t}\n\n\taddAttribute(data, name, itemSize = 3)\n\t{\n\t\tlet gl = this.program.gl;\n\t\tlet buffer = gl.createBuffer();\n    \tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    \tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n\n\t\t// console.log('data', data);\n   \t\tthis._attributes.push({\n   \t\t\tname,\n   \t\t\tdata,\n   \t\t\titemSize,\n   \t\t\tnumItems: this._numItems,\n   \t\t\tbuffer\n   \t\t});\n\n   \t\tthis.program.addAttributeLocation(name);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/Mesh.js","import Program from './poly/Program';\nimport geometry from './poly/geometry';\nimport FrameBuffer from './poly/FrameBuffer';\nimport GL from './poly/GLTool';\nimport Texture from './poly/texture/Texture';\nimport DataTexture from './poly/texture/DataTexture';\nimport cameras from './poly/camera';\nimport control from './poly/control';\nimport State from './poly/State';\nimport CONST from './poly/const';\nimport * as utils from './poly/utils';\n\nlet init = (canvas)=>\n{\n    let gl;\n    try\n    {\n        gl = canvas.getContext(\"webgl\");\n\n        POLY.gl = gl;\n        POLY.GL.init(gl);\n\n    } catch (e)\n    {\n    }\n\n    if (!gl) {\n        console.warn(\"Could not initialise WebGL\");\n    }\n}\n\nexport\n{\n    init,\n    Program,\n    GL,\n    utils,\n    Texture,\n    DataTexture,\n    CONST,\n    cameras,\n    control,\n    State,\n    geometry,\n    FrameBuffer\n}\n\nglobal.POLY = exports; // eslint-disable-line\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/Poly.js","'use strict';\n\nvar EventEmitter    = require('eventemitter3');\nvar parseUri        = require('parse-uri');\n\n// tests is CORS is supported in XHR, if not we need to use XDR\nvar useXdr = !!(window.XDomainRequest && !('withCredentials' in (new XMLHttpRequest())));\nvar tempAnchor = null;\n\n// some status constants\nvar STATUS_NONE = 0;\nvar STATUS_OK = 200;\nvar STATUS_EMPTY = 204;\n\n/**\n * Manages the state and loading of a single resource represented by\n * a single URL.\n *\n * @class\n * @param {string} name - The name of the resource to load.\n * @param {string|string[]} url - The url for this resource, for audio/video loads you can pass an array of sources.\n * @param {object} [options] - The options for the load.\n * @param {string|boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {object} [options.metadata] - Extra info for middleware.\n */\nfunction Resource(name, url, options) {\n    EventEmitter.call(this);\n\n    options = options || {};\n\n    if (typeof name !== 'string' || typeof url !== 'string') {\n        throw new Error('Both name and url are required for constructing a resource.');\n    }\n\n    /**\n     * The name of this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.name = name;\n\n    /**\n     * The url used to load this resource.\n     *\n     * @member {string}\n     * @readonly\n     */\n    this.url = url;\n\n    /**\n     * Stores whether or not this url is a data url.\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    this.isDataUrl = this.url.indexOf('data:') === 0;\n\n    /**\n     * The data that was loaded by the resource.\n     *\n     * @member {any}\n     */\n    this.data = null;\n\n    /**\n     * Is this request cross-origin? If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.crossOrigin = options.crossOrigin === true ? 'anonymous' : options.crossOrigin;\n\n    /**\n     * The method of loading to use for this resource.\n     *\n     * @member {Resource.LOAD_TYPE}\n     */\n    this.loadType = options.loadType || this._determineLoadType();\n\n    /**\n     * The type used to load the resource via XHR. If unset, determined automatically.\n     *\n     * @member {string}\n     */\n    this.xhrType = options.xhrType;\n\n    /**\n     * Extra info for middleware, and controlling specifics about how the resource loads.\n     *\n     * Note that if you pass in a `loadElement`, the Resource class takes ownership of it.\n     * Meaning it will modify it as it sees fit.\n     *\n     * @member {object}\n     * @property {HTMLImageElement|HTMLAudioElement|HTMLVideoElement} [loadElement=null] - The\n     *  element to use for loading, instead of creating one.\n     * @property {boolean} [skipSource=false] - Skips adding source(s) to the load element. This\n     *  is useful if you want to pass in a `loadElement` that you already added load sources\n     *  to.\n     */\n    this.metadata = options.metadata || {};\n\n    /**\n     * The error that occurred while loading (if any).\n     *\n     * @member {Error}\n     * @readonly\n     */\n    this.error = null;\n\n    /**\n     * The XHR object that was used to load this resource. This is only set\n     * when `loadType` is `Resource.LOAD_TYPE.XHR`.\n     *\n     * @member {XMLHttpRequest}\n     */\n    this.xhr = null;\n\n    /**\n     * Describes if this resource was loaded as json. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isJson = false;\n\n    /**\n     * Describes if this resource was loaded as xml. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isXml = false;\n\n    /**\n     * Describes if this resource was loaded as an image tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isImage = false;\n\n    /**\n     * Describes if this resource was loaded as an audio tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isAudio = false;\n\n    /**\n     * Describes if this resource was loaded as a video tag. Only valid after the resource\n     * has completely loaded.\n     *\n     * @member {boolean}\n     */\n    this.isVideo = false;\n\n    /**\n     * Describes if this resource has finished loading. Is true when the resource has completely\n     * loaded.\n     *\n     * @member {boolean}\n     */\n    this.isComplete = false;\n\n    /**\n     * Describes if this resource is currently loading. Is true when the resource starts loading,\n     * and is false again when complete.\n     *\n     * @member {boolean}\n     */\n    this.isLoading = false;\n\n    /**\n     * The `dequeue` method that will be used a storage place for the async queue dequeue method\n     * used privately by the loader.\n     *\n     * @private\n     * @member {function}\n     */\n    this._dequeue = null;\n\n    /**\n     * The `complete` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundComplete = this.complete.bind(this);\n\n    /**\n     * The `_onError` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnError = this._onError.bind(this);\n\n    /**\n     * The `_onProgress` function bound to this resource's context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundOnProgress = this._onProgress.bind(this);\n\n    // xhr callbacks\n    this._boundXhrOnError = this._xhrOnError.bind(this);\n    this._boundXhrOnAbort = this._xhrOnAbort.bind(this);\n    this._boundXhrOnLoad = this._xhrOnLoad.bind(this);\n    this._boundXdrOnTimeout = this._xdrOnTimeout.bind(this);\n\n    /**\n     * Emitted when the resource beings to load.\n     *\n     * @event start\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted each time progress of this resource load updates.\n     * Not all resources types and loader systems can support this event\n     * so sometimes it may not be available. If the resource\n     * is being loaded on a modern browser, using XHR, and the remote server\n     * properly sets Content-Length headers, then this will be available.\n     *\n     * @event progress\n     * @memberof Resource#\n     */\n\n    /**\n     * Emitted once this resource has loaded, if there was an error it will\n     * be in the `error` property.\n     *\n     * @event complete\n     * @memberof Resource#\n     */\n}\n\nResource.prototype = Object.create(EventEmitter.prototype);\nResource.prototype.constructor = Resource;\nmodule.exports = Resource;\n\n/**\n * Marks the resource as complete.\n *\n * @fires complete\n */\nResource.prototype.complete = function () {\n    // TODO: Clean this up in a wrapper or something...gross....\n    if (this.data && this.data.removeEventListener) {\n        this.data.removeEventListener('error', this._boundOnError, false);\n        this.data.removeEventListener('load', this._boundComplete, false);\n        this.data.removeEventListener('progress', this._boundOnProgress, false);\n        this.data.removeEventListener('canplaythrough', this._boundComplete, false);\n    }\n\n    if (this.xhr) {\n        if (this.xhr.removeEventListener) {\n            this.xhr.removeEventListener('error', this._boundXhrOnError, false);\n            this.xhr.removeEventListener('abort', this._boundXhrOnAbort, false);\n            this.xhr.removeEventListener('progress', this._boundOnProgress, false);\n            this.xhr.removeEventListener('load', this._boundXhrOnLoad, false);\n        }\n        else {\n            this.xhr.onerror = null;\n            this.xhr.ontimeout = null;\n            this.xhr.onprogress = null;\n            this.xhr.onload = null;\n        }\n    }\n\n    if (this.isComplete) {\n        throw new Error('Complete called again for an already completed resource.');\n    }\n\n    this.isComplete = true;\n    this.isLoading = false;\n\n    this.emit('complete', this);\n};\n\n/**\n * Aborts the loading of this resource, with an optional message.\n *\n * @param {string} message - The message to use for the error\n */\nResource.prototype.abort = function (message) {\n    // abort can be called multiple times, ignore subsequent calls.\n    if (this.error) {\n        return;\n    }\n\n    // store error\n    this.error = new Error(message);\n\n    // abort the actual loading\n    if (this.xhr) {\n        this.xhr.abort();\n    }\n    else if (this.xdr) {\n        this.xdr.abort();\n    }\n    else if (this.data) {\n        // single source\n        if (typeof this.data.src !== 'undefined') {\n            this.data.src = '';\n        }\n        // multi-source\n        else {\n            while (this.data.firstChild) {\n                this.data.removeChild(this.data.firstChild);\n            }\n        }\n    }\n\n    // done now.\n    this.complete();\n};\n\n/**\n * Kicks off loading of this resource. This method is asynchronous.\n *\n * @fires start\n * @param {function} [cb] - Optional callback to call once the resource is loaded.\n */\nResource.prototype.load = function (cb) {\n    if (this.isLoading) {\n        return;\n    }\n\n    if (this.isComplete) {\n        if (cb) {\n            var self = this;\n\n            setTimeout(function () {\n                cb(self);\n            }, 1);\n        }\n\n        return;\n    }\n    else if (cb) {\n        this.once('complete', cb);\n    }\n\n    this.isLoading = true;\n\n    this.emit('start', this);\n\n    // if unset, determine the value\n    if (this.crossOrigin === false || typeof this.crossOrigin !== 'string') {\n        this.crossOrigin = this._determineCrossOrigin(this.url);\n    }\n\n    switch (this.loadType) {\n        case Resource.LOAD_TYPE.IMAGE:\n            this._loadElement('image');\n            break;\n\n        case Resource.LOAD_TYPE.AUDIO:\n            this._loadSourceElement('audio');\n            break;\n\n        case Resource.LOAD_TYPE.VIDEO:\n            this._loadSourceElement('video');\n            break;\n\n        case Resource.LOAD_TYPE.XHR:\n            /* falls through */\n        default:\n            if (useXdr && this.crossOrigin) {\n                this._loadXdr();\n            }\n            else {\n                this._loadXhr();\n            }\n            break;\n    }\n};\n\n/**\n * Loads this resources using an element that has a single source,\n * like an HTMLImageElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'image' && typeof window.Image !== 'undefined') {\n        this.data = new Image();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.crossOrigin) {\n        this.data.crossOrigin = this.crossOrigin;\n    }\n\n    if (!this.metadata.skipSource) {\n        this.data.src = this.url;\n    }\n\n    var typeName = 'is' + type[0].toUpperCase() + type.substring(1);\n\n    if (this[typeName] === false) {\n        this[typeName] = true;\n    }\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n};\n\n/**\n * Loads this resources using an element that has multiple sources,\n * like an HTMLAudioElement or HTMLVideoElement.\n *\n * @private\n * @param {string} type - The type of element to use.\n */\nResource.prototype._loadSourceElement = function (type) {\n    if (this.metadata.loadElement) {\n        this.data = this.metadata.loadElement;\n    }\n    else if (type === 'audio' && typeof window.Audio !== 'undefined') {\n        this.data = new Audio();\n    }\n    else {\n        this.data = document.createElement(type);\n    }\n\n    if (this.data === null) {\n        this.abort('Unsupported element ' + type);\n\n        return;\n    }\n\n    if (!this.metadata.skipSource) {\n        // support for CocoonJS Canvas+ runtime, lacks document.createElement('source')\n        if (navigator.isCocoonJS) {\n            this.data.src = Array.isArray(this.url) ? this.url[0] : this.url;\n        }\n        else if (Array.isArray(this.url)) {\n            for (var i = 0; i < this.url.length; ++i) {\n                this.data.appendChild(this._createSource(type, this.url[i]));\n            }\n        }\n        else {\n            this.data.appendChild(this._createSource(type, this.url));\n        }\n    }\n\n    this['is' + type[0].toUpperCase() + type.substring(1)] = true;\n\n    this.data.addEventListener('error', this._boundOnError, false);\n    this.data.addEventListener('load', this._boundComplete, false);\n    this.data.addEventListener('progress', this._boundOnProgress, false);\n    this.data.addEventListener('canplaythrough', this._boundComplete, false);\n\n    this.data.load();\n};\n\n/**\n * Loads this resources using an XMLHttpRequest.\n *\n * @private\n */\nResource.prototype._loadXhr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xhr = this.xhr = new XMLHttpRequest();\n\n    // set the request type and url\n    xhr.open('GET', this.url, true);\n\n    // load json as text and parse it ourselves. We do this because some browsers\n    // *cough* safari *cough* can't deal with it.\n    if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON || this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n        xhr.responseType = Resource.XHR_RESPONSE_TYPE.TEXT;\n    }\n    else {\n        xhr.responseType = this.xhrType;\n    }\n\n    xhr.addEventListener('error', this._boundXhrOnError, false);\n    xhr.addEventListener('abort', this._boundXhrOnAbort, false);\n    xhr.addEventListener('progress', this._boundOnProgress, false);\n    xhr.addEventListener('load', this._boundXhrOnLoad, false);\n\n    xhr.send();\n};\n\n/**\n * Loads this resources using an XDomainRequest. This is here because we need to support IE9 (gross).\n *\n * @private\n */\nResource.prototype._loadXdr = function () {\n    // if unset, determine the value\n    if (typeof this.xhrType !== 'string') {\n        this.xhrType = this._determineXhrType();\n    }\n\n    var xdr = this.xhr = new XDomainRequest();\n\n    // XDomainRequest has a few quirks. Occasionally it will abort requests\n    // A way to avoid this is to make sure ALL callbacks are set even if not used\n    // More info here: http://stackoverflow.com/questions/15786966/xdomainrequest-aborts-post-on-ie-9\n    xdr.timeout = 5000;\n\n    xdr.onerror = this._boundXhrOnError;\n    xdr.ontimeout = this._boundXdrOnTimeout;\n    xdr.onprogress = this._boundOnProgress;\n    xdr.onload = this._boundXhrOnLoad;\n\n    xdr.open('GET', this.url, true);\n\n    // Note: The xdr.send() call is wrapped in a timeout to prevent an\n    // issue with the interface where some requests are lost if multiple\n    // XDomainRequests are being sent at the same time.\n    // Some info here: https://github.com/photonstorm/phaser/issues/1248\n    setTimeout(function () {\n        xdr.send();\n    }, 0);\n};\n\n/**\n * Creates a source used in loading via an element.\n *\n * @private\n * @param {string} type - The element type (video or audio).\n * @param {string} url - The source URL to load from.\n * @param {string} [mime] - The mime type of the video\n * @return {HTMLSourceElement} The source element.\n */\nResource.prototype._createSource = function (type, url, mime) {\n    if (!mime) {\n        mime = type + '/' + url.substr(url.lastIndexOf('.') + 1);\n    }\n\n    var source = document.createElement('source');\n\n    source.src = url;\n    source.type = mime;\n\n    return source;\n};\n\n/**\n * Called if a load errors out.\n *\n * @param {Event} event - The error event from the element that emits it.\n * @private\n */\nResource.prototype._onError = function (event) {\n    this.abort('Failed to load element using ' + event.target.nodeName);\n};\n\n/**\n * Called if a load progress event fires for xhr/xdr.\n *\n * @fires progress\n * @private\n * @param {XMLHttpRequestProgressEvent|Event} event - Progress event.\n */\nResource.prototype._onProgress = function (event) {\n    if (event && event.lengthComputable) {\n        this.emit('progress', this, event.loaded / event.total);\n    }\n};\n\n/**\n * Called if an error event fires for xhr/xdr.\n *\n * @private\n * @param {XMLHttpRequestErrorEvent|Event} event - Error event.\n */\nResource.prototype._xhrOnError = function () {\n    var xhr = this.xhr;\n\n    this.abort(reqType(xhr) + ' Request failed. Status: ' + xhr.status + ', text: \"' + xhr.statusText + '\"');\n};\n\n/**\n * Called if an abort event fires for xhr.\n *\n * @private\n * @param {XMLHttpRequestAbortEvent} event - Abort Event\n */\nResource.prototype._xhrOnAbort = function () {\n    this.abort(reqType(this.xhr) + ' Request was aborted by the user.');\n};\n\n/**\n * Called if a timeout event fires for xdr.\n *\n * @private\n * @param {Event} event - Timeout event.\n */\nResource.prototype._xdrOnTimeout = function () {\n    this.abort(reqType(this.xhr) + ' Request timed out.');\n};\n\n/**\n * Called when data successfully loads from an xhr/xdr request.\n *\n * @private\n * @param {XMLHttpRequestLoadEvent|Event} event - Load event\n */\nResource.prototype._xhrOnLoad = function () {\n    var xhr = this.xhr;\n    var status = typeof xhr.status === 'undefined' ? xhr.status : STATUS_OK; // XDR has no `.status`, assume 200.\n\n    // status can be 0 when using the file:// protocol, also check if a response was found\n    if (status === STATUS_OK || status === STATUS_EMPTY || (status === STATUS_NONE && xhr.responseText.length > 0)) {\n        // if text, just return it\n        if (this.xhrType === Resource.XHR_RESPONSE_TYPE.TEXT) {\n            this.data = xhr.responseText;\n        }\n        // if json, parse into json object\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.JSON) {\n            try {\n                this.data = JSON.parse(xhr.responseText);\n                this.isJson = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded json:', e);\n\n                return;\n            }\n        }\n        // if xml, parse into an xml document or div element\n        else if (this.xhrType === Resource.XHR_RESPONSE_TYPE.DOCUMENT) {\n            try {\n                if (window.DOMParser) {\n                    var domparser = new DOMParser();\n\n                    this.data = domparser.parseFromString(xhr.responseText, 'text/xml');\n                }\n                else {\n                    var div = document.createElement('div');\n\n                    div.innerHTML = xhr.responseText;\n                    this.data = div;\n                }\n                this.isXml = true;\n            }\n            catch (e) {\n                this.abort('Error trying to parse loaded xml:', e);\n\n                return;\n            }\n        }\n        // other types just return the response\n        else {\n            this.data = xhr.response || xhr.responseText;\n        }\n    }\n    else {\n        this.abort('[' + xhr.status + ']' + xhr.statusText + ':' + xhr.responseURL);\n\n        return;\n    }\n\n    this.complete();\n};\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n *\n * @private\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nResource.prototype._determineCrossOrigin = function (url, loc) {\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0) {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor) {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    url = parseUri(tempAnchor.href, { strictMode: true });\n\n    var samePort = (!url.port && loc.port === '') || (url.port === loc.port);\n    var protocol = url.protocol ? url.protocol + ':' : '';\n\n    // if cross origin\n    if (url.host !== loc.hostname || !samePort || protocol !== loc.protocol) {\n        return 'anonymous';\n    }\n\n    return '';\n};\n\n/**\n * Determines the responseType of an XHR request based on the extension of the\n * resource being loaded.\n *\n * @private\n * @return {Resource.XHR_RESPONSE_TYPE} The responseType to use.\n */\nResource.prototype._determineXhrType = function () {\n    return Resource._xhrTypeMap[this._getExtension()] || Resource.XHR_RESPONSE_TYPE.TEXT;\n};\n\nResource.prototype._determineLoadType = function () {\n    return Resource._loadTypeMap[this._getExtension()] || Resource.LOAD_TYPE.XHR;\n};\n\nResource.prototype._getExtension = function () {\n    var url = this.url;\n    var ext = '';\n\n    if (this.isDataUrl) {\n        var slashIndex = url.indexOf('/');\n\n        ext = url.substring(slashIndex + 1, url.indexOf(';', slashIndex));\n    }\n    else {\n        var queryStart = url.indexOf('?');\n\n        if (queryStart !== -1) {\n            url = url.substring(0, queryStart);\n        }\n\n        ext = url.substring(url.lastIndexOf('.') + 1);\n    }\n\n    return ext.toLowerCase();\n};\n\n/**\n * Determines the mime type of an XHR request based on the responseType of\n * resource being loaded.\n *\n * @private\n * @param {Resource.XHR_RESPONSE_TYPE} type - The type to get a mime type for.\n * @return {string} The mime type to use.\n */\nResource.prototype._getMimeFromXhrType = function (type) {\n    switch (type) {\n        case Resource.XHR_RESPONSE_TYPE.BUFFER:\n            return 'application/octet-binary';\n\n        case Resource.XHR_RESPONSE_TYPE.BLOB:\n            return 'application/blob';\n\n        case Resource.XHR_RESPONSE_TYPE.DOCUMENT:\n            return 'application/xml';\n\n        case Resource.XHR_RESPONSE_TYPE.JSON:\n            return 'application/json';\n\n        case Resource.XHR_RESPONSE_TYPE.DEFAULT:\n        case Resource.XHR_RESPONSE_TYPE.TEXT:\n            /* falls through */\n        default:\n            return 'text/plain';\n\n    }\n};\n\n/**\n * Quick helper to get string xhr type.\n *\n * @ignore\n * @param {XMLHttpRequest|XDomainRequest} xhr - The request to check.\n * @return {string} The type.\n */\nfunction reqType(xhr) {\n    return xhr.toString().replace('object ', '');\n}\n\n/**\n * The types of loading a resource can use.\n *\n * @static\n * @readonly\n * @enum {number}\n */\nResource.LOAD_TYPE = {\n    /** Uses XMLHttpRequest to load the resource. */\n    XHR:    1,\n    /** Uses an `Image` object to load the resource. */\n    IMAGE:  2,\n    /** Uses an `Audio` object to load the resource. */\n    AUDIO:  3,\n    /** Uses a `Video` object to load the resource. */\n    VIDEO:  4\n};\n\n/**\n * The XHR ready states, used internally.\n *\n * @static\n * @readonly\n * @enum {string}\n */\nResource.XHR_RESPONSE_TYPE = {\n    /** defaults to text */\n    DEFAULT:    'text',\n    /** ArrayBuffer */\n    BUFFER:     'arraybuffer',\n    /** Blob */\n    BLOB:       'blob',\n    /** Document */\n    DOCUMENT:   'document',\n    /** Object */\n    JSON:       'json',\n    /** String */\n    TEXT:       'text'\n};\n\nResource._loadTypeMap = {\n    gif:      Resource.LOAD_TYPE.IMAGE,\n    png:      Resource.LOAD_TYPE.IMAGE,\n    bmp:      Resource.LOAD_TYPE.IMAGE,\n    jpg:      Resource.LOAD_TYPE.IMAGE,\n    jpeg:     Resource.LOAD_TYPE.IMAGE,\n    tif:      Resource.LOAD_TYPE.IMAGE,\n    tiff:     Resource.LOAD_TYPE.IMAGE,\n    webp:     Resource.LOAD_TYPE.IMAGE,\n    tga:      Resource.LOAD_TYPE.IMAGE,\n    'svg+xml':  Resource.LOAD_TYPE.IMAGE\n};\n\nResource._xhrTypeMap = {\n    // xml\n    xhtml:    Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    html:     Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    htm:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    xml:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tmx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    tsx:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n    svg:      Resource.XHR_RESPONSE_TYPE.DOCUMENT,\n\n    // images\n    gif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    png:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    bmp:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpg:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    jpeg:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tif:      Resource.XHR_RESPONSE_TYPE.BLOB,\n    tiff:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    webp:     Resource.XHR_RESPONSE_TYPE.BLOB,\n    tga:      Resource.XHR_RESPONSE_TYPE.BLOB,\n\n    // json\n    json:     Resource.XHR_RESPONSE_TYPE.JSON,\n\n    // text\n    text:     Resource.XHR_RESPONSE_TYPE.TEXT,\n    txt:      Resource.XHR_RESPONSE_TYPE.TEXT\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.LOAD_TYPE} loadType - The load type to set it to.\n */\nResource.setExtensionLoadType = function (extname, loadType) {\n    setExtMap(Resource._loadTypeMap, extname, loadType);\n};\n\n/**\n * Sets the load type to be used for a specific extension.\n *\n * @static\n * @param {string} extname - The extension to set the type for, e.g. \"png\" or \"fnt\"\n * @param {Resource.XHR_RESPONSE_TYPE} xhrType - The xhr type to set it to.\n */\nResource.setExtensionXhrType = function (extname, xhrType) {\n    setExtMap(Resource._xhrTypeMap, extname, xhrType);\n};\n\nfunction setExtMap(map, extname, val) {\n    if (extname && extname.indexOf('.') === 0) {\n        extname = extname.substring(1);\n    }\n\n    if (!extname) {\n        return;\n    }\n\n    map[extname] = val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/Resource.js\n// module id = 3\n// module chunks = 0","// inspired (copied) by (from) https://github.com/pixijs/pixi.js/blob/dev/src/core/renderers/webgl/WebGLState.js\nconst BLEND = 0;\nconst DEPTH_TEST = 1;\nconst FRONT_FACE = 2;\nconst CULL_FACE = 3;\nconst BLEND_FUNC = 4;\n\nexport default class State\n{\n    constructor(gl)\n    {\n        this.gl = gl;\n        this.activeState = new Uint8Array(16);\n        this.defaultState = new Uint8Array(16);\n\n        this.data = 0;\n        this.blendMode = 0;\n\n        this.blendModes = {\n            source: {\n                alpha: this.gl.SRC_ALPHA\n            },\n            dest: {\n                one: this.gl.ONE\n            },\n        }\n    }\n\n    get blend()\n    {\n        return this.activeState[BLEND];\n    }\n\n    set blend(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[BLEND] = value;\n    }\n\n    get culling()\n    {\n        return this.activeState[CULLING];\n    }\n\n    set culling(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[CULLING] = value;\n    }\n\n    get depthTest()\n    {\n        return this.activeState[DEPTH_TEST];\n    }\n\n    set depthTest(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[DEPTH_TEST] = value;\n    }\n\n    get clockwiseFrontFace()\n    {\n        return this.activeState[FRONT_FACE];\n    }\n\n    set clockwiseFrontFace(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[FRONT_FACE] = value;\n    }\n\n    get blendMode()\n    {\n        return this.activeState[BLEND_FUNC];\n        // return this._blendMode;\n    }\n\n    set blendMode(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[BLEND_FUNC] = value;\n        // 17 is NO BLEND\n        // this.blend = (value !== 17);\n        // this._blendMode = value;\n    }\n\n    setState(state)\n    {\n        this.setBlend(state.activeState[BLEND]);\n        this.setDepthTest(state.activeState[DEPTH_TEST]);\n        this.setFrontFace(state.activeState[FRONT_FACE]);\n        this.setCullFace(state.activeState[CULL_FACE]);\n        this.setBlendMode(state.activeState[BLEND_FUNC]);\n    }\n\n    setBlend(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value)\n        {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n        // this.setDepthTest(!value); // no need to do that because ew blend before we depth test (right?)\n    }\n\n    setBlendMode(value, source = \"alpha\", dest = \"one\")\n    {\n        if (value === this.activeState[BLEND_FUNC])\n        {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        this.gl.blendFunc(this.blendModes.source[source], this.blendModes.dest[dest]);\n        //\n        // const mode = this.blendModes[value];\n        //\n        // if (mode.length === 2)\n        // {\n        //     this.gl.blendFunc(mode[0], mode[1]);\n        // }\n        // else\n        // {\n        //     this.gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n        // }\n    }\n\n    setDepthTest(value)\n    {\n        value = value ? 1 : 0;\n        if (this.activeState[DEPTH_TEST] === value)\n        {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    setCullFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    setFrontFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/State.js","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nvar EPSILON = exports.EPSILON = 0.000001;\nvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = exports.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nfunction toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(5);\n\nvar mat2 = _interopRequireWildcard(_mat);\n\nvar _mat2d = __webpack_require__(6);\n\nvar mat2d = _interopRequireWildcard(_mat2d);\n\nvar _mat2 = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat2);\n\nvar _mat3 = __webpack_require__(7);\n\nvar mat4 = _interopRequireWildcard(_mat3);\n\nvar _quat = __webpack_require__(8);\n\nvar quat = _interopRequireWildcard(_quat);\n\nvar _vec = __webpack_require__(9);\n\nvar vec2 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec2);\n\nvar _vec3 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.glMatrix = glMatrix;\nexports.mat2 = mat2;\nexports.mat2d = mat2d;\nexports.mat3 = mat3;\nexports.mat4 = mat4;\nexports.quat = quat;\nexports.vec2 = vec2;\nexports.vec3 = vec3;\nexports.vec4 = vec4; /**\n                      * @fileoverview gl-matrix - High performance matrix and vector operations\n                      * @author Brandon Jones\n                      * @author Colin MacKenzie IV\n                      * @version 2.4.0\n                      */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n\n  // Calculate the determinant\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n  var b00 = void 0,\n      b01 = void 0,\n      b02 = void 0;\n  var b10 = void 0,\n      b11 = void 0,\n      b12 = void 0;\n  var b20 = void 0,\n      b21 = void 0,\n      b22 = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  var nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 2 * far * near * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n  var x0 = void 0,\n      x1 = void 0,\n      x2 = void 0,\n      y0 = void 0,\n      y1 = void 0,\n      y2 = void 0,\n      z0 = void 0,\n      z1 = void 0,\n      z2 = void 0,\n      len = void 0;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.slerp = slerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat);\n\nvar _vec = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  var omega = void 0,\n      cosom = void 0,\n      sinom = void 0,\n      scale0 = void 0,\n      scale1 = void 0;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot = void 0;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n\n  return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nvar clone = exports.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nvar fromValues = exports.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nvar copy = exports.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nvar set = exports.set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nvar add = exports.add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nvar scale = exports.scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nvar dot = exports.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nvar lerp = exports.lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nvar length = exports.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nvar normalize = exports.normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar equals = exports.equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nvar rotationTo = exports.rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nvar sqlerp = exports.sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nvar setAxes = exports.setAxes = function () {\n  var matr = mat3.create();\n\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n/***/ })\n/******/ ]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../poly.js/~/gl-matrix/dist/gl-matrix.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 6\n// module chunks = 0","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nvar EPSILON = exports.EPSILON = 0.000001;\nvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = exports.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nfunction toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(5);\n\nvar mat2 = _interopRequireWildcard(_mat);\n\nvar _mat2d = __webpack_require__(6);\n\nvar mat2d = _interopRequireWildcard(_mat2d);\n\nvar _mat2 = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat2);\n\nvar _mat3 = __webpack_require__(7);\n\nvar mat4 = _interopRequireWildcard(_mat3);\n\nvar _quat = __webpack_require__(8);\n\nvar quat = _interopRequireWildcard(_quat);\n\nvar _vec = __webpack_require__(9);\n\nvar vec2 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec2);\n\nvar _vec3 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.glMatrix = glMatrix;\nexports.mat2 = mat2;\nexports.mat2d = mat2d;\nexports.mat3 = mat3;\nexports.mat4 = mat4;\nexports.quat = quat;\nexports.vec2 = vec2;\nexports.vec3 = vec3;\nexports.vec4 = vec4; /**\n                      * @fileoverview gl-matrix - High performance matrix and vector operations\n                      * @author Brandon Jones\n                      * @author Colin MacKenzie IV\n                      * @version 2.4.0\n                      */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n\n  // Calculate the determinant\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n  var b00 = void 0,\n      b01 = void 0,\n      b02 = void 0;\n  var b10 = void 0,\n      b11 = void 0,\n      b12 = void 0;\n  var b20 = void 0,\n      b21 = void 0,\n      b22 = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  var nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 2 * far * near * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n  var x0 = void 0,\n      x1 = void 0,\n      x2 = void 0,\n      y0 = void 0,\n      y1 = void 0,\n      y2 = void 0,\n      z0 = void 0,\n      z1 = void 0,\n      z2 = void 0,\n      len = void 0;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.slerp = slerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat);\n\nvar _vec = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  var omega = void 0,\n      cosom = void 0,\n      sinom = void 0,\n      scale0 = void 0,\n      scale1 = void 0;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot = void 0;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n\n  return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nvar clone = exports.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nvar fromValues = exports.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nvar copy = exports.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nvar set = exports.set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nvar add = exports.add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nvar scale = exports.scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nvar dot = exports.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nvar lerp = exports.lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nvar length = exports.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nvar normalize = exports.normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar equals = exports.equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nvar rotationTo = exports.rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nvar sqlerp = exports.sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nvar setAxes = exports.setAxes = function () {\n  var matr = mat3.create();\n\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n/***/ })\n/******/ ]);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gl-matrix/dist/gl-matrix.js\n// module id = 7\n// module chunks = 0","'use strict'\n\nmodule.exports = function parseURI (str, opts) {\n  opts = opts || {}\n\n  var o = {\n    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n    q: {\n      name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  }\n\n  var m = o.parser[opts.strictMode ? 'strict' : 'loose'].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) uri[o.key[i]] = m[i] || ''\n\n  uri[o.q.name] = {}\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2\n  })\n\n  return uri\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parse-uri/index.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 9\n// module chunks = 0","'use strict';\n\n/**\n * Smaller version of the async library constructs.\n *\n */\n\nmodule.exports = {\n    eachSeries: asyncEachSeries,\n    queue: asyncQueue\n};\n\nfunction _noop() { /* empty */ }\n\n/**\n * Iterates an array in series.\n *\n * @param {*[]} array - Array to iterate.\n * @param {function} iterator - Function to call for each element.\n * @param {function} callback - Function to call when done, or on error.\n */\nfunction asyncEachSeries(array, iterator, callback) {\n    var i = 0;\n    var len = array.length;\n\n    (function next(err) {\n        if (err || i === len) {\n            if (callback) {\n                callback(err);\n            }\n\n            return;\n        }\n\n        iterator(array[i++], next);\n    })();\n}\n\n/**\n * Ensures a function is only called once.\n *\n * @param {function} fn - The function to wrap.\n * @return {function} The wrapping function.\n */\nfunction onlyOnce(fn) {\n    return function onceWrapper() {\n        if (fn === null) {\n            throw new Error('Callback was already called.');\n        }\n\n        var callFn = fn;\n\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\n/**\n * Async queue implementation,\n *\n * @param {function} worker - The worker function to call for each task.\n * @param {number} concurrency - How many workers to run in parrallel.\n * @return {*} The async queue object.\n */\nfunction asyncQueue(worker, concurrency) {\n    if (concurrency == null) { // eslint-disable-line no-eq-null,eqeqeq\n        concurrency = 1;\n    }\n    else if (concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var q = {\n        _tasks: [],\n        concurrency: concurrency,\n        saturated: _noop,\n        unsaturated: _noop,\n        buffer: concurrency / 4,\n        empty: _noop,\n        drain: _noop,\n        error: _noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = _noop;\n            q._tasks = [];\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        process: function () {\n            while (!q.paused && workers < q.concurrency && q._tasks.length) {\n                var task = q._tasks.shift();\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                workers += 1;\n\n                if (workers === q.concurrency) {\n                    q.saturated();\n                }\n\n                worker(task.data, onlyOnce(_next(task)));\n            }\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return workers;\n        },\n        idle: function () {\n            return q._tasks.length + workers === 0;\n        },\n        pause: function () {\n            if (q.paused === true) {\n                return;\n            }\n\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) {\n                return;\n            }\n\n            q.paused = false;\n\n            // Need to call q.process once per concurrent\n            // worker to preserve full concurrency after pause\n            for (var w = 1; w <= q.concurrency; w++) {\n                q.process();\n            }\n        }\n    };\n\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') { // eslint-disable-line no-eq-null,eqeqeq\n            throw new Error('task callback must be a function');\n        }\n\n        q.started = true;\n\n        if (data == null && q.idle()) { // eslint-disable-line no-eq-null,eqeqeq\n            // call drain immediately if there are no tasks\n            setTimeout(function () {\n                q.drain();\n            }, 1);\n\n            return;\n        }\n\n        var item = {\n            data: data,\n            callback: typeof callback === 'function' ? callback : _noop\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        }\n        else {\n            q._tasks.push(item);\n        }\n\n        setTimeout(function () {\n            q.process();\n        }, 1);\n    }\n\n    function _next(task) {\n        return function () {\n            workers -= 1;\n\n            task.callback.apply(task, arguments);\n\n            if (arguments[0] != null) { // eslint-disable-line no-eq-null,eqeqeq\n                q.error(arguments[0], task.data);\n            }\n\n            if (workers <= (q.concurrency - q.buffer)) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n\n            q.process();\n        };\n    }\n\n    return q;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/async.js\n// module id = 10\n// module chunks = 0","import { extensions } from './const';\n\nexport default new class GLExtensions\n{\n    constructor()\n    {\n        this.extensions = {};\n    }\n\n    init()\n    {\n        const gl = POLY.gl;\n\n        for(let i = 0; i < extensions.length; i++)\n        {\n\t\t\tthis.extensions[extensions[i]] = gl.getExtension(extensions[i]);\n\t\t}\n    }\n\n    checkExtension(id)\n    {\n        return !!this.extensions[id];\n    }\n\n    getExtension(id)\n    {\n        return this.extensions[id];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/GLExtensions.js","export default \n{\n\tuniformTypes: \n\t{\n\t\tfloat: 'uniform1f',\n\t\tvec2: 'uniform2fv',\n\t\tvec3: 'uniform3fv',\n\t\tvec4: 'uniform4fv',\n\t\tint: 'uniform1i',\n\t\ttexture: 'uniform1i',\n\t\tmat3: 'uniformMatrix3fv',\n\t\tmat4: 'uniformMatrix4fv'\n\t},\n\textensions:\n\t[\n\t\t'EXT_shader_texture_lod',\n\t\t'EXT_sRGB',\n\t\t'EXT_frag_depth',\n\t\t'OES_texture_float',\n\t\t'OES_texture_half_float',\n\t\t'OES_texture_float_linear',\n\t\t'OES_texture_half_float_linear',\n\t\t'OES_standard_derivatives',\n\t\t'WEBGL_depth_texture',\n\t\t'EXT_texture_filter_anisotropic',\n\t\t'ANGLE_instanced_arrays',\n\t\t'WEBGL_draw_buffers'\n\t]\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/const/index.js","\nclass FacesMultiplicator {\n  constructor(){\n    this.indexUniq = 0;\n    this.middlePointIndexCache = {};\n    this.vertices = [];\n    this.isNormalised = true;\n  }\n\n\n  multiplyTriangles(n, indices, vertices){\n    this.indexUniq = vertices.length;\n    this.vertices = vertices;\n    let faces = indices.slice();\n\n    this.isNormalised = true;\n    for (var i = 0; i < this.vertices.length; i++) {\n      if(!this.isNormalised) break;\n\n      for (var k = 0; k < this.vertices[i].length; k++) {\n        if(Math.abs(this.vertices[i][k]) > 1){\n          this.isNormalised = false;\n        }\n      }\n    }\n    for (var i = 0; i < n; i++) {\n      let faces2 = [];\n      for (var k = 0; k < faces.length; k++) {\n        let tri = faces[k];\n\n        let a = this.getMiddlePoint(tri[0], tri[1]);\n        let b = this.getMiddlePoint(tri[1], tri[2]);\n        let c = this.getMiddlePoint(tri[2], tri[0]);\n\n        faces2.push([tri[0], a, c]);\n        faces2.push([tri[1], b, a]);\n        faces2.push([tri[2], b, c]);\n        faces2.push([a, b, c]);\n      }\n\n      faces = faces2.slice();\n    }\n\n    return faces;\n  }\n\n  addVertex(position) {\n    let length = this.isNormalised ? Math.sqrt(position[0] * position[0] + position[1] * position[1] + position[2] * position[2]) : 1;\n    this.vertices.push([position[0]/length, position[1]/length, position[2]/length]);\n\n    return this.indexUniq++;\n  }\n\n  getMiddlePoint(p1, p2) {\n    let firstPointIsSmaller = p1 < p2;\n    let smallerIndex = firstPointIsSmaller ? p1 : p2;\n    let greaterIndex = firstPointIsSmaller ? p2 : p1;\n    let key = (smallerIndex << 32) + greaterIndex;\n\n    let point1 = this.vertices[p1];\n    let point2 = this.vertices[p2];\n    let middle = [\n      (point1[0] + point2[0]) / 2.0,\n      (point1[1] + point2[1]) / 2.0,\n      (point1[2] + point2[2]) / 2.0];\n\n    let i = this.addVertex(middle);\n    this.middlePointIndexCache[key] = i;\n\n    return i;\n  }\n}\n\nexport default new FacesMultiplicator();\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/utils/FacesMultiplicator.js","class FacesSeparator {\n  constructor(){\n  }\n\n  separate(faces, vertices){\n    let triangles = [];\n    let ind = [];\n\n    for (var i = 0; i < faces.length; i++) {\n     triangles.push(faces[i][0], faces[i][1], faces[i][2]);\n     ind.push(faces[i][0], faces[i][1], faces[i][2]);\n    }\n\n    let oldVerts = vertices.slice();\n    let newVertices = [];\n    for (let i = 0; i < triangles.length; i++) {\n      newVertices[i] = oldVerts[triangles[i]].slice();\n      triangles[i] = i;\n    }\n\n    return {faces: triangles, vertices: newVertices}\n  }\n}\n\nexport default new FacesSeparator();\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/utils/FacesSeparator.js","import * as POLY from 'poly/Poly';\nimport MainScene from './scenes/MainScene';\nimport ParticlesScene from './scenes/ParticlesScene';\nimport { Loader } from 'utils';\n\nconst Manifests = require('./manifests/manifest.json');\n\nwindow.ASSET_URL = '../../assets/';\n\nexport default class App\n{\n\tconstructor()\n\t{\n\t\tlet canvas = document.getElementById(\"canvas\");\n\n    \tPOLY.init(canvas);\n\t    this.gl = POLY.gl;\n\n\t    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n\t    this.loader = new Loader();\n\t    this.loader.addManifest(Manifests.default, window.ASSET_URL);\n\t    this.loader.onComplete.add(this._loadComplete, this);\n\t    this.loader.load();\n\t}\n\n\t_loadComplete()\n\t{\n\t\t// this.scene = new MainScene();\n\t\tthis.scene = new ParticlesScene();\n\t\tthis.scene.resize();\n\n\t    POLY.utils.loop.add(this._update.bind(this));\n\t}\n\n\tresize()\n\t{\n\t\tPOLY.GL.resize(this.gl.canvas.clientWidth, this.gl.canvas.clientHeight);\n\n\t\tif(this.scene)\n\t\t{\n\t\t\tthis.scene.resize();\n\t\t}\n\t}\n\n\t_update()\n\t{\n\t\tthis.gl.clearColor(0,0,0,1);\n\t    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n\t\tthis.scene.render();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/App.js","import * as POLY from 'poly/Poly';\nimport frag from '../shaders/basic.frag';\nimport vert from '../shaders/basic.vert';\nimport {mat3, mat4} from 'gl-matrix';\n\nexport default class MainScene\n{\n\tconstructor()\n\t{\n\t\tthis.gl = null;\n\t\tthis.program = null;\n\t\tthis.sphere = null;\n\t\tthis.rot = null;\n\t\tthis.tick = 0;\n\t\tthis.angle = null;\n\n\t\tthis.modelMatrix = mat4.create();\n\n\t\tthis.camera = new POLY.cameras.PerspectiveCamera();\n\t\tthis.camera.perspective(45, POLY.GL.aspectRatio, 0.1, 100.0)\n\t\tthis.orbitalControl = new POLY.control.OrbitalControl(this.camera.matrix);\n\n\t\tthis._matrix = mat4.create();\n\t\tthis.normalMatrix = mat3.create();\n\n\t    this.gl = POLY.gl;\n\n\t\tlet state = new POLY.State(this.gl);\n\t\tstate.depthTest = true;\n\n\t\tthis.fbo = new POLY.FrameBuffer(1024, 1024);\n\n\n\t\tlet vertQuad = `\n\t\t\tprecision mediump float;\n\n\t\t\tattribute vec3 aPosition;\n\t\t\tattribute vec3 aNormal;\n\t\t\tattribute vec2 aUv;\n\t\t\tuniform mat4 modelMatrix;\n\t\t\tuniform mat4 viewMatrix;\n\t\t\tuniform mat4 projectionMatrix;\n\n\t\t\tvarying vec3 vPos;\n\t\t\tvarying vec2 vUv;\n\n\n\t\t\tvoid main(void) {\n\t\t\t\tvPos = aPosition;\n\t\t\t\tvec3 n = aNormal;\n\t\t\t\tvUv = aUv;\n\t\t\t    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(aPosition, 1.0);\n\t\t\t}\n\t\t`\n\n\t\tlet fragQuad = `\n\t\tprecision mediump float;\n\n\t\tuniform sampler2D uTexture;\n\n\t\tvarying vec3 vPos;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 textureColor = texture2D(uTexture, vec2(vUv.s, vUv.t));\n\t\t\tgl_FragColor = textureColor;\n\t\t\t// gl_FragColor = vec4(1.);\n\t\t\t// gl_FragColor.rgb *= uAlpha;\n\t\t}\n\n\t\t`\n\n\n\t\tthis.textureCrate = new POLY.Texture(window.ASSET_URL + 'image/crate.gif');\n\t\tthis.programQuad = new POLY.Program(vertQuad, fragQuad, {\n\t\t\tprojectionMatrix: {\n\t        \tvalue: this.camera.projectionMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        modelMatrix: {\n\t        \tvalue: this.modelMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        viewMatrix: {\n\t        \tvalue: this.camera.matrix,\n\t        \ttype: 'mat4'\n\t        },\n\t\t\tuTexture: {\n\t\t\t\ttype:'texture',\n\t\t\t\tvalue: this.textureCrate\n\t\t\t}\n\t\t});\n\n\t\tthis.quad = new POLY.geometry.Mesh(this.programQuad, state);\n\t\tthis.quad.addPosition([\n\t\t\t-1, -1, 0,\n\t\t\t-1,  1, 0,\n\t\t\t1,  1, 0,\n\t\t\t1, -1, 0\n\t\t], 'aPosition');\n\t\tthis.quad.addAttribute([\n\t\t\t1.0, 0.0,\n\t\t\t1.0, 1.0,\n\t\t\t0.0, 1.0,\n\t\t\t0.0, 0.0,\n\t\t], 'aUv', 2);\n        //\n\t\tthis.quad.addIndices(\n\t\t\t[0,1,2,0,2,3]\n\t\t);\n\n\n\n\t\tthis.texture = new POLY.Texture(window.ASSET_URL + 'image/earth.jpg');\n\t    this.textureSpecular = new POLY.Texture(window.ASSET_URL + 'image/earth-specular.gif');\n\n\t    let uniforms = {\n\t        projectionMatrix: {\n\t        \tvalue: this.camera.projectionMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        normalMatrix: {\n\t        \tvalue: this.normalMatrix,\n\t        \ttype: 'mat3'\n\t        },\n\t        modelMatrix: {\n\t        \tvalue: this.modelMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        viewMatrix: {\n\t        \tvalue: this.camera.matrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        uTexture: {\n\t        \tvalue: this.texture,\n\t        \ttype: 'texture',\n\t\t\t\tindex: 0\n\t        },\n\t        uTextureSpecular: {\n\t        \tvalue: this.textureSpecular,\n\t        \ttype: 'texture',\n\t\t\t\tindex: 1\n\t        },\n\t        uAmbientColor: {\n\t        \tvalue: [.5, .5, .5],\n\t        \ttype: 'vec3'\n\t        },\n\t        uPointLightingLocation: {\n\t        \tvalue: [-2.0, .0, 0.],\n\t        \ttype: 'vec3'\n\t        },\n\t        uPointLightingDiffuseColor: {\n\t        \tvalue: [1., 0, 0],\n\t        \ttype: 'vec3'\n\t        },\n\t        uPointLightingSpecularColor: {\n\t        \tvalue: [5., 5., 5.],\n\t        \ttype: 'vec3'\n\t        },\n\t        uMaterialShininess: {\n\t        \tvalue: 40.,\n\t        \ttype: 'float'\n\t        },\n\t        uAlpha: {\n\t        \tvalue: 1,\n\t        \ttype: 'float'\n\t        }\n\t    }\n\n\t    this.program = new POLY.Program(vert, frag, uniforms);\n    \tthis.sphere = new POLY.geometry.Cube(this.program, {}, state);\n\t}\n\n\trender()\n\t{\n\t\tthis.tick++;\n\n\t\tthis.orbitalControl.update();\n\t\tthis.camera.position[2] += .01;\n\t    // this.program.uniforms.uTexture.bind();\n\n\t\t// set uniforms\n\t\tthis.sphere.rotation.y += .01;\n\n\n\t\tmat4.multiply(this._matrix, this.camera.matrix, this.sphere._matrix);\n\t\tmat3.fromMat4(this.normalMatrix, this._matrix);\n\t\tmat3.transpose(this.normalMatrix, this.normalMatrix);\n\n\t\tthis.fbo.bind();\n\n\t\tthis.program.bind();\n\n\t\tthis.texture.bind(0);\n\t\tthis.textureSpecular.bind(1);\n\t    this.program.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t    this.program.uniforms.viewMatrix = this.camera.matrix;\n\t\tthis.program.uniforms.normalMatrix = this.normalMatrix;\n\t\tthis.program.uniforms.modelMatrix = this.sphere._matrix;\n\n\t   \tPOLY.GL.draw(this.sphere);\n\n\t\tthis.fbo.unbind();\n\n\n\t\tthis.programQuad.bind();\n\t\tthis.fbo.textures[0].bind();\n\t\tthis.programQuad.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t    this.programQuad.uniforms.viewMatrix = this.camera.matrix;\n\t    this.programQuad.uniforms.modelMatrix = this.quad._matrix;\n\t\tPOLY.GL.draw(this.quad);\n\t}\n\n\tresize()\n\t{\n\t\tthis.camera.setAspectRatio(POLY.GL.aspectRatio);\n\t\tthis.quad.scale.set(2 * POLY.GL.aspectRatio, 2, 0);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/scenes/MainScene.js","import * as POLY from 'poly/Poly';\nimport frag from '../shaders/particles.frag';\nimport vert from '../shaders/particles.vert';\nimport simulation_fs from '../shaders/simulation_fs.frag';\nimport simulation_vs from '../shaders/simulation_vs.vert';\nimport render_fs from '../shaders/render.frag';\nimport render_vs from '../shaders/render.vert';\nimport test_fs from '../shaders/test.frag';\nimport test_vs from '../shaders/test.vert';\nimport {mat3, mat4} from 'gl-matrix';\n\nexport default class ParticlesScene\n{\n\tconstructor()\n\t{\n\t\tthis.gl = null;\n\t\tthis.program = null;\n\t\tthis.sphere = null;\n\t\tthis.rot = null;\n\t\tthis.tick = 0;\n\t\tthis.angle = null;\n\n\t\tthis.modelMatrix = mat4.create();\n\n\t\tthis.camera = new POLY.cameras.PerspectiveCamera();\n\t\tthis.camera.perspective(45, POLY.GL.aspectRatio, 0.1, 100.0)\n\t\tthis.orbitalControl = new POLY.control.OrbitalControl(this.camera.matrix);\n\n\t\tthis._matrix = mat4.create();\n\t\tthis.normalMatrix = mat3.create();\n\n\t    this.gl = POLY.gl;\n\n\t\tlet stateRendering = new POLY.State(this.gl);\n        stateRendering.depthTest = true;\n\n\t\tlet width = 1024;\n\t\tlet height = 1024;\n\t\tthis.fbo = new POLY.FrameBuffer(width, height);\n\n        let w = width;\n        let h = height;\n        let len = w * h * 4;\n        let data = new Float32Array( len );\n\n        while( len-- )data[len] = ( Math.random() );\n\n        this.dataTexture = new POLY.DataTexture(data, w, h);\n\n\n        this.simulationProgram = new POLY.Program(simulation_vs, simulation_fs, {\n        \tprojectionMatrix: {\n        \t\tvalue: this.camera.projectionMatrix,\n        \t\ttype: 'mat4'\n        \t},\n\t        modelMatrix: {\n\t        \tvalue: this.modelMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        viewMatrix: {\n\t        \tvalue: this.camera.matrix,\n\t        \ttype: 'mat4'\n\t        }\n        });\n        this.geomSim = new POLY.geometry.Quad(this.simulationProgram, null, stateRendering);\n\n        this.renderingProgram = new POLY.Program(render_vs, render_fs, {\n        \tprojectionMatrix: {\n        \t\tvalue: this.camera.projectionMatrix,\n        \t\ttype: 'mat4'\n        \t},\n\t        modelMatrix: {\n\t        \tvalue: this.modelMatrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        viewMatrix: {\n\t        \tvalue: this.camera.matrix,\n\t        \ttype: 'mat4'\n\t        },\n\t        pointSize: {\n\t        \tvalue: 1,\n\t        \ttype: 'float'\n\t        }\n        });\n\n\n        let l = width * height;\n\t\tlet vertices = new Float32Array(l * 3);\n\t\tfor ( var i = 0; i < l; i++ )\n\t\t{\n            var i3 = i * 3;\n            vertices[ i3 ] = ( i % width ) / width;\n            vertices[ i3 + 1 ] = ( i / width ) / height;\n        }\n\n\n        this.geomRendering = new POLY.geometry.Mesh(this.renderingProgram, stateRendering, POLY.gl.POINTS);\n        this.geomRendering.addPosition(vertices);\n\n\t}\n\n\trender()\n\t{\n\t\tthis.tick++;\n\n\t\tthis.orbitalControl.update();\n\n\t  \tmat3.fromMat4(this.normalMatrix, this._matrix);\n\t\tmat3.transpose(this.normalMatrix, this.normalMatrix);\n\n\t\tthis.fbo.bind();\n\t\tthis.simulationProgram.bind();\n\t\tthis.dataTexture.bind(0);\n\t\tthis.simulationProgram.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t    this.simulationProgram.uniforms.viewMatrix = this.camera.matrix;\n\t   \tPOLY.GL.draw(this.geomSim);\n\t\tthis.fbo.unbind();\n\n\t\tthis.renderingProgram.bind();\n\t\tthis.fbo.textures[0].bind(0);\n\t\tthis.renderingProgram.uniforms.projectionMatrix = this.camera.projectionMatrix;\n\t    this.renderingProgram.uniforms.viewMatrix = this.camera.matrix;\n\t    POLY.GL.draw(this.geomRendering);\n\n\t    this.fbo.clear();\n\t}\n\n\tresize()\n\t{\n\t\tthis.camera.setAspectRatio(POLY.GL.aspectRatio);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/scenes/ParticlesScene.js","class Cache {\n  constructor()\n  {\n    this._json = {};\n    this._text = {};\n  }\n\n  addJson(json, id) \n  {\n    this._json[id] = json;\n  }\n\n  getJson(id) {\n    if (this._json[id]) \n    {\n        return this._json[id];\n    }\n    else \n    {\n        console.warn(id + \" not found in Cache\");\n        return null;\n    }\n  }\n}\n\nexport default Cache;\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/Cache.js","// Complete ripped of GoodboyDigital Loader, Real author of this is Mat Groves <3\nimport Signal from 'signals';\nimport path from 'path';\nimport Cache from './Cache';\nimport ResourceLoader from 'resource-loader';\nimport FontFaceObserver from 'fontfaceobserver';\n\n\nclass Loader {\n\n    constructor(){\n      this.crossdomain = false;\n\n      this.assetsToLoad = [];\n      if(window.XDomainRequest && this.crossdomain)\n      {\n          this.ajaxRequest = new window.XDomainRequest();\n          this.ajaxRequest.timeout = 3000;\n\n          this.ajaxRequest.onerror = function(){};\n\n          this.ajaxRequest.ontimeout = function(){};\n\n          this.ajaxRequest.onprogress = function(){};\n\n      }\n      else if (window.XMLHttpRequest)\n      {\n          this.ajaxRequest = new window.XMLHttpRequest();\n      }\n\n      this.ajaxRequest.onload = this._onFileLoaded.bind(this)\n      this.ajaxRequest.onreadystatechange = function(e){}\n\n      this.fileCount = 0;\n      this.filesToLoad = [];\n\n      this.fontsToLoad = [];\n      // this.pixiAssetsToLoad = [];\n      this.soundsToLoad = [];\n      this.customToLoad = [];\n\n      this.onComplete = new Signal();\n      this.onProgress = new Signal();\n    }\n\n    addFonts(fonts) \n    {\n        this.fontsToLoad = this.fontsToLoad.concat(fonts);\n        return this;\n    }\n\n    addJson(url, id) \n    {\n        var id = id || path.basename(url, path.extname(url));\n\n        var fileData = {url:url, id:id, type:Loader.JSON};\n\n        this.filesToLoad.push(fileData);\n        return this;\n    }\n\n    addAssets(assets)\n    {\n        this.assetsToLoad = this.assetsToLoad.concat(assets);\n        return this;\n    }\n\n    addCSS(url) \n    {\n      var link = document.createElement(\"link\");\n      link.type = \"text/css\";\n      link.rel = \"stylesheet\";\n      link.href = url;\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n\n      return this;\n    }\n\n    load() \n    {\n      this._loadFonts();\n\n    }\n\n    _loadFiles() \n    {\n      this.fileCount = 0;\n\n      if(this.filesToLoad.length) \n      {\n          this._loadNextFile();\n      }\n      else {\n          this._loadAssets();\n      }\n    }\n\n    _loadNextFile() \n    {\n      var fileData = this.filesToLoad[this.fileCount];\n\n      if(fileData.type === Loader.CUSTOM)\n      {\n          fileData.object.onLoaded.addOnce(this._onFileLoaded, this);\n          fileData.object.load();\n      }\n      else\n      {\n          this.ajaxRequest.open('GET',fileData.url,true);\n          this.ajaxRequest.send();\n      }\n    }\n\n    _onFileLoaded() \n    {\n        var fileData = this.filesToLoad[this.fileCount];\n\n        if(fileData.type === Loader.CUSTOM)\n        {\n            // done!\n        }\n        else\n        {\n            if(this.ajaxRequest.status === 0 || this.ajaxRequest.status === 200)\n            {\n                switch(fileData.type)\n                {\n                    case Loader.TEXT:\n\n                        var text = this.ajaxRequest.responseText;\n                        Cache.addText( text, fileData.id );\n\n                    break;\n\n                    case Loader.JSON:\n\n                   //     console.log(this.ajaxRequest.responseText);\n                        var jsonObject = JSON.parse( this.ajaxRequest.responseText );\n                        Cache.addJson( jsonObject, fileData.id );\n\n                    break;\n                }\n            }\n            else\n            {\n                console.warn(\"Loader: \" + fileData.url + \" not found\")\n            }\n        }\n\n        this.fileCount++;\n        this._onProgress();\n\n        if(this.fileCount === this.filesToLoad.length) \n        {\n            // complete!\n            this._loadAssets();\n        }\n        else\n        {\n            this._loadNextFile();\n        }\n    }\n\n    _getFonts(fonts) \n    {\n      var a = [];\n      for (var i = 0; i < fonts.length; i++) \n      {\n        a.push(fonts[i].load());\n      }\n\n      return a;\n    }\n\n    _loadFonts() \n    {\n        if(this.fontsToLoad.length === 0) \n        {\n          this._loadFiles();\n          return;\n        }\n\n        var fonts = [];\n        for (var i = 0; i < this.fontsToLoad.length; i++) \n        {\n          var f = new FontFaceObserver(this.fontsToLoad[i])\n          fonts.push(f);\n        }\n\n        Promise.all(this._getFonts(fonts)).then((fonts)=> {\n          // console.log('Fonts have loaded');\n          this._loadFiles();\n        }, ()=>{\n          // console.log('Issue while loading the fonts');\n          this._loadFiles();\n        });\n    }\n\n    addManifest(manifest, prefix)\n    {\n      let assetsManifest = manifest.map((path)=>{\n        return prefix + path;\n      });\n\n      this.addAssets(assetsManifest);\n\n      return this;\n    }\n\n    _loadAssets()\n    {\n        if(this.assetsToLoad.length === 0)\n        {\n            this._onComplete();\n            return;\n        }\n      \n        this.assetLoader = new ResourceLoader();\n        this.assetLoader.add(this.assetsToLoad);\n        this.assetLoader.on('progress', this._onProgress, this)\n\n        this.assetLoader.load( this._onComplete.bind(this) );\n    }\n\n    _onComplete(l, r) \n    {\n        POLY.loadedResources = r;\n        this.onProgress.dispatch(1);\n        this.onComplete.dispatch();\n    }\n\n    _onProgress() \n    {\n        var total =  this.filesToLoad.length + this.assetsToLoad.length;\n        var loaded = this.fileCount;\n       \n        if(this.assetLoader)\n        {\n            loaded = this.assetLoader.progress;\n        }\n\n        this.onProgress.dispatch(loaded * 0.01);\n    }\n\n\n}\n\n\n// some constants..\nLoader.TEXT = 0;\nLoader.JSON = 1;\nLoader.CUSTOM = 2;\n\nexport default Loader;\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/Loader.js","import Loader from './Loader';\n\nexport {\n\tLoader\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","(function(){function m(a,b){document.addEventListener?a.addEventListener(\"scroll\",b,!1):a.attachEvent(\"scroll\",b)}function n(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):document.attachEvent(\"onreadystatechange\",function l(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",l),a()})};function t(a){this.a=document.createElement(\"div\");this.a.setAttribute(\"aria-hidden\",\"true\");this.a.appendChild(document.createTextNode(a));this.b=document.createElement(\"span\");this.c=document.createElement(\"span\");this.h=document.createElement(\"span\");this.f=document.createElement(\"span\");this.g=-1;this.b.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.c.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.f.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.h.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}\nfunction x(a,b){a.a.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font:\"+b+\";\"}function y(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+\"px\";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function z(a,b){function c(){var a=l;y(a)&&a.a.parentNode&&b(a.g)}var l=a;m(a.b,c);m(a.c,c);y(a)};function A(a,b){var c=b||{};this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\"}var B=null,C=null,E=null,F=null;function I(){if(null===E){var a=document.createElement(\"div\");try{a.style.font=\"condensed 100px sans-serif\"}catch(b){}E=\"\"!==a.style.font}return E}function J(a,b){return[a.style,a.weight,I()?a.stretch:\"\",\"100px\",b].join(\" \")}\nA.prototype.load=function(a,b){var c=this,l=a||\"BESbswy\",r=0,D=b||3E3,G=(new Date).getTime();return new Promise(function(a,b){var e;null===F&&(F=!!document.fonts);if(e=F)null===C&&(C=/OS X.*Version\\/10\\..*Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),e=!C;if(e){e=new Promise(function(a,b){function f(){(new Date).getTime()-G>=D?b():document.fonts.load(J(c,'\"'+c.family+'\"'),l).then(function(c){1<=c.length?a():setTimeout(f,25)},function(){b()})}f()});var K=new Promise(function(a,\nc){r=setTimeout(c,D)});Promise.race([K,e]).then(function(){clearTimeout(r);a(c)},function(){b(c)})}else n(function(){function e(){var b;if(b=-1!=g&&-1!=h||-1!=g&&-1!=k||-1!=h&&-1!=k)(b=g!=h&&g!=k&&h!=k)||(null===B&&(b=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),B=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=B&&(g==u&&h==u&&k==u||g==v&&h==v&&k==v||g==w&&h==w&&k==w)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}\nfunction H(){if((new Date).getTime()-G>=D)d.parentNode&&d.parentNode.removeChild(d),b(c);else{var a=document.hidden;if(!0===a||void 0===a)g=f.a.offsetWidth,h=p.a.offsetWidth,k=q.a.offsetWidth,e();r=setTimeout(H,50)}}var f=new t(l),p=new t(l),q=new t(l),g=-1,h=-1,k=-1,u=-1,v=-1,w=-1,d=document.createElement(\"div\");d.dir=\"ltr\";x(f,J(c,\"sans-serif\"));x(p,J(c,\"serif\"));x(q,J(c,\"monospace\"));d.appendChild(f.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);u=f.a.offsetWidth;v=p.a.offsetWidth;\nw=q.a.offsetWidth;H();z(f,function(a){g=a;e()});x(f,J(c,'\"'+c.family+'\",sans-serif'));z(p,function(a){h=a;e()});x(p,J(c,'\"'+c.family+'\",serif'));z(q,function(a){k=a;e()});x(q,J(c,'\"'+c.family+'\",monospace'))})})};\"undefined\"!==typeof module?module.exports=A:(window.FontFaceObserver=A,window.FontFaceObserver.prototype.load=A.prototype.load);}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fontfaceobserver/fontfaceobserver.standalone.js\n// module id = 21\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n\r\nvar isWindows = process.platform === 'win32';\r\nvar util = require('util');\r\n\r\n\r\n// resolves . and .. elements in a path array with directory names there\r\n// must be no slashes or device names (c:\\) in the array\r\n// (so also no leading and trailing slashes - it does not distinguish\r\n// relative and absolute paths)\r\nfunction normalizeArray(parts, allowAboveRoot) {\r\n  var res = [];\r\n  for (var i = 0; i < parts.length; i++) {\r\n    var p = parts[i];\r\n\r\n    // ignore empty parts\r\n    if (!p || p === '.')\r\n      continue;\r\n\r\n    if (p === '..') {\r\n      if (res.length && res[res.length - 1] !== '..') {\r\n        res.pop();\r\n      } else if (allowAboveRoot) {\r\n        res.push('..');\r\n      }\r\n    } else {\r\n      res.push(p);\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n// returns an array with empty elements removed from either end of the input\r\n// array or the original array if no elements need to be removed\r\nfunction trimArray(arr) {\r\n  var lastIndex = arr.length - 1;\r\n  var start = 0;\r\n  for (; start <= lastIndex; start++) {\r\n    if (arr[start])\r\n      break;\r\n  }\r\n\r\n  var end = lastIndex;\r\n  for (; end >= 0; end--) {\r\n    if (arr[end])\r\n      break;\r\n  }\r\n\r\n  if (start === 0 && end === lastIndex)\r\n    return arr;\r\n  if (start > end)\r\n    return [];\r\n  return arr.slice(start, end + 1);\r\n}\r\n\r\n// Regex to split a windows path into three parts: [*, device, slash,\r\n// tail] windows-only\r\nvar splitDeviceRe =\r\n    /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\r\n\r\n// Regex to split the tail part of the above into [*, dir, basename, ext]\r\nvar splitTailRe =\r\n    /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\r\n\r\nvar win32 = {};\r\n\r\n// Function to split a filename into [root, dir, basename, ext]\r\nfunction win32SplitPath(filename) {\r\n  // Separate device+slash from tail\r\n  var result = splitDeviceRe.exec(filename),\r\n      device = (result[1] || '') + (result[2] || ''),\r\n      tail = result[3] || '';\r\n  // Split the tail into dir, basename and extension\r\n  var result2 = splitTailRe.exec(tail),\r\n      dir = result2[1],\r\n      basename = result2[2],\r\n      ext = result2[3];\r\n  return [device, dir, basename, ext];\r\n}\r\n\r\nfunction win32StatPath(path) {\r\n  var result = splitDeviceRe.exec(path),\r\n      device = result[1] || '',\r\n      isUnc = !!device && device[1] !== ':';\r\n  return {\r\n    device: device,\r\n    isUnc: isUnc,\r\n    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute\r\n    tail: result[3]\r\n  };\r\n}\r\n\r\nfunction normalizeUNCRoot(device) {\r\n  return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\r\n}\r\n\r\n// path.resolve([from ...], to)\r\nwin32.resolve = function() {\r\n  var resolvedDevice = '',\r\n      resolvedTail = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1; i--) {\r\n    var path;\r\n    if (i >= 0) {\r\n      path = arguments[i];\r\n    } else if (!resolvedDevice) {\r\n      path = process.cwd();\r\n    } else {\r\n      // Windows has the concept of drive-specific current working\r\n      // directories. If we've resolved a drive letter but not yet an\r\n      // absolute path, get cwd for that drive. We're sure the device is not\r\n      // an unc path at this points, because unc paths are always absolute.\r\n      path = process.env['=' + resolvedDevice];\r\n      // Verify that a drive-local cwd was found and that it actually points\r\n      // to our drive. If not, default to the drive's root.\r\n      if (!path || path.substr(0, 3).toLowerCase() !==\r\n          resolvedDevice.toLowerCase() + '\\\\') {\r\n        path = resolvedDevice + '\\\\';\r\n      }\r\n    }\r\n\r\n    // Skip empty and invalid entries\r\n    if (!util.isString(path)) {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    var result = win32StatPath(path),\r\n        device = result.device,\r\n        isUnc = result.isUnc,\r\n        isAbsolute = result.isAbsolute,\r\n        tail = result.tail;\r\n\r\n    if (device &&\r\n        resolvedDevice &&\r\n        device.toLowerCase() !== resolvedDevice.toLowerCase()) {\r\n      // This path points to another device so it is not applicable\r\n      continue;\r\n    }\r\n\r\n    if (!resolvedDevice) {\r\n      resolvedDevice = device;\r\n    }\r\n    if (!resolvedAbsolute) {\r\n      resolvedTail = tail + '\\\\' + resolvedTail;\r\n      resolvedAbsolute = isAbsolute;\r\n    }\r\n\r\n    if (resolvedDevice && resolvedAbsolute) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Convert slashes to backslashes when `resolvedDevice` points to an UNC\r\n  // root. Also squash multiple slashes into a single one where appropriate.\r\n  if (isUnc) {\r\n    resolvedDevice = normalizeUNCRoot(resolvedDevice);\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path,\r\n  // but handle relative paths to be safe (might happen when process.cwd()\r\n  // fails)\r\n\r\n  // Normalize the tail path\r\n  resolvedTail = normalizeArray(resolvedTail.split(/[\\\\\\/]+/),\r\n                                !resolvedAbsolute).join('\\\\');\r\n\r\n  return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\r\n         '.';\r\n};\r\n\r\n\r\nwin32.normalize = function(path) {\r\n  var result = win32StatPath(path),\r\n      device = result.device,\r\n      isUnc = result.isUnc,\r\n      isAbsolute = result.isAbsolute,\r\n      tail = result.tail,\r\n      trailingSlash = /[\\\\\\/]$/.test(tail);\r\n\r\n  // Normalize the tail path\r\n  tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\r\n\r\n  if (!tail && !isAbsolute) {\r\n    tail = '.';\r\n  }\r\n  if (tail && trailingSlash) {\r\n    tail += '\\\\';\r\n  }\r\n\r\n  // Convert slashes to backslashes when `device` points to an UNC root.\r\n  // Also squash multiple slashes into a single one where appropriate.\r\n  if (isUnc) {\r\n    device = normalizeUNCRoot(device);\r\n  }\r\n\r\n  return device + (isAbsolute ? '\\\\' : '') + tail;\r\n};\r\n\r\n\r\nwin32.isAbsolute = function(path) {\r\n  return win32StatPath(path).isAbsolute;\r\n};\r\n\r\nwin32.join = function() {\r\n  var paths = [];\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var arg = arguments[i];\r\n    if (!util.isString(arg)) {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    if (arg) {\r\n      paths.push(arg);\r\n    }\r\n  }\r\n\r\n  var joined = paths.join('\\\\');\r\n\r\n  // Make sure that the joined path doesn't start with two slashes, because\r\n  // normalize() will mistake it for an UNC path then.\r\n  //\r\n  // This step is skipped when it is very clear that the user actually\r\n  // intended to point at an UNC path. This is assumed when the first\r\n  // non-empty string arguments starts with exactly two slashes followed by\r\n  // at least one more non-slash character.\r\n  //\r\n  // Note that for normalize() to treat a path as an UNC path it needs to\r\n  // have at least 2 components, so we don't filter for that here.\r\n  // This means that the user can use join to construct UNC paths from\r\n  // a server name and a share name; for example:\r\n  //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\')\r\n  if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\r\n    joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\r\n  }\r\n\r\n  return win32.normalize(joined);\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// it will solve the relative path from 'from' to 'to', for instance:\r\n// from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n// to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\nwin32.relative = function(from, to) {\r\n  from = win32.resolve(from);\r\n  to = win32.resolve(to);\r\n\r\n  // windows is not case sensitive\r\n  var lowerFrom = from.toLowerCase();\r\n  var lowerTo = to.toLowerCase();\r\n\r\n  var toParts = trimArray(to.split('\\\\'));\r\n\r\n  var lowerFromParts = trimArray(lowerFrom.split('\\\\'));\r\n  var lowerToParts = trimArray(lowerTo.split('\\\\'));\r\n\r\n  var length = Math.min(lowerFromParts.length, lowerToParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (lowerFromParts[i] !== lowerToParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (samePartsLength == 0) {\r\n    return to;\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < lowerFromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('\\\\');\r\n};\r\n\r\n\r\nwin32._makeLong = function(path) {\r\n  // Note: this will *probably* throw somewhere.\r\n  if (!util.isString(path))\r\n    return path;\r\n\r\n  if (!path) {\r\n    return '';\r\n  }\r\n\r\n  var resolvedPath = win32.resolve(path);\r\n\r\n  if (/^[a-zA-Z]\\:\\\\/.test(resolvedPath)) {\r\n    // path is local filesystem path, which needs to be converted\r\n    // to long UNC path.\r\n    return '\\\\\\\\?\\\\' + resolvedPath;\r\n  } else if (/^\\\\\\\\[^?.]/.test(resolvedPath)) {\r\n    // path is network UNC path, which needs to be converted\r\n    // to long UNC path.\r\n    return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.substring(2);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\n\r\nwin32.dirname = function(path) {\r\n  var result = win32SplitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n};\r\n\r\n\r\nwin32.basename = function(path, ext) {\r\n  var f = win32SplitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\n\r\nwin32.extname = function(path) {\r\n  return win32SplitPath(path)[3];\r\n};\r\n\r\n\r\nwin32.format = function(pathObject) {\r\n  if (!util.isObject(pathObject)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n    );\r\n  }\r\n\r\n  var root = pathObject.root || '';\r\n\r\n  if (!util.isString(root)) {\r\n    throw new TypeError(\r\n        \"'pathObject.root' must be a string or undefined, not \" +\r\n        typeof pathObject.root\r\n    );\r\n  }\r\n\r\n  var dir = pathObject.dir;\r\n  var base = pathObject.base || '';\r\n  if (!dir) {\r\n    return base;\r\n  }\r\n  if (dir[dir.length - 1] === win32.sep) {\r\n    return dir + base;\r\n  }\r\n  return dir + win32.sep + base;\r\n};\r\n\r\n\r\nwin32.parse = function(pathString) {\r\n  if (!util.isString(pathString)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = win32SplitPath(pathString);\r\n  if (!allParts || allParts.length !== 4) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  return {\r\n    root: allParts[0],\r\n    dir: allParts[0] + allParts[1].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[3],\r\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n  };\r\n};\r\n\r\n\r\nwin32.sep = '\\\\';\r\nwin32.delimiter = ';';\r\n\r\n\r\n// Split a filename into [root, dir, basename, ext], unix version\r\n// 'root' is just a slash, or nothing.\r\nvar splitPathRe =\r\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\nvar posix = {};\r\n\r\n\r\nfunction posixSplitPath(filename) {\r\n  return splitPathRe.exec(filename).slice(1);\r\n}\r\n\r\n\r\n// path.resolve([from ...], to)\r\n// posix version\r\nposix.resolve = function() {\r\n  var resolvedPath = '',\r\n      resolvedAbsolute = false;\r\n\r\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n    var path = (i >= 0) ? arguments[i] : process.cwd();\r\n\r\n    // Skip empty and invalid entries\r\n    if (!util.isString(path)) {\r\n      throw new TypeError('Arguments to path.resolve must be strings');\r\n    } else if (!path) {\r\n      continue;\r\n    }\r\n\r\n    resolvedPath = path + '/' + resolvedPath;\r\n    resolvedAbsolute = path[0] === '/';\r\n  }\r\n\r\n  // At this point the path should be resolved to a full absolute path, but\r\n  // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n  // Normalize the path\r\n  resolvedPath = normalizeArray(resolvedPath.split('/'),\r\n                                !resolvedAbsolute).join('/');\r\n\r\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n};\r\n\r\n// path.normalize(path)\r\n// posix version\r\nposix.normalize = function(path) {\r\n  var isAbsolute = posix.isAbsolute(path),\r\n      trailingSlash = path && path[path.length - 1] === '/';\r\n\r\n  // Normalize the path\r\n  path = normalizeArray(path.split('/'), !isAbsolute).join('/');\r\n\r\n  if (!path && !isAbsolute) {\r\n    path = '.';\r\n  }\r\n  if (path && trailingSlash) {\r\n    path += '/';\r\n  }\r\n\r\n  return (isAbsolute ? '/' : '') + path;\r\n};\r\n\r\n// posix version\r\nposix.isAbsolute = function(path) {\r\n  return path.charAt(0) === '/';\r\n};\r\n\r\n// posix version\r\nposix.join = function() {\r\n  var path = '';\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    var segment = arguments[i];\r\n    if (!util.isString(segment)) {\r\n      throw new TypeError('Arguments to path.join must be strings');\r\n    }\r\n    if (segment) {\r\n      if (!path) {\r\n        path += segment;\r\n      } else {\r\n        path += '/' + segment;\r\n      }\r\n    }\r\n  }\r\n  return posix.normalize(path);\r\n};\r\n\r\n\r\n// path.relative(from, to)\r\n// posix version\r\nposix.relative = function(from, to) {\r\n  from = posix.resolve(from).substr(1);\r\n  to = posix.resolve(to).substr(1);\r\n\r\n  var fromParts = trimArray(from.split('/'));\r\n  var toParts = trimArray(to.split('/'));\r\n\r\n  var length = Math.min(fromParts.length, toParts.length);\r\n  var samePartsLength = length;\r\n  for (var i = 0; i < length; i++) {\r\n    if (fromParts[i] !== toParts[i]) {\r\n      samePartsLength = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var outputParts = [];\r\n  for (var i = samePartsLength; i < fromParts.length; i++) {\r\n    outputParts.push('..');\r\n  }\r\n\r\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n  return outputParts.join('/');\r\n};\r\n\r\n\r\nposix._makeLong = function(path) {\r\n  return path;\r\n};\r\n\r\n\r\nposix.dirname = function(path) {\r\n  var result = posixSplitPath(path),\r\n      root = result[0],\r\n      dir = result[1];\r\n\r\n  if (!root && !dir) {\r\n    // No dirname whatsoever\r\n    return '.';\r\n  }\r\n\r\n  if (dir) {\r\n    // It has a dirname, strip trailing slash\r\n    dir = dir.substr(0, dir.length - 1);\r\n  }\r\n\r\n  return root + dir;\r\n};\r\n\r\n\r\nposix.basename = function(path, ext) {\r\n  var f = posixSplitPath(path)[2];\r\n  // TODO: make this comparison case-insensitive on windows?\r\n  if (ext && f.substr(-1 * ext.length) === ext) {\r\n    f = f.substr(0, f.length - ext.length);\r\n  }\r\n  return f;\r\n};\r\n\r\n\r\nposix.extname = function(path) {\r\n  return posixSplitPath(path)[3];\r\n};\r\n\r\n\r\nposix.format = function(pathObject) {\r\n  if (!util.isObject(pathObject)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\r\n    );\r\n  }\r\n\r\n  var root = pathObject.root || '';\r\n\r\n  if (!util.isString(root)) {\r\n    throw new TypeError(\r\n        \"'pathObject.root' must be a string or undefined, not \" +\r\n        typeof pathObject.root\r\n    );\r\n  }\r\n\r\n  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';\r\n  var base = pathObject.base || '';\r\n  return dir + base;\r\n};\r\n\r\n\r\nposix.parse = function(pathString) {\r\n  if (!util.isString(pathString)) {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = posixSplitPath(pathString);\r\n  if (!allParts || allParts.length !== 4) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  allParts[1] = allParts[1] || '';\r\n  allParts[2] = allParts[2] || '';\r\n  allParts[3] = allParts[3] || '';\r\n\r\n  return {\r\n    root: allParts[0],\r\n    dir: allParts[0] + allParts[1].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[3],\r\n    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\r\n  };\r\n};\r\n\r\n\r\nposix.sep = '/';\r\nposix.delimiter = ':';\r\n\r\n\r\nif (isWindows)\r\n  module.exports = win32;\r\nelse /* posix */\r\n  module.exports = posix;\r\n\r\nmodule.exports.posix = posix;\r\nmodule.exports.win32 = win32;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/path/path.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar parseUri        = require('parse-uri');\nvar async           = require('./async');\nvar Resource        = require('./Resource');\nvar EventEmitter    = require('eventemitter3');\n\n// some constants\nvar DEFAULT_CONCURRENCY = 10;\nvar MAX_PROGRESS = 100;\n\n/**\n * Manages the state and loading of multiple resources to load.\n *\n * @class\n * @param {string} [baseUrl=''] - The base url for all resources loaded by this loader.\n * @param {number} [concurrency=10] - The number of resources to load concurrently.\n */\nfunction Loader(baseUrl, concurrency) {\n    EventEmitter.call(this);\n\n    concurrency = concurrency || DEFAULT_CONCURRENCY;\n\n    /**\n     * The base url for all resources loaded by this loader.\n     *\n     * @member {string}\n     */\n    this.baseUrl = baseUrl || '';\n\n    /**\n     * The progress percent of the loader going through the queue.\n     *\n     * @member {number}\n     */\n    this.progress = 0;\n\n    /**\n     * Loading state of the loader, true if it is currently loading resources.\n     *\n     * @member {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * The percentage of total progress that a single resource represents.\n     *\n     * @member {number}\n     */\n    this._progressChunk = 0;\n\n    /**\n     * The middleware to run before loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._beforeMiddleware = [];\n\n    /**\n     * The middleware to run after loading each resource.\n     *\n     * @member {function[]}\n     */\n    this._afterMiddleware = [];\n\n    /**\n     * The `_loadResource` function bound with this object context.\n     *\n     * @private\n     * @member {function}\n     */\n    this._boundLoadResource = this._loadResource.bind(this);\n\n    /**\n     * The resource buffer that fills until `load` is called to start loading resources.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._buffer = [];\n\n    /**\n     * Used to track load completion.\n     *\n     * @private\n     * @member {number}\n     */\n    this._numToLoad = 0;\n\n    /**\n     * The resources waiting to be loaded.\n     *\n     * @private\n     * @member {Resource[]}\n     */\n    this._queue = async.queue(this._boundLoadResource, concurrency);\n\n    /**\n     * All the resources for this loader keyed by name.\n     *\n     * @member {object<string, Resource>}\n     */\n    this.resources = {};\n\n    /**\n     * Emitted once per loaded or errored resource.\n     *\n     * @event progress\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per errored resource.\n     *\n     * @event error\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted once per loaded resource.\n     *\n     * @event load\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the loader begins to process the queue.\n     *\n     * @event start\n     * @memberof Loader#\n     */\n\n    /**\n     * Emitted when the queued resources all load.\n     *\n     * @event complete\n     * @memberof Loader#\n     */\n}\n\nLoader.prototype = Object.create(EventEmitter.prototype);\nLoader.prototype.constructor = Loader;\nmodule.exports = Loader;\n\n/**\n * Adds a resource (or multiple resources) to the loader queue.\n *\n * This function can take a wide variety of different parameters. The only thing that is always\n * required the url to load. All the following will work:\n *\n * ```js\n * loader\n *     // normal param syntax\n *     .add('key', 'http://...', function () {})\n *     .add('http://...', function () {})\n *     .add('http://...')\n *\n *     // object syntax\n *     .add({\n *         name: 'key2',\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         url: 'http://...'\n *     }, function () {})\n *     .add({\n *         name: 'key3',\n *         url: 'http://...'\n *         onComplete: function () {}\n *     })\n *     .add({\n *         url: 'https://...',\n *         onComplete: function () {},\n *         crossOrigin: true\n *     })\n *\n *     // you can also pass an array of objects or urls or both\n *     .add([\n *         { name: 'key4', url: 'http://...', onComplete: function () {} },\n *         { url: 'http://...', onComplete: function () {} },\n *         'http://...'\n *     ])\n *\n *     // and you can use both params and options\n *     .add('key', 'http://...', { crossOrigin: true }, function () {})\n *     .add('http://...', { crossOrigin: true }, function () {});\n * ```\n *\n * @alias enqueue\n * @param {string} [name] - The name of the resource to load, if not passed the url is used.\n * @param {string} [url] - The url for this resource, relative to the baseUrl of this loader.\n * @param {object} [options] - The options for the load.\n * @param {boolean} [options.crossOrigin] - Is this request cross-origin? Default is to determine automatically.\n * @param {Resource.XHR_LOAD_TYPE} [options.loadType=Resource.LOAD_TYPE.XHR] - How should this resource be loaded?\n * @param {Resource.XHR_RESPONSE_TYPE} [options.xhrType=Resource.XHR_RESPONSE_TYPE.DEFAULT] - How should the data being\n *      loaded be interpreted when using XHR?\n * @param {function} [cb] - Function to call when this specific resource completes loading.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.add = Loader.prototype.enqueue = function (name, url, options, cb) {\n    // special case of an array of objects or urls\n    if (Array.isArray(name)) {\n        for (var i = 0; i < name.length; ++i) {\n            this.add(name[i]);\n        }\n\n        return this;\n    }\n\n    // if an object is passed instead of params\n    if (typeof name === 'object') {\n        cb = url || name.callback || name.onComplete;\n        options = name;\n        url = name.url;\n        name = name.name || name.key || name.url;\n    }\n\n    // case where no name is passed shift all args over by one.\n    if (typeof url !== 'string') {\n        cb = options;\n        options = url;\n        url = name;\n    }\n\n    // now that we shifted make sure we have a proper url.\n    if (typeof url !== 'string') {\n        throw new Error('No url passed to add resource to loader.');\n    }\n\n    // options are optional so people might pass a function and no options\n    if (typeof options === 'function') {\n        cb = options;\n        options = null;\n    }\n\n    // check if resource already exists.\n    if (this.resources[name]) {\n        throw new Error('Resource with name \"' + name + '\" already exists.');\n    }\n\n    // add base url if this isn't an absolute url\n    url = this._prepareUrl(url);\n\n    // create the store the resource\n    this.resources[name] = new Resource(name, url, options);\n\n    if (typeof cb === 'function') {\n        this.resources[name].once('afterMiddleware', cb);\n    }\n\n    this._numToLoad++;\n\n    // if already loading add it to the worker queue\n    if (this._queue.started) {\n        this._queue.push(this.resources[name]);\n        this._progressChunk = (MAX_PROGRESS - this.progress) / (this._queue.length() + this._queue.running());\n    }\n    // otherwise buffer it to be added to the queue later\n    else {\n        this._buffer.push(this.resources[name]);\n        this._progressChunk = MAX_PROGRESS / this._buffer.length;\n    }\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *before* the\n * resource is loaded.\n *\n * @alias pre\n * @method before\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.before = Loader.prototype.pre = function (fn) {\n    this._beforeMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Sets up a middleware function that will run *after* the\n * resource is loaded.\n *\n * @alias use\n * @method after\n * @param {function} fn - The middleware function to register.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.after = Loader.prototype.use = function (fn) {\n    this._afterMiddleware.push(fn);\n\n    return this;\n};\n\n/**\n * Resets the queue of the loader to prepare for a new load.\n *\n * @return {Loader} Returns itself.\n */\nLoader.prototype.reset = function () {\n    // this.baseUrl = baseUrl || '';\n\n    this.progress = 0;\n\n    this.loading = false;\n\n    this._progressChunk = 0;\n\n    // this._beforeMiddleware.length = 0;\n    // this._afterMiddleware.length = 0;\n\n    this._buffer.length = 0;\n\n    this._numToLoad = 0;\n\n    this._queue.kill();\n    this._queue.started = false;\n\n    // abort all resource loads\n    for (var k in this.resources) {\n        var res = this.resources[k];\n\n        res.off('complete', this._onLoad, this);\n\n        if (res.isLoading) {\n            res.abort();\n        }\n    }\n\n    this.resources = {};\n\n    return this;\n};\n\n/**\n * Starts loading the queued resources.\n *\n * @fires start\n * @param {function} [cb] - Optional callback that will be bound to the `complete` event.\n * @return {Loader} Returns itself.\n */\nLoader.prototype.load = function (cb) {\n    // register complete callback if they pass one\n    if (typeof cb === 'function') {\n        this.once('complete', cb);\n    }\n\n    // if the queue has already started we are done here\n    if (this._queue.started) {\n        return this;\n    }\n\n    // notify of start\n    this.emit('start', this);\n\n    // update loading state\n    this.loading = true;\n\n    // start the internal queue\n    for (var i = 0; i < this._buffer.length; ++i) {\n        this._queue.push(this._buffer[i]);\n    }\n\n    // empty the buffer\n    this._buffer.length = 0;\n\n    return this;\n};\n\n/**\n * Prepares a url for usage based on the configuration of this object\n *\n * @private\n * @param {string} url - The url to prepare.\n * @return {string} The prepared url.\n */\nLoader.prototype._prepareUrl = function (url) {\n    var parsedUrl = parseUri(url, { strictMode: true });\n\n    // absolute url, just use it as is.\n    if (parsedUrl.protocol || !parsedUrl.path || parsedUrl.path.indexOf('//') === 0) {\n        return url;\n    }\n\n    // if baseUrl doesn't end in slash and url doesn't start with slash, then add a slash inbetween\n    if (this.baseUrl.length\n        && this.baseUrl.lastIndexOf('/') !== this.baseUrl.length - 1\n        && url.charAt(0) !== '/'\n    ) {\n        return this.baseUrl + '/' + url;\n    }\n\n    return this.baseUrl + url;\n};\n\n/**\n * Loads a single resource.\n *\n * @private\n * @param {Resource} resource - The resource to load.\n * @param {function} dequeue - The function to call when we need to dequeue this item.\n */\nLoader.prototype._loadResource = function (resource, dequeue) {\n    var self = this;\n\n    resource._dequeue = dequeue;\n\n    // run before middleware\n    async.eachSeries(\n        this._beforeMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, function () {\n                // if the before middleware marks the resource as complete,\n                // break and don't process any more before middleware\n                next(resource.isComplete ? {} : null);\n            });\n        },\n        function () {\n            // resource.on('progress', self.emit.bind(self, 'progress'));\n\n            if (resource.isComplete) {\n                self._onLoad(resource);\n            }\n            else {\n                resource.once('complete', self._onLoad, self);\n                resource.load();\n            }\n        }\n    );\n};\n\n/**\n * Called once each resource has loaded.\n *\n * @fires complete\n * @private\n */\nLoader.prototype._onComplete = function () {\n    this.loading = false;\n\n    this.emit('complete', this, this.resources);\n};\n\n/**\n * Called each time a resources is loaded.\n *\n * @fires progress\n * @fires error\n * @fires load\n * @private\n * @param {Resource} resource - The resource that was loaded\n */\nLoader.prototype._onLoad = function (resource) {\n    var self = this;\n\n    // run middleware, this *must* happen before dequeue so sub-assets get added properly\n    async.eachSeries(\n        this._afterMiddleware,\n        function (fn, next) {\n            fn.call(self, resource, next);\n        },\n        function () {\n            resource.emit('afterMiddleware', resource);\n\n            self._numToLoad--;\n\n            self.progress += self._progressChunk;\n            self.emit('progress', self, resource);\n\n            if (resource.error) {\n                self.emit('error', resource.error, self, resource);\n            }\n            else {\n                self.emit('load', self, resource);\n            }\n\n            // do completion check\n            if (self._numToLoad === 0) {\n                self.progress = 100;\n                self._onComplete();\n            }\n        }\n    );\n\n    // remove this resource from the async queue\n    resource._dequeue();\n};\n\nLoader.LOAD_TYPE = Resource.LOAD_TYPE;\nLoader.XHR_RESPONSE_TYPE = Resource.XHR_RESPONSE_TYPE;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/Loader.js\n// module id = 23\n// module chunks = 0","/* eslint no-magic-numbers: 0 */\n'use strict';\n\nmodule.exports = {\n    // private property\n    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\n    encodeBinary: function (input) {\n        var output = '';\n        var bytebuffer;\n        var encodedCharIndexes = new Array(4);\n        var inx = 0;\n        var jnx = 0;\n        var paddingBytes = 0;\n\n        while (inx < input.length) {\n            // Fill byte buffer array\n            bytebuffer = new Array(3);\n\n            for (jnx = 0; jnx < bytebuffer.length; jnx++) {\n                if (inx < input.length) {\n                    // throw away high-order byte, as documented at:\n                    // https://developer.mozilla.org/En/Using_XMLHttpRequest#Handling_binary_data\n                    bytebuffer[jnx] = input.charCodeAt(inx++) & 0xff;\n                }\n                else {\n                    bytebuffer[jnx] = 0;\n                }\n            }\n\n            // Get each encoded character, 6 bits at a time\n            // index 1: first 6 bits\n            encodedCharIndexes[0] = bytebuffer[0] >> 2;\n            // index 2: second 6 bits (2 least significant bits from input byte 1 + 4 most significant bits from byte 2)\n            encodedCharIndexes[1] = ((bytebuffer[0] & 0x3) << 4) | (bytebuffer[1] >> 4);\n            // index 3: third 6 bits (4 least significant bits from input byte 2 + 2 most significant bits from byte 3)\n            encodedCharIndexes[2] = ((bytebuffer[1] & 0x0f) << 2) | (bytebuffer[2] >> 6);\n            // index 3: forth 6 bits (6 least significant bits from input byte 3)\n            encodedCharIndexes[3] = bytebuffer[2] & 0x3f;\n\n            // Determine whether padding happened, and adjust accordingly\n            paddingBytes = inx - (input.length - 1);\n            switch (paddingBytes) {\n                case 2:\n                    // Set last 2 characters to padding char\n                    encodedCharIndexes[3] = 64;\n                    encodedCharIndexes[2] = 64;\n                    break;\n\n                case 1:\n                    // Set last character to padding char\n                    encodedCharIndexes[3] = 64;\n                    break;\n\n                default:\n                    break; // No padding - proceed\n            }\n\n            // Now we will grab each appropriate character out of our keystring\n            // based on our index array and append it to the output string\n            for (jnx = 0; jnx < encodedCharIndexes.length; jnx++) {\n                output += this._keyStr.charAt(encodedCharIndexes[jnx]);\n            }\n        }\n\n        return output;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/b64.js\n// module id = 24\n// module chunks = 0","/* eslint global-require: 0 */\n'use strict';\n\nmodule.exports = require('./Loader');\nmodule.exports.Resource = require('./Resource');\nmodule.exports.middleware = {\n    caching: {\n        memory: require('./middlewares/caching/memory')\n    },\n    parsing: {\n        blob: require('./middlewares/parsing/blob')\n    }\n};\n\nmodule.exports.async = require('./async');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/index.js\n// module id = 25\n// module chunks = 0","'use strict';\n\n// a simple in-memory cache for resources\nvar cache = {};\n\nmodule.exports = function () {\n    return function (resource, next) {\n        // if cached, then set data and complete the resource\n        if (cache[resource.url]) {\n            resource.data = cache[resource.url];\n            resource.complete(); // marks resource load complete and stops processing before middlewares\n        }\n        // if not cached, wait for complete and store it in the cache.\n        else {\n            resource.once('complete', function () {\n                cache[this.url] = this.data;\n            });\n        }\n\n        next();\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/middlewares/caching/memory.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nvar Resource = require('../../Resource');\nvar b64 = require('../../b64');\n\nvar Url = window.URL || window.webkitURL;\n\n// a middleware for transforming XHR loaded Blobs into more useful objects\n\nmodule.exports = function () {\n    return function (resource, next) {\n        if (!resource.data) {\n            next();\n\n            return;\n        }\n\n        // if this was an XHR load of a blob\n        if (resource.xhr && resource.xhrType === Resource.XHR_RESPONSE_TYPE.BLOB) {\n            // if there is no blob support we probably got a binary string back\n            if (!window.Blob || typeof resource.data === 'string') {\n                var type = resource.xhr.getResponseHeader('content-type');\n\n                // this is an image, convert the binary string into a data url\n                if (type && type.indexOf('image') === 0) {\n                    resource.data = new Image();\n                    resource.data.src = 'data:' + type + ';base64,' + b64.encodeBinary(resource.xhr.responseText);\n\n                    resource.isImage = true;\n\n                    // wait until the image loads and then callback\n                    resource.data.onload = function () {\n                        resource.data.onload = null;\n\n                        next();\n                    };\n\n                    // next will be called on load\n                    return;\n                }\n            }\n            // if content type says this is an image, then we should transform the blob into an Image object\n            else if (resource.data.type.indexOf('image') === 0) {\n                var src = Url.createObjectURL(resource.data);\n\n                resource.blob = resource.data;\n                resource.data = new Image();\n                resource.data.src = src;\n\n                resource.isImage = true;\n\n                // cleanup the no longer used blob after the image loads\n                resource.data.onload = function () {\n                    Url.revokeObjectURL(src);\n                    resource.data.onload = null;\n\n                    next();\n                };\n\n                // next will be called on load.\n                return;\n            }\n        }\n\n        next();\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/resource-loader/src/middlewares/parsing/blob.js\n// module id = 27\n// module chunks = 0","/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define(function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/signals/dist/signals.js\n// module id = 28\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 29\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 30\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 31\n// module chunks = 0","module.exports = {\"default\":[\"image/./crate.gif\",\"image/./earth-specular.gif\",\"image/./earth.jpg\",\"image/./glass.gif\",\"image/./nehe.gif\"]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/manifests/manifest.json\n// module id = 32\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\n\\nuniform sampler2D uTexture;\\nuniform sampler2D uTextureSpecular;\\nuniform float uAlpha;\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec3 vNormal;\\n\\n\\nuniform vec3 uAmbientColor;\\nuniform vec3 uPointLightingLocation;\\nuniform vec3 uPointLightingSpecularColor;\\nuniform vec3 uPointLightingDiffuseColor;\\nuniform float uMaterialShininess;\\n\\nvoid main(void) {\\n\\n\\tfloat shininess = texture2D(uTextureSpecular, vec2(vUv.s, vUv.t)).r * 255.0;\\n\\n\\n\\tvec4 textureColor = texture2D(uTexture, vec2(vUv.s, vUv.t));\\n\\n\\tvec3 lightDirection = normalize(uPointLightingLocation - vPos.xyz);\\n    float directionalLightWeighting = max(dot(normalize(vNormal), lightDirection), 0.0);\\n\\n\\tvec3 normal = normalize(vNormal);\\n\\n\\tfloat specularLightWeighting = 0.;\\n\\n\\tif (shininess < 255.0)\\n\\t{\\n\\t\\tvec3 eyeDirection = normalize(-vPos.xyz);\\n\\t\\tvec3 reflectionDirection = reflect(-lightDirection, normal);\\n\\t\\tspecularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), 0.);\\n\\n        specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\\n    }\\n\\n\\n\\tfloat diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);\\n\\n\\tvec3 lightWeighting = uAmbientColor\\n        + uPointLightingSpecularColor * specularLightWeighting;\\n        + uPointLightingDiffuseColor * diffuseLightWeighting;\\n\\n\\t// gl_FragColor = vec4(textureColor.rgb * lightWeighting, textureColor.a);\\n\\t// gl_FragColor.rgb *= specularLightWeighting;\\n\\tgl_FragColor = vec4(textureColor.rgb * lightWeighting, textureColor.a * uAlpha);\\n\\tgl_FragColor.rgb *= uAlpha;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/basic.frag\n// module id = 33\n// module chunks = 0","module.exports = \"\\nattribute vec3 aPosition;\\nattribute vec2 aUv;\\nattribute vec3 aNormal;\\n\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat3 normalMatrix;\\n\\nvarying vec3 vPos;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvUv = aUv;\\n\\n\\tvec3 transformedNormal = aNormal * normalMatrix;\\n\\tvNormal = transformedNormal;\\n\\tvec4 mvPosition =  viewMatrix * modelMatrix * vec4(aPosition, 1.0);\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/basic.vert\n// module id = 34\n// module chunks = 0","module.exports = \"precision highp float;\\n\\n\\nvarying vec3 vPos;\\n\\n\\nvoid main(void) {\\n\\n\\t gl_FragColor = vec4(1.);\\n\\t}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/particles.frag\n// module id = 35\n// module chunks = 0","module.exports = \"\\nattribute vec3 aPosition;\\n\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat3 normalMatrix;\\n\\nvarying vec3 vPos;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvec4 mvPosition =  viewMatrix * modelMatrix * vec4(aPosition, 1.0);\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/particles.vert\n// module id = 36\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\nvoid main() {\\n\\n    gl_FragColor = vec4( 1., 1., 1., .8 );\\n    gl_FragColor.rgb *= .8;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/render.frag\n// module id = 37\n// module chunks = 0","module.exports = \"precision mediump float;\\n// attribute vec3 aPosition;\\n// attribute vec2 aUv;\\n\\n// uniform mat4 projectionMatrix;\\n// uniform mat4 modelMatrix;\\n// uniform mat4 viewMatrix;\\n\\n// uniform sampler2D positions;\\n// uniform float pointSize;\\n\\n// void main() {\\n//     vec3 pos = texture2D( positions, aPosition.xy ).xyz;\\n//     //pos now contains a 3D position in space, we can use it as a regular vertex\\n\\n//     //regular projection of our position\\n//     gl_Position = projectionMatrix * modelMatrix * viewMatrix * vec4( pos, 1.0 );\\n\\n//     //sets the point size\\n//     gl_PointSize = pointSize;\\n// }\\n\\nattribute vec3 aPosition;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\n\\nuniform float pointSize;\\n\\nuniform sampler2D positions;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n\\t// vec3 pos = aPosition;\\n\\tvec3 pos = texture2D( positions, aPosition.xy ).xyz;\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( pos, 1.0 );\\n\\n    gl_PointSize = pointSize;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/render.vert\n// module id = 38\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\nuniform sampler2D uPositionsTexture;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n \\n    //basic simulation: displays the particles in place.\\n    vec3 pos = texture2D( uPositionsTexture, vUv ).rgb;\\n    /*\\n        we can move the particle here \\n    */\\n    gl_FragColor = vec4( pos,1.0 );\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/simulation_fs.frag\n// module id = 39\n// module chunks = 0","module.exports = \"precision mediump float;\\nattribute vec3 aPosition;\\nattribute vec2 aUv;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelMatrix;\\nuniform mat4 viewMatrix;\\n\\nvarying vec2 vUv;\\nvoid main() {\\n    vUv = vec2(aUv.x, aUv.y);\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4( aPosition, 1.0 );\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/simulation_vs.vert\n// module id = 40\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\nuniform sampler2D uTexture;\\n\\nvarying vec3 vPos;\\nvarying vec2 vUv;\\n\\nvoid main(void) {\\n\\n\\tvec4 textureColor = texture2D(uTexture, vec2(vPos.s, vPos.t));\\n\\tgl_FragColor = vec4(textureColor.rgb, 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/test.frag\n// module id = 41\n// module chunks = 0","module.exports = \"precision mediump float;\\n\\nattribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aUv;\\n\\nvarying vec3 vPos;\\nvarying vec2 vUv;\\n\\n\\nvoid main(void) {\\n\\tvPos = aPosition;\\n\\tvec3 n = aNormal;\\n\\tvUv = aUv;\\n    gl_Position = vec4(aPosition, 1.0);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/shaders/test.vert\n// module id = 42\n// module chunks = 0","import ext from './GLExtensions';\n\nexport default class FrameBuffer\n{\n    constructor(width = 512, height = 512, texture)\n    {\n\n        this.gl = POLY.gl;\n        let gl = this.gl;\n\n        this.width = width;\n        this.height = height;\n\n        /*\n         CREATE FRAME BUFFER AND SET UP ALL OF ITS MEMORY\n        */\n\n        var floatTextures = ext.getExtension('OES_texture_float');\n\n        if (!ext.getExtension(\"OES_texture_float\")){\n          throw new Error( \"float textures not supported\" );\n        }\n\n        var halfFloat = ext.getExtension(\"OES_texture_half_float\");\n        let type = gl.UNSIGNED_BYTE;\n        const extHalfFloat = ext.getExtension('OES_texture_half_float');\n        ext.getExtension(\"OES_texture_float_linear\");\n\n        if (ext.checkExtension('OES_texture_float'))\n        {\n            type = gl.FLOAT;\n        }\n        else if(extHalfFloat) {\n            type = extHalfFloat.HALF_FLOAT_OES;\n        }\n\n            // if (mcgl.GL.isMobile && type === gl.FLOAT && extHalfFloat) {\n            //     type = extHalfFloat.HALF_FLOAT_OES;\n            // }\n\n        this.textures = [];\n        // create frame buffer and bind it\n        this.framebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n        // create an empty texture which can store the colour values\n\n        this.texture = gl.createTexture();\n        this.gltexture = new POLY.Texture(this.texture, true);\n        this.textures.push(this.gltexture);\n\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, this.width, this.height, 0, gl.RGB, type, null);\n\n        // create a renderbuffer (buffer associated to a frame buffer object), this one for the depth!\n        var renderBufferDepth = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderBufferDepth);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\n        // attach everything to the current frame buffer\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBufferDepth);\n\n\n        this.clean();\n    }\n\n    bind()\n    {\n        let gl = this.gl;\n        gl.viewport(0, 0, this.width, this.height);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    unbind()\n    {\n        let gl = this.gl;\n\n        gl.bindTexture(gl.TEXTURE_2D, this.gltexture._texture);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n\n    clean()\n    {\n        let gl = this.gl;\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    clear()\n    {\n        this.bind();\n\t    this.gl.clear(0,0,0,0);\n\t\tthis.unbind();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/FrameBuffer.js","import State from './State';\nimport GLExtensions from './GLExtensions';\n\nexport default new class GLTool\n{\n\tconstructor()\n\t{\n\t\tthis._lastMesh = null;\n\t\tthis._lastProgram = null;\n\t\tthis.aspectRatio = 0;\n\t\tthis.state = null;\n\t\tthis.enabledVertexAttributes = [];\n\t}\n\n\tinit(gl)\n\t{\n\t\tthis.state = new State(gl);\n\t\tGLExtensions.init();\n\t}\n\n\t_bindBuffers(mesh)\n\t{\n\t\tlet gl = mesh.program.gl;\n\n\t\tfor(let i = 0; i < mesh._attributes.length; i++)\n\t\t{\n\t\t\tlet attrib = mesh._attributes[i];\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n\t\t\tlet attribLocation = mesh.program.getAttributeLocation(attrib.name);\n\n    \t\tgl.vertexAttribPointer(attribLocation, attrib.itemSize, gl.FLOAT, false, 0, 0);\n\n\t\t\t// if(this.enabledVertexAttributes.indexOf(attribLocation) === -1)\n            // {\n                this.enabledVertexAttributes.push(attribLocation)\n                gl.enableVertexAttribArray(attribLocation); // NEVER FORGET THAT LINE (I did...)\n            // }\n\n\t\t}\n\n\t\tif(mesh.indexBuffer)\n\t\t{\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexBuffer);\n\t\t}\n\t}\n\n\tdraw(mesh)\n\t{\n\t\tif(this._lastMesh !== mesh)\n\t\t{\n\t\t\tthis._bindBuffers(mesh);\n\t\t\tthis._lastMesh = mesh;\n\t\t}\n\n\t\tif(this._lastProgram !== mesh.program)\n\t\t{\n\t\t\tthis._lastProgram = mesh.program;\n\t\t}\n\t\t\n\t\tmesh.update();\n\t\tlet gl = mesh.program.gl;\n\n\t\tif(mesh.state)\n\t\t{\n\t\t\tthis.state.setState(mesh.state);\n\t\t}\n\n\t\tif(mesh.indexBuffer)\n\t\t{\n\t\t\tgl.drawElements(mesh.drawType, mesh._indices.length, gl.UNSIGNED_SHORT, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgl.drawArrays(mesh.drawType, 0, mesh._numItems);\n\t\t}\n\t}\n\n\tresize(w, h)\n\t{\n\t\tlet gl = POLY.gl;\n\t\tgl.canvas.width = w;\n\t\tgl.canvas.height = h;\n\n\t\tgl.viewportWidth = w;\n        gl.viewportHeight = h;\n\t\tgl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n\n\t\tthis.aspectRatio = w/h;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/GLTool.js","export default class Program\n{\n    constructor(vertShader, fragShader, uniforms = {})\n    {\n        let gl = POLY.gl; // not sure that's great... :p\n        this.gl = gl;\n        // cache the locations of attributes and uniforms\n        this.cacheAttributesLocation = {}\n        this.cacheUniformsLocation = {}\n\n        // create the program itself\n        this.program = gl.createProgram();\n\n        let vert = this._createShader(vertShader, true);\n        let frag = this._createShader(fragShader, false);\n        this._attachShaders(vert, frag);\n\n        gl.linkProgram(this.program);\n\n        // check for errors\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS))\n        {\n            throw \"Couldn't initialise program\";\n        }\n\n        gl.useProgram(this.program);\n\n        this._createGetterSetterUniforms(uniforms);\n        for (let uniform in uniforms)\n        {\n            this.addUniformLocation(uniform);\n            let v = uniforms[uniform].value;\n            this.uniforms[uniform] = v;\n        }\n\n        this.bind();\n\n    }\n\n    bind()\n    {\n        this.gl.useProgram(this.program);\n    }\n\n    addUniformLocation(name)\n    {\n        this.cacheUniformsLocation[name] = this.gl.getUniformLocation(this.program, name);\n    }\n\n    getUniformLocation(name)\n    {\n        if(this.cacheUniformsLocation[name] !== undefined)\n        {\n            return this.cacheUniformsLocation[name];\n        }\n        else\n        {\n            this.addUniformLocation(name);\n\n            return this.getUniformLocation(name);\n        }\n    }\n\n\n    // create a this.uniforms property\n    // useful for the setter, we can just update the uniform when it gets changed\n    _createGetterSetterUniforms(uniforms)\n    {\n        let gl = this.gl;\n        let program = this.program;\n        let _this = this;\n\n        this.uniforms = new Proxy(uniforms, {\n            get: function(target, name)\n            {\n                if (!(name in target))\n                {\n                    console.log(\"Getting non-existant property '\" + name + \"'\");\n                    return undefined;\n                }\n\n                return target[name].value;\n            },\n            set: function(target, name, value)\n            {\n                if (!(name in target))\n                {\n                    console.log(\"Setting non-existant property '\" + name + \"', initial value: \" + value);\n\n                    return false;\n                }\n\n                // /!\\ TODO check Wen's GLShader.uniform() when it's not a number, seems more optimised\n                target[name].value = value;\n                let type = target[name].type;\n                let glFunction = POLY.CONST.uniformTypes[type];\n\n\n                if(type.indexOf('mat') === -1)\n                {\n                    if(type === 'texture')\n                    {\n                        gl[glFunction](_this.getUniformLocation(name), value, target[name].index);\n                    }\n                    else\n                    {\n                        gl[glFunction](_this.getUniformLocation(name), value);\n                    }\n                }\n                else\n                {\n                    gl[glFunction](_this.getUniformLocation(name), false, value);\n                }\n\n                return true;\n            }\n        });\n    }\n\n    addAttributeLocation(name)\n    {\n\n    //     if(shaderProgram.cacheAttribLoc === undefined) {\tshaderProgram.cacheAttribLoc = {};\t}\n\t// if(shaderProgram.cacheAttribLoc[name] === undefined) {\n\t// \tshaderProgram.cacheAttribLoc[name] = gl.getAttribLocation(shaderProgram, name);\n\t// }\n    //\n\t// return shaderProgram.cacheAttribLoc[name];\n        // console.log(this.cacheAttributesLocation[name], name);\n\n        if(this.cacheAttributesLocation[name] === undefined)\n        {\n            this.cacheAttributesLocation[name] = this.gl.getAttribLocation(this.program, name);\n        }\n    }\n\n    getAttributeLocation(name)\n    {\n        if(this.cacheAttributesLocation[name] !== undefined)\n        {\n            return this.cacheAttributesLocation[name];\n        }\n        else\n        {\n            this.addAttributeLocation(name);\n\n            return this.getAttributeLocation(name);\n        }\n    }\n\n    _attachShaders(vert, frag)\n    {\n        this.gl.attachShader(this.program, vert);\n        this.gl.attachShader(this.program, frag);\n    }\n\n    _createShader(src, isVertex)\n    {\n        let gl = this.gl;\n        let shader;\n        if (isVertex)\n        {\n            shader = gl.createShader(gl.VERTEX_SHADER);\n        }\n        else\n        {\n            shader = gl.createShader(gl.FRAGMENT_SHADER);\n        }\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            throw (\"Couldn't initialise shader, \", gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/Program.js","import { mat4, vec3 } from 'gl-matrix';\n\nclass Camera\n{\n    constructor()\n    {\n        this.aspectRatio = mat4.create();\n\n        this.matrix = mat4.create(); // changes on the camera\n        this.viewMatrix = mat4.create(); // move the world in front of the camera (inverse)\n        this.projectionMatrix = mat4.create();\n\n\n        this.mRX = mat4.create();\n        this.mRY = mat4.create();\n        this.mRZ = mat4.create();\n        this.mT = mat4.create();\n\n        this.position = vec3.create();\n    }\n\n    lookAt(target, up = [0, 1, 0])\n    {\n        mat4.lookAt(this.matrix, this.position, target, up);\n    }\n\n    rotateY(angle)\n    {\n        mat4.fromYRotation(this.mRY, angle);\n\n    }\n    rotateX(angle)\n    {\n        mat4.identity(this.mRX);\n        mat4.fromXRotation(this.mRX, angle);\n\n    }\n\n    rotateZ(angle)\n    {\n        mat4.identity(this.mRZ);\n        mat4.fromXRotation(this.mRZ, angle);\n\n    }\n\n    setRotation(x, y, z)\n    {\n    }\n\n    setPosition(x, y, z)\n    {\n        this.position = [x, y, z]\n        mat4.identity(this.mT, this.mT);\n        mat4.translate(this.mT, this.mT, [x, y, z]);\n    }\n\n    setAspectRatio(aspectRatio)\n    {\n        this.aspectRatio = aspectRatio;\n        this.perspective(this.fov, aspectRatio, this.near, this.far);\n    }\n\n    perspective(fov, aspect, near, far)\n    {\n        mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n\n        this.fov = fov;\n        this.near = near;\n        this.far = far;\n        this.aspect = aspect;\n    }\n\n    orthographic(left, right, bottom, top, near, far, dst)\n    {\n        dst = dst || new Float32Array(16);\n\n        dst[ 0] = 2 / (right - left);\n        dst[ 1] = 0;\n        dst[ 2] = 0;\n        dst[ 3] = 0;\n        dst[ 4] = 0;\n        dst[ 5] = 2 / (top - bottom);\n        dst[ 6] = 0;\n        dst[ 7] = 0;\n        dst[ 8] = 0;\n        dst[ 9] = 0;\n        dst[10] = 2 / (near - far);\n        dst[11] = 0;\n        dst[12] = (left + right) / (left - right);\n        dst[13] = (bottom + top) / (bottom - top);\n        dst[14] = (near + far) / (near - far);\n        dst[15] = 1;\n\n        return dst;\n    }\n}\n\nexport default Camera;\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/camera/Camera.js","import PerspectiveCamera from './Camera';\n\nexport default {\n\tPerspectiveCamera\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/camera/index.js","// https://github.com/yiwenl\n\nimport { vec3, mat4, quat } from 'gl-matrix';\n\nconst getCursorPos = function (e) {\n    if(e.touches) {\n        return {\n            x:e.touches[0].pageX,\n            y:e.touches[0].pageY\n        };\n    } else {\n        return {\n            x:e.clientX,\n            y:e.clientY\n        };\n    }\n};\n\nconst UP = vec3.fromValues(0, 1, 0);\nconst ANGLE_LIMIT = (Math.PI/2 - 0.01);\n\nclass OrbitalCameraControl {\n    constructor(mViewMatrix, mRadius = 5, mListenerTarget = window) {\n        this._mtxTarget = mViewMatrix;\n        this._radius = mRadius;\n        this._targetRadius = mRadius;\n        this._listenerTarget = mListenerTarget;\n        this._isDown = false;\n        this._rotation = mat4.create();\n        this.center = vec3.create();\n\n        this.easing = 0.1;\n        this.senstivity = 1;\n        this.senstivityRotation = 1;\n\n        this._isLocked = false;\n        this._isZoomLocked = false;\n        this._rx = 0;\n        this._trx = 0;\n        this._prevx = 0;\n        this._ry = 0;\n        this._try = 0;\n        this._prevy = 0;\n\n        this._quat = quat.create();\n        this._vec = vec3.create();\n        this._mtx = mat4.create();\n\n\n        this._mouseDown = {\n            x:0,\n            y:0\n        };\n\n        this._mouse = {\n            x:0,\n            y:0\n        };\n\n        this._init();\n    } \n\n\n    _init() {\n        this._listenerTarget.addEventListener('mousedown', (e) => this._onDown(e));\n        this._listenerTarget.addEventListener('mouseup', () => this._onUp());\n        this._listenerTarget.addEventListener('mousemove', (e) => this._onMove(e));\n\n        this._listenerTarget.addEventListener('touchstart', (e) => this._onDown(e));\n        this._listenerTarget.addEventListener('touchend', () => this._onUp());\n        this._listenerTarget.addEventListener('touchmove', (e) => this._onMove(e));\n\n        this._listenerTarget.addEventListener('mousewheel', (e) => this._onWheel(e));\n        this._listenerTarget.addEventListener('DOMMouseScroll', (e) => this._onWheel(e));\n    }\n\n\n    lock(mValue) {\n        this._isLocked = mValue;\n    }\n\n\n    lockZoom(mValue) {\n        this._isZoomLocked = mValue;\n    }\n\n\n    _onWheel(e) {\n        if(this._isZoomLocked) {\n            return;\n        }\n        const w = e.wheelDelta;\n        const d = e.detail;\n        let value = 0;\n        if (d) {\n            if (w) {\n                value = w / d / 40 * d > 0 ? 1 : -1; // Opera\n            } else {\n                value = -d / 3;              // Firefox;         TODO: do not /3 for OS X\n            }\n        } else {\n            value = w / 120; \n        }\n\n        this._targetRadius += (-value * 2 * this.senstivity);\n        if(this._targetRadius < 0.01) {\n            this._targetRadius = 0.01;\n        }\n    }\n\n\n    _onDown(e) {\n        if(this._isLocked) {    return;    }\n        this._isDown = true;\n\n        this._mouseDown = getCursorPos(e);\n        this._mouse = getCursorPos(e);\n\n        this._prevx = this._trx = this._rx;\n        this._prevy = this._try = this._ry;\n    }\n\n\n    _onMove(e) {\n        if(this._isLocked) {    return;    }\n        if(!this._isDown)    {    return;    }\n        this._mouse = getCursorPos(e);\n    }\n\n\n    _onUp() {\n        if(this._isLocked) {    return;    }\n        this._isDown = false;\n    }\n\n\n    update() {\n        const dx = this._mouse.x - this._mouseDown.x;\n        const dy = this._mouse.y - this._mouseDown.y;\n\n        const senstivity = 0.02 * this.senstivityRotation;\n        this._try = this._prevy - dx * senstivity;\n        this._trx = this._prevx - dy * senstivity;\n\n        if(this._trx < -Math.PI/2 + 0.01) {\n            this._trx = -Math.PI/2 + 0.01;\n        } else if(this._trx > Math.PI/2 - 0.01) {\n            this._trx = Math.PI/2 - 0.01;\n        }\n\n        this._rx += (this._trx - this._rx) * this.easing;\n        this._ry += (this._try - this._ry) * this.easing;\n        this._radius += (this._targetRadius - this._radius) * this.easing;\n\n        quat.identity(this._quat);        \n        quat.rotateY(this._quat, this._quat, this._ry);\n        quat.rotateX(this._quat, this._quat, this._rx);\n\n        vec3.set(this._vec, 0, 0, this._radius);\n        vec3.transformQuat(this._vec, this._vec, this._quat);\n\n        mat4.identity(this._mtx);\n        mat4.lookAt(this._mtx, this._vec, this.center, UP);\n\n\n        if(this._mtxTarget) {\n            mat4.copy(this._mtxTarget, this._mtx);\n        }\n    }\n\n}\n\n\nexport default OrbitalCameraControl\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/control/OrbitalControl.js","import OrbitalControl from './OrbitalControl';\n\nexport default \n{\n\tOrbitalControl\n}\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/control/index.js","export default class Vector\n{\n    constructor(cb)\n    {\n    \tthis.cb = cb;\n\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n\n        return this;\n    }\n\n    get x()\n    {\n    \treturn this._x;\n    }\n\n    set x(value)\n    {\n    \tthis._x = value;\n    \tif(this.cb) this.cb();\n    }\n\n    get y()\n    {\n    \treturn this._y;\n    }\n\n    set y(value)\n    {\n    \tthis._y = value;\n    \tif(this.cb) this.cb();\n    }\n\n    get z()\n    {\n    \treturn this._z;\n    }\n\n    set z(value)\n    {\n    \tthis._z = value;\n    \tif(this.cb) this.cb();\n    }\n\n    set(x, y, z)\n    {\n    \tif(!x) x = 0;\n\n    \tif(y === undefined)\n    \t{\n    \t\ty = z = x;\n    \t}\n\n    \tthis._x = x;\n    \tthis._y = y;\n    \tthis._z = z;\n\n    \tif(this.cb) this.cb();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/core/Vector.js","import Vector from './Vector'\n\nexport default {\n        Vector\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/core/index.js","import { mat3, mat4, vec3 } from 'gl-matrix';\nimport core from '../core';\n\nexport default class Object3D\n{\n    constructor()\n    {\n        this._matrix = mat4.create();\n        this._needsUpdate = false;\n\n        this.position = new core.Vector(this._onPropertyUpdate.bind(this));\n        this.scale = new core.Vector(this._onPropertyUpdate.bind(this));\n        this.scale.set(1,1,1);\n        this.rotation = new core.Vector(this._onPropertyUpdate.bind(this));\n\n        this._rotation = vec3.create();\n        this._scale = vec3.fromValues(1, 1, 1);\n        this._position = vec3.create();\n    }\n\n    _onPropertyUpdate()\n    {\n        this._needsUpdate = true;\n    }\n\n    _updateMatrix()\n    {    \n        vec3.set(this._scale, this.scale.x, this.scale.y, this.scale.z);\n        vec3.set(this._position, this.position.x, this.position.y, this.position.z);\n        vec3.set(this._rotation, this.rotation.x, this.rotation.y, this.rotation.z);\n\n        mat4.identity(this._matrix, this._matrix);\n        mat4.translate(this._matrix, this._matrix, this._position);\n        mat4.rotateX(this._matrix, this._matrix, this._rotation[0]);\n        mat4.rotateY(this._matrix, this._matrix, this._rotation[1]);\n        mat4.rotateZ(this._matrix, this._matrix, this._rotation[2]);\n        mat4.scale(this._matrix, this._matrix, this._scale);\n\n    }\n\n    update()\n    {\n        if(this._needsUpdate)\n        {\n            this._updateMatrix();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/Object3D.js","import Mesh from './Mesh';\nimport Cube from './mesh/Cube';\nimport Sphere from './mesh/Sphere';\nimport BigTriangle from './mesh/BigTriangle';\nimport Quad from './mesh/Quad';\n\nexport default {\n\tMesh,\n\tCube,\n\tSphere,\n\tBigTriangle,\n\tQuad\n}\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/index.js","import Mesh from '../Mesh';\nimport FacesMultiplicator from '../../utils/FacesMultiplicator';\nimport FacesSeparator from '../../utils/FacesSeparator';\n\nclass BigTriangle extends Mesh {\n  constructor(program, data={}, state, drawType = 4){\n\n    super(program, state, drawType)\n\n    const indices = [2, 1, 0];\n    const positions = [\n      -1, -1, \n      -1, 4, \n      4, -1\n    ];\n    \n    this.addPosition(positions);\n    this.addIndices(indices, false);\n  }\n}\n\nexport default BigTriangle;\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/mesh/BigTriangle.js","import Mesh from '../Mesh';\nimport FacesMultiplicator from '../../utils/FacesMultiplicator';\nimport FacesSeparator from '../../utils/FacesSeparator';\n\nclass Cube extends Mesh {\n  constructor(program, data={}, state, drawType = 4){\n\n    super(program, state, drawType)\n\n    this.options = \n    {\n      w: data.w || 1,\n      h: data.h || 1,\n      d: data.d || 1,\n      multiFace: data.multiFace,\n      subdivision: data.subdivision || 0,\n    }\n\n    this.multiFace = this.options.multiFace;\n\n    this.subdivision = this.options.subdivision;\n    this.width = this.options.w;\n    this.height = this.options.h;\n    this.depth = this.options.d;\n\n    this.cube();\n  }\n\n  cube(){\n    const x = this.width / 2;\n  \tconst y = this.height / 2;\n  \tconst z = this.depth / 2;\n\n  \tconst positions = [];\n  \tconst coords    = [];\n  \tconst indices   = [];\n  \tconst normals   = [];\n  \tlet count     = 0;\n\n\n  \t// BACK\n  \tpositions.push(-x,  y, -z);\n  \tpositions.push(x,  y, -z);\n  \tpositions.push(x, -y, -z);\n  \tpositions.push(-x, -y, -z);\n\n  \tnormals.push(0, 0, -1);\n  \tnormals.push(0, 0, -1);\n  \tnormals.push(0, 0, -1);\n  \tnormals.push(0, 0, -1);\n\n    if(this.multiFace){\n      coords.push(0, 0);\n    \tcoords.push(1/4, 0);\n    \tcoords.push(1/4, 1/2);\n    \tcoords.push(0, 1/2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n  \tcount ++;\n\n  \t// RIGHT\n  \tpositions.push(x,  y, -z);\n  \tpositions.push(x,  y,  z);\n  \tpositions.push(x, -y,  z);\n  \tpositions.push(x, -y, -z);\n\n  \tnormals.push(1, 0, 0);\n  \tnormals.push(1, 0, 0);\n  \tnormals.push(1, 0, 0);\n  \tnormals.push(1, 0, 0);\n\n    if(this.multiFace){\n      coords.push(1/4, 0);\n    \tcoords.push(1/4 * 2, 0);\n    \tcoords.push(1/4 * 2, 1/2);\n    \tcoords.push(1/4, 1/2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n  \tcount ++;\n\n  \t// FRONT\n  \tpositions.push(x,  y,  z);\n  \tpositions.push(-x,  y,  z);\n  \tpositions.push(-x, -y,  z);\n  \tpositions.push(x, -y,  z);\n\n  \tnormals.push(0, 0, 1);\n  \tnormals.push(0, 0, 1);\n  \tnormals.push(0, 0, 1);\n  \tnormals.push(0, 0, 1);\n\n    if(this.multiFace){\n      coords.push(1/4 * 2, 0);\n    \tcoords.push(1/4 * 3, 0);\n    \tcoords.push(1/4 * 3, 1/2);\n    \tcoords.push(1/4 * 2, 1/2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n  \tcount ++;\n\n  \t// LEFT\n  \tpositions.push(-x,  y,  z);\n  \tpositions.push(-x,  y, -z);\n  \tpositions.push(-x, -y, -z);\n  \tpositions.push(-x, -y,  z);\n\n  \tnormals.push(-1, 0, 0);\n  \tnormals.push(-1, 0, 0);\n  \tnormals.push(-1, 0, 0);\n  \tnormals.push(-1, 0, 0);\n\n    if(this.multiFace){\n      coords.push(0, 1/2);\n    \tcoords.push(1/4, 1/2);\n    \tcoords.push(1/4, 1/2 * 2);\n    \tcoords.push(0, 1/2 * 2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n  \tcount ++;\n\n  \t// TOP\n  \tpositions.push(-x,  y,  z);\n  \tpositions.push(x,  y,  z);\n  \tpositions.push(x,  y, -z);\n  \tpositions.push(-x,  y, -z);\n\n  \tnormals.push(0, 1, 0);\n  \tnormals.push(0, 1, 0);\n  \tnormals.push(0, 1, 0);\n  \tnormals.push(0, 1, 0);\n\n    if(this.multiFace){\n      coords.push(1/4, 1/2);\n    \tcoords.push(1/4 * 2, 1/2);\n    \tcoords.push(1/4 * 2, 1/2 * 2);\n    \tcoords.push(1/4, 1/2 * 2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n  \tcount ++;\n\n  \t// BOTTOM\n  \tpositions.push(-x, -y, -z);\n  \tpositions.push(x, -y, -z);\n  \tpositions.push(x, -y,  z);\n  \tpositions.push(-x, -y,  z);\n\n  \tnormals.push(0, -1, 0);\n  \tnormals.push(0, -1, 0);\n  \tnormals.push(0, -1, 0);\n  \tnormals.push(0, -1, 0);\n\n    if(this.multiFace){\n      coords.push(1/4 * 2, 1/2);\n    \tcoords.push(1/4 * 3, 1/2);\n    \tcoords.push(1/4 * 3, 1/2 * 2);\n    \tcoords.push(1/4 * 2, 1/2 * 2);\n    }\n    else {\n      coords.push(0, 0);\n      coords.push(1, 0);\n      coords.push(1, 1);\n      coords.push(0, 1);\n    }\n\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 1);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 0);\n  \tindices.push(count * 4 + 2);\n  \tindices.push(count * 4 + 3);\n\n    let ind = []\n\n    for (var i = 0; i < indices.length; i+=3) {\n      ind.push(indices[i], indices[i+1], indices[i+2])\n    }\n\n    // TODO this is a temporary fix\n    let faces = FacesMultiplicator.multiplyTriangles(this.subdivision, ind, positions);\n    let l = positions.length - coords.length\n    for (var i = 0; i < l; i++) {\n      coords.push(0, 0);\n      normals.push(0, -1, 0);\n    }\n\n    this.addPosition(positions);\n    this.addAttribute(coords, 'aUv', 2);\n    this.addAttribute(normals, 'aNormal', 3);\n    this.addIndices(faces, false);\n  }\n}\n\nexport default Cube;\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/mesh/Cube.js","import Mesh from '../Mesh';\n\nexport default class Quad extends Mesh\n{\n\tconstructor(program, data={}, state, drawType = 4)\n\t{\n\n\t    super(program, state, drawType);\n\n\t    this.addPosition([\n\t\t\t-1, -1, 0,\n\t\t\t-1,  1, 0,\n\t\t\t1,  1, 0,\n\t\t\t1, -1, 0\n\t\t]);\n\n\t\tthis.addAttribute([\n\t\t\t1.0, 0.0,\n\t\t\t1.0, 1.0,\n\t\t\t0.0, 1.0,\n\t\t\t0.0, 0.0,\n\t\t], 'aUv', 2);\n\t    //\n\t\tthis.addIndices(\n\t\t\t[0,1,2,0,2,3]\n\t\t);\n  \t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/mesh/Quad.js","import Mesh from '../Mesh';\n\nclass Sphere extends Mesh \n{\n  constructor(program, data={}, state, drawType){\n    super(program, state, drawType)\n\n    this.options = {\n      nbVert: data.nbVert || 10,\n      radius: data.radius || 1,\n    }\n\n    this.sphere();\n  }\n\n  sphere()\n  {\n    var positions = [];\n    var indices = [];\n    var index = 0;\n    var uv = []\n    var offset = 0;\n\n    let dTex = 1/ this.options.nbVert;\n\n    let angle;\n    for (var i = 0; i < this.options.nbVert; i++) \n    {\n      for (var j = 0; j < this.options.nbVert; j++) \n      {\n        angle = this.getAngle(i, j);\n        positions.push(angle[0], angle[1], angle[2]);\n\n        angle = this.getAngle(i + 1, j);\n        positions.push(angle[0], angle[1], angle[2]);\n\n        angle = this.getAngle(i + 1, j + 1);\n        positions.push(angle[0], angle[1], angle[2]);\n\n        angle = this.getAngle(i, j + 1);\n        positions.push(angle[0], angle[1], angle[2]);\n\n        const u = j / this.options.nbVert;\n\t\t\t  const v = i / this.options.nbVert;\n  \t\t\tuv.push(1.0 - u, v);\n  \t\t\tuv.push(1.0 - u, v + dTex);\n  \t\t\tuv.push(1.0 - u - dTex, v + dTex);\n  \t\t\tuv.push(1.0 - u - dTex, v);\n\n        indices.push(index * 4 + 0);\n        indices.push(index * 4 + 1);\n        indices.push(index * 4 + 2);\n        indices.push(index * 4 + 0);\n        indices.push(index * 4 + 2);\n        indices.push(index * 4 + 3);\n        index++;\n      }\n    }\n\n    this.addPosition(positions);\n    this.addAttribute(uv, 'aUv', 2);\n    this.addIndices(indices, false);\n  }\n\n  getAngle(i, j, isNormal = false) \n  {\t\n    //\trx : -90 ~ 90 , ry : 0 ~ 360\n    const ry        = j / this.options.nbVert * Math.PI * 2 - Math.PI;\n\t\tconst rx        = i / this.options.nbVert * Math.PI - Math.PI * 0.5;\n\t\tconst r         = this.options.radius;\n\t\tconst pos       = [];\n\t\tpos[1]        \t= Math.sin(rx) * r;\n\t\tconst t         = Math.cos(rx) * r;\n\t\tpos[0]        \t= Math.cos(ry) * t;\n\t\tpos[2]        \t= Math.sin(ry) * t;\n\n\n\t\treturn [pos[0], pos[1], pos[2]];\n\t}\n\n  render(){\n  }\n}\n\nexport default Sphere;\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/geometry/mesh/Sphere.js","import ext from '../GLExtensions';\n\nexport default class DataTexture\n{\n\tconstructor(data, width = 256, height = 256, format)\n\t{\n\t\tthis.gl = POLY.gl;\n\t\tlet gl = this.gl;\n\n\t\tformat = format || gl.RGBA;\n\n\t\tvar floatTextures = ext.getExtension('OES_texture_float');\n\n        if (!ext.getExtension(\"OES_texture_float\")){\n          throw new Error( \"float textures not supported\" );\n        }\n\n        var halfFloat = ext.getExtension(\"OES_texture_half_float\");\n        let type = gl.UNSIGNED_BYTE;\n        const extHalfFloat = ext.getExtension('OES_texture_half_float');\n        ext.getExtension(\"OES_texture_float_linear\");\n\n        if (ext.checkExtension('OES_texture_float'))\n        {\n            type = gl.FLOAT;\n        }\n        else if(extHalfFloat) {\n            type = extHalfFloat.HALF_FLOAT_OES;\n        }\n\n\t\tconsole.log(type, gl.FLOAT);\n\n\t\tthis._texture = gl.createTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, data);\n\n\t\tif(POLY.utils.isPowerOfTwo(width) && POLY.utils.isPowerOfTwo(height))\n  \t\t{\n  \t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n \t\t// gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT ) ;\n\t\t // gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT ) ;\n\n\t}\n\n\tbind(index = 0)\n\t{\n\t\tlet gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n    \tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/texture/DataTexture.js","\n\nexport default class Texture\n{\n\tconstructor(image, isTexture)\n\t{\n\t\tthis.gl = POLY.gl;\n\t\tlet gl = this.gl;\n\n\t\tif(isTexture)\n\t\t{\n\t\t\tthis._texture = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._texture = gl.createTexture();\n\n\t\t\t\n\t\t\tthis.image = new Image();\n\t\t\tthis.image.src = image;\n\n\t\t\tthis.image.addEventListener('load', this.onImageLoaded.bind(this, this.image))\n\t\t}\n\n\t}\n\n\tonImageLoaded(image)\n\t{\n\t\tlet gl = this.gl;\n\n\t\tvar ext = gl.getExtension('OES_texture_float');\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.FLOAT, image);\n\n  \t\tif(POLY.utils.isPowerOfTwo(image.width) && POLY.utils.isPowerOfTwo(image.height))\n  \t\t{\n  \t\t\tgl.generateMipmap(gl.TEXTURE_2D);\n  \t\t}\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n\n\tbind(index = 0)\n\t{\n\t\tlet gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n    \tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/texture/Texture.js","\nexport default new class Loop\n{\n\n\tconstructor()\n\t{\n\t\tthis._loops = [];\n\t\tthis._idLoop = 1;\n\n\t\tthis._active = false;\n\t}\n\n\tadd(func, scope)\n\t{\n\t\tlet id = this._idLoop;\n\t\tthis._loops.push({\n\t\t\tfunc,\n\t\t\tid,\n\t\t\tscope\n\t\t});\n\n\t\tif(!this._active)\n\t\t{\n\t\t\twindow.requestAnimationFrame(this._update.bind(this));\n\t\t\tthis.start();\n\t\t}\n\n\n\t\treturn id;\n\t}\n\n\tclear()\n\t{\n\t\tthis._loops = [];\n\t\tthis.stop();\n\t}\n\n\tstart()\n\t{\n\t\tthis._active = true;\n\t}\n\n\tstop()\n\t{\n\t\tthis._active = false;\n\t}\n\n\t_update()\n\t{\n\t\tif(this._active)\n\t\t{\n\t\t\twindow.requestAnimationFrame(this._update.bind(this));\n\n\t\t\tif(this._loops.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this._loops.length; i++) \n\t\t\t\t{\n\t\t\t\t\tthis._loops[i].func(this._loops[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.stop();\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/utils/Loop.js","import loop from './Loop';\nimport isPowerOfTwo from './isPowerOfTwo';\n\nexport {\n\tloop,\n\tisPowerOfTwo\n}\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/utils/index.js","let isPowerOfTwo = (value)=>\n{\n\n\tif(!(value & (value - 1)))\n\t{\n\t\treturn true;\n\t}\n\n\treturn false;\n\t// return !!(value & (value - 1) == 0);\n}\n\nexport default isPowerOfTwo;\n\n\n// WEBPACK FOOTER //\n// ../poly.js/src/poly/utils/isPowerOfTwo.js"],"sourceRoot":""}